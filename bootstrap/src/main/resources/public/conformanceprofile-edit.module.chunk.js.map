{"version":3,"sources":["/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-edit-routing.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-edit.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.resolver.ts"],"names":[],"mappings":"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","file":"conformanceprofile-edit.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n  /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n  border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.css\n// module chunks = conformanceprofile-edit.module","module.exports = \"<div *ngIf=\\\"segmentConformanceStatements\\\">\\n    <h1>Conformance Statements</h1>\\n    <form #csForm=\\\"ngForm\\\">\\n        <p-accordion (onOpen)=\\\"onTabOpen($event)\\\">\\n            <p-accordionTab header=\\\"List of Conformance Statements\\\" [(selected)]=\\\"listTab\\\">\\n                <p-table [columns]=\\\"cols\\\" [value]=\\\"segmentConformanceStatements.conformanceStatements\\\" [reorderableColumns]=\\\"true\\\" [resizableColumns]=\\\"true\\\">\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\n                        <tr>\\n                            <th style=\\\"width:3em\\\"></th>\\n\\n\\n                            <th *ngFor=\\\"let col of columns\\\" pReorderableColumn [pSortableColumn]=\\\"col.sort\\\" [ngStyle]=\\\"col.colStyle\\\" pResizableColumn>\\n                                {{col.header}}\\n                                <p-sortIcon *ngIf=\\\"col.colStyle\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n                            </th>\\n\\n                            <th style=\\\"width:15em\\\" pReorderableColumn>Actions</th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\n                        <tr [pReorderableRow]=\\\"index\\\">\\n                            <td>\\n                                <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\n                            </td>\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\">\\n                                <div *ngIf=\\\"col.field === 'identifier'\\\">\\n                                    {{rowData[col.field]}}\\n                                </div>\\n                                <div *ngIf=\\\"col.field === 'description'\\\">\\n                                    <div *ngIf=\\\"rowData['type'] === 'FREE'\\\">\\n                                        {{rowData['freeText']}}\\n                                    </div>\\n                                    <div *ngIf=\\\"rowData['type'] === 'ASSERTION'\\\">\\n                                        {{rowData['assertion'].description}}\\n                                    </div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-warning\\\" icon=\\\"fa-times\\\" label=\\\"Delete\\\" (click)=\\\"deleteCS(rowData['identifier'])\\\"></button>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-info\\\" icon=\\\"fa-pencil\\\" label=\\\"Edit\\\" (click)=\\\"selectCS(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n\\n\\n            </p-accordionTab>\\n            <p-accordionTab header=\\\"Conformance Statement Editor\\\" [(selected)]=\\\"editorTab\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Editor Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedConformanceStatement.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label for=\\\"id\\\">ID: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-10\\\">\\n                            <input id=\\\"id\\\" name=\\\"id\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"selectedConformanceStatement.identifier\\\" type=\\\"text\\\" #id=\\\"ngModel\\\" style=\\\"width:50%;\\\"/>\\n                            <div *ngIf=\\\"id.invalid && (id.dirty || id.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"id.errors.required\\\">\\n                                    Constraint Id is required.\\n                                </div>\\n                                <div *ngIf=\\\"id.errors.minlength\\\">\\n                                    Constraint Id must be at least 2 characters long.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type && selectedConformanceStatement.type ==='ASSERTION'\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label>Assertion Level: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-4\\\">\\n                            <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedConformanceStatement.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                            <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                    Assertion Type is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label>Complex Type: </label>\\n                        </div>\\n                        <div *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n                            <p-dropdown id=\\\"complexAssertionType\\\" name=\\\"complexAssertionType\\\" required #complexAssertionType=\\\"ngModel\\\" [options]=\\\"complexAssertionTypes\\\" [(ngModel)]=\\\"selectedConformanceStatement.assertion.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(selectedConformanceStatement.assertion)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n                            <div *ngIf=\\\"complexAssertionType.invalid && (complexAssertionType.dirty || complexAssertionType.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"complexAssertionType.errors.required\\\">\\n                                    Complex Type is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <edit-free-constraint *ngIf=\\\"selectedConformanceStatement.type === 'FREE'\\\" [constraint]=\\\"selectedConformanceStatement\\\"></edit-free-constraint>\\n                <edit-simple-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n                <edit-complex-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCS()\\\" [disabled]=\\\"csForm.invalid\\\"></button>\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"printCS(selectedConformanceStatement)\\\"></button>\\n            </p-accordionTab>\\n        </p-accordion>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.html\n// module chunks = conformanceprofile-edit.module","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport { _ } from 'underscore';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as __ from 'lodash';\n\n@Component({\n    templateUrl : './conformanceprofile-edit-conformancestatements.component.html',\n    styleUrls : ['./conformanceprofile-edit-conformancestatements.component.css']\n})\nexport class ConformanceprofileEditConformancestatementsComponent  implements WithSave{\n    cols:any;\n    currentUrl:any;\n    segmentId:any;\n    segmentConformanceStatements:any;\n    idMap: any;\n    treeData: any[];\n    constraintTypes: any = [];\n    assertionModes: any = [];\n    complexAssertionTypes: any[];\n    backup:any;\n\n    selectedConformanceStatement: any = {};\n\n    listTab: boolean = true;\n    editorTab: boolean = false;\n\n    @ViewChild('csForm')\n    private csForm: NgForm;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router : Router,\n        private segmentsService : SegmentsService,\n        private datatypesService : DatatypesService,\n        private configService : GeneralConfigurationService,\n        private constraintsService : ConstraintsService,\n    ){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n\n        this.cols = [\n            { field: 'identifier', header: 'ID', colStyle: {width: '20em'}, sort:'identifier'},\n            { field: 'description', header: 'Description' }\n        ];\n    }\n\n    ngOnInit() {\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n        this.complexAssertionTypes = this.configService._complexAssertionTypes;\n        this.idMap = {};\n        this.treeData = [];\n        this.segmentId = this.route.snapshot.params[\"segmentId\"];\n\n        this.route.data.map(data =>data.conformanceprofileConformanceStatements).subscribe(x=>{\n            this.segmentConformanceStatements= x;\n\n\n            this.segmentsService.getSegmentStructure(this.segmentId).then( segStructure  => {\n                this.idMap[this.segmentId] = {name:segStructure.name};\n\n                var rootData = {elementId:this.segmentId};\n\n                for (let child of segStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(rootData));\n                    childData.child = {\n                        elementId: child.data.id,\n                    };\n\n                    if(child.data.max === '1'){\n                        childData.child.instanceParameter = '1';\n                    }else{\n                        childData.child.instanceParameter = '*';\n                    }\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data : childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: child.data.max,\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n\n                    this.idMap[this.segmentId + '-' + data.id] = data;\n                    this.popChild(this.segmentId + '-' + data.id, data.dtId, treeNode);\n                    this.treeData.push(treeNode);\n\n                    this.backup=__.cloneDeep(this.segmentConformanceStatements);\n                }\n            });\n        });\n    }\n\n    reset(){\n        this.segmentConformanceStatements=__.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.segmentConformanceStatements;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.csForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.segmentsService.saveSegmentConformanceStatements(this.segmentId, this.segmentConformanceStatements);\n    }\n\n    popChild(id, dtId, parentTreeNode){\n\n        this.datatypesService.getDatatypeStructure(dtId).then( dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n\n\n        });\n\n\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    changeType(){\n        if(this.selectedConformanceStatement.type == 'ASSERTION'){\n            this.selectedConformanceStatement.assertion = {};\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.type == 'FREE'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINEDPATTERNS'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINED'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedConformanceStatement.assertion.mode == 'SIMPLE'){\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.assertion.mode == 'COMPLEX'){\n            this.selectedConformanceStatement.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    submitCS(){\n        if(this.selectedConformanceStatement.type === 'ASSERTION') this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedConformanceStatement.assertion, this.idMap);\n        this.deleteCS(this.selectedConformanceStatement.identifier);\n        this.segmentConformanceStatements.conformanceStatements.push(this.selectedConformanceStatement);\n        this.selectedConformanceStatement = {};\n        this.editorTab = false;\n        this.listTab = true;\n    }\n\n    selectCS(cs){\n        this.selectedConformanceStatement = JSON.parse(JSON.stringify(cs));\n        this.editorTab = true;\n        this.listTab = false;\n    }\n\n    deleteCS(identifier){\n        this.segmentConformanceStatements.conformanceStatements = _.without(this.segmentConformanceStatements.conformanceStatements, _.findWhere(this.segmentConformanceStatements.conformanceStatements, {identifier: identifier}));\n    }\n\n    printCS(cs){\n        console.log(cs);\n    }\n\n    onTabOpen(e) {\n        if(e.index === 0) this.selectedConformanceStatement = {};\n    }\n\n    changeComplexAssertionType(constraint){\n        if(constraint.complexAssertionType === 'ANDOR'){\n            constraint.child = undefined;\n            constraint.ifAssertion = undefined;\n            constraint.thenAssertion = undefined;\n            constraint.operator = 'AND';\n            constraint.assertions = [];\n            constraint.assertions.push({\n                \"mode\": \"SIMPLE\"\n            });\n\n            constraint.assertions.push({\n                \"mode\": \"SIMPLE\"\n            });\n        }else if(constraint.complexAssertionType === 'NOT'){\n            constraint.assertions = undefined;\n            constraint.ifAssertion = undefined;\n            constraint.thenAssertion = undefined;\n            constraint.child = {\n                \"mode\": \"SIMPLE\"\n            };\n        }else if(constraint.complexAssertionType === 'IFTHEN'){\n            constraint.assertions = undefined;\n            constraint.child = undefined;\n            constraint.ifAssertion = {\n                \"mode\": \"SIMPLE\"\n            };\n            constraint.thenAssertion = {\n                \"mode\": \"SIMPLE\"\n            };\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n@Injectable()\nexport  class ConformanceprofileEditConformancestatementsResolver implements Resolve<any>{\n    constructor(private http: HttpClient,private conformanceProfilesService: ConformanceProfilesService) {}\n\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let conformanceprofileId= route.params[\"conformanceprofileId\"];\n        return this.conformanceProfilesService.getConformanceProfileConformanceStatements(conformanceprofileId);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.resolver.ts","/**\n * Created by hnt5 on 10/23/17.\n */\nimport {RouterModule} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {ConformanceprofileEditMetadataComponent} from \"./conformanceprofile-metadata/conformanceprofile-edit-metadata.component\";\nimport {ConformanceprofileEditMetadatResolver} from \"./conformanceprofile-metadata/conformanceprofile-edit-metadata.resolver\";\nimport {SaveFormsGuard} from \"../../../guards/save.guard\";\nimport {ConformanceprofileEditPostdefComponent} from \"./conformanceprofile-postdef/conformanceprofile-edit-postdef.component\";\nimport {ConformanceprofileEditPostdefResolver} from \"./conformanceprofile-postdef/conformanceprofile-edit-postdef.resolver\";\nimport {ConformanceprofileEditPredefComponent} from \"./conformanceprofile-predef/conformanceprofile-edit-predef.component\";\nimport {ConformanceprofileEditPredefResolver} from \"./conformanceprofile-predef/conformanceprofile-edit-predef.resolver\";\nimport {ConformanceprofileEditStructureComponent} from \"./conformanceprofile-structure/conformanceprofile-edit-structure.component\";\nimport {ConformanceprofileEditStructureResolver} from \"./conformanceprofile-structure/conformanceprofile-edit-structure.resolver\";\nimport {ConformanceprofileEditConformancestatementsComponent} from \"./conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component\";\nimport {ConformanceprofileEditConformancestatementsResolver} from \"./conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.resolver\";\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n        {\n            path: ':conformanceprofileId', component: ConformanceprofileEditStructureComponent,  canDeactivate: [SaveFormsGuard],  resolve: { conformanceprofileStructure : ConformanceprofileEditStructureResolver}\n        },\n        {\n            path: ':conformanceprofileId/metadata', component: ConformanceprofileEditMetadataComponent,  canDeactivate: [SaveFormsGuard] ,resolve: { conformanceprofileMetadata : ConformanceprofileEditMetadatResolver}\n        },\n        {\n            path: ':conformanceprofileId/postDef', component: ConformanceprofileEditPostdefComponent,  canDeactivate: [SaveFormsGuard],  resolve: { conformanceprofilePostdef : ConformanceprofileEditPostdefResolver}\n        },\n        {\n            path: ':conformanceprofileId/preDef', component: ConformanceprofileEditPredefComponent,  canDeactivate: [SaveFormsGuard],  resolve: { conformanceprofilePredef : ConformanceprofileEditPredefResolver}\n        },\n        {\n            path: ':conformanceprofileId/structure', component: ConformanceprofileEditStructureComponent,  canDeactivate: [SaveFormsGuard],  resolve: { conformanceprofileStructure : ConformanceprofileEditStructureResolver}\n        },\n        {\n            path: ':segmentId/conformanceStatement', component: ConformanceprofileEditConformancestatementsComponent,  canDeactivate: [SaveFormsGuard],  resolve: { conformanceprofileConformanceStatements : ConformanceprofileEditConformancestatementsResolver}\n        }\n    ])\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ConformanceprofileEditRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-edit-routing.module.ts","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ConformanceprofileEditMetadataComponent} from \"./conformanceprofile-metadata/conformanceprofile-edit-metadata.component\";\nimport {ConformanceprofileEditRoutingModule} from \"./conformanceprofile-edit-routing.module\";\nimport {TabMenuModule} from \"primeng/components/tabmenu/tabmenu\";\nimport {TreeTableModule} from \"primeng/components/treetable/treetable\";\nimport {FormsModule} from \"@angular/forms\";\nimport {DialogModule} from \"primeng/components/dialog/dialog\";\nimport {DropdownModule} from \"primeng/components/dropdown/dropdown\";\nimport {ButtonModule} from 'primeng/button';\nimport {AccordionModule} from 'primeng/accordion';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {TableModule} from 'primeng/table';\nimport {UtilsModule} from \"../../../utils/utils.module\";\nimport {ConformanceprofileEditMetadatResolver} from \"./conformanceprofile-metadata/conformanceprofile-edit-metadata.resolver\";\nimport {FroalaEditorModule, FroalaViewModule} from 'angular-froala-wysiwyg';\nimport {MessageModule} from 'primeng/message';\nimport {ConformanceprofileEditPostdefResolver} from \"./conformanceprofile-postdef/conformanceprofile-edit-postdef.resolver\";\nimport {ConformanceprofileEditPostdefComponent} from \"./conformanceprofile-postdef/conformanceprofile-edit-postdef.component\";\nimport {ConformanceprofileEditPredefResolver} from \"./conformanceprofile-predef/conformanceprofile-edit-predef.resolver\";\nimport {ConformanceprofileEditPredefComponent} from \"./conformanceprofile-predef/conformanceprofile-edit-predef.component\";\nimport {ConformanceprofileEditStructureResolver} from \"./conformanceprofile-structure/conformanceprofile-edit-structure.resolver\";\nimport {ConformanceprofileEditStructureComponent} from \"./conformanceprofile-structure/conformanceprofile-edit-structure.component\";\nimport {ConformanceprofileEditConformancestatementsResolver} from \"./conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.resolver\";\nimport {ConformanceprofileEditConformancestatementsComponent} from \"./conformanceprofile-conformancestatements/conformanceprofile-edit-conformancestatements.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TabMenuModule,\n        DialogModule,\n        DropdownModule,\n        ConformanceprofileEditRoutingModule,\n        UtilsModule,\n        TreeTableModule,\n        ButtonModule,\n        AccordionModule,\n        SelectButtonModule,\n        TableModule,\n        FroalaEditorModule.forRoot(),\n        FroalaViewModule.forRoot(),\n        MessageModule\n    ],\n    providers : [ConformanceprofileEditMetadatResolver, ConformanceprofileEditPostdefResolver, ConformanceprofileEditPredefResolver, ConformanceprofileEditStructureResolver, ConformanceprofileEditConformancestatementsResolver],\n    declarations: [ConformanceprofileEditMetadataComponent, ConformanceprofileEditPostdefComponent, ConformanceprofileEditPredefComponent, ConformanceprofileEditStructureComponent, ConformanceprofileEditConformancestatementsComponent],\n    schemas : [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class ConformanceprofileEditModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-edit.module.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.css\n// module chunks = conformanceprofile-edit.module","module.exports = \"<h2>Conformance Profile Metadata</h2>\\n<div *ngIf=\\\"conformanceprofileMetadata\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Name\\n            </label>\\n            <input name=\\\"name\\\" id=\\\"name\\\" pInputText type=\\\"text\\\" disabled class=\\\"ui-g-10\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.name\\\" required />\\n            <div class=\\\"ui-g-offset-1\\\" *ngIf=\\\"name.invalid&& (name.dirty || name.touched)\\\">\\n                <p-message severity=\\\"error\\\" text=\\\"Name is required\\\"></p-message>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Identifier\\n            </label>\\n            <input name=\\\"identifier\\\" id=\\\"identifier\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #ext=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.identifier\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Description\\n            </label>\\n            <input name=\\\"description\\\" id=\\\"description\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.description\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Message Type\\n            </label>\\n            <input name=\\\"messageType\\\" id=\\\"messageType\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.messageType\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Message Event\\n            </label>\\n            <input name=\\\"messageEvent\\\" id=\\\"messageEvent\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.messageEvent\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Message Structure ID\\n            </label>\\n            <input name=\\\"structId\\\" id=\\\"structId\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"conformanceprofileMetadata.structId\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Author Notes\\n            </label>\\n            <div class=\\\"ui-g-10\\\" [froalaEditor] [(froalaModel)]=\\\"conformanceprofileMetadata.authorNote\\\"></div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Usage Notes\\n            </label>\\n            <div class=\\\"ui-g-10\\\" [froalaEditor] [(froalaModel)]=\\\"conformanceprofileMetadata.usageNote\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.html\n// module chunks = conformanceprofile-edit.module","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport * as _ from 'lodash';\n\nimport 'rxjs/add/operator/filter';\nimport {TocService} from \"../../service/toc.service\";\nimport {IndexedDbService} from \"../../../../service/indexed-db/indexed-db.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\nimport {ConformanceProfilesTocService} from \"../../../../service/indexed-db/conformance-profiles/conformance-profiles-toc.service\";\n\n\n\n@Component({\n  templateUrl : './conformanceprofile-edit-metadata.component.html',\n  styleUrls : ['./conformanceprofile-edit-metadata.component.css']\n})\nexport class ConformanceprofileEditMetadataComponent implements WithSave {\n    conformanceprofileId:any;\n    conformanceprofileMetadata:any;\n  backup:any;\n  currentNode:any;\n\n  @ViewChild('editForm')\n  private editForm: NgForm;\n\n  constructor(public indexedDbService: IndexedDbService, private route: ActivatedRoute, private  router : Router, private conformanceProfilesService : ConformanceProfilesService, private conformanceProfilesTocService:ConformanceProfilesTocService,private tocService:TocService){\n    this.tocService.getActiveNode().subscribe(x=>{\n      console.log(x);\n      this.currentNode=x;\n    });\n  }\n\n  ngOnInit() {\n    this.conformanceprofileId = this.route.snapshot.params[\"conformanceprofileId\"];\n    this.route.data.map(data =>data.conformanceprofileMetadata).subscribe(x=>{\n      this.conformanceProfilesTocService.getAll().then(conformanceprofiles=>{\n        console.log(conformanceprofiles);\n        this.backup=x;\n        this.conformanceprofileMetadata=_.cloneDeep(this.backup);\n      });\n\n    });\n  }\n\n  reset(){\n    this.conformanceprofileMetadata=_.cloneDeep(this.backup);\n  }\n\n  getCurrent(){\n   return  this.conformanceprofileMetadata;\n  }\n  getBackup(){\n    return this.backup;\n  }\n\n  isValid(){\n    return !this.editForm.invalid;\n  }\n  save(): Promise<any>{\n    this.tocService.getActiveNode().subscribe(x=>{\n      let node= x;\n      node.data.data.ext= _.cloneDeep(this.conformanceprofileMetadata.ext);\n    });\n\n    return this.conformanceProfilesService.saveConformanceProfileConformanceStatements(this.conformanceprofileId, this.conformanceprofileMetadata);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.component.ts","import {Injectable}  from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n@Injectable()\nexport  class ConformanceprofileEditMetadatResolver implements Resolve<any> {\n  constructor(private http: HttpClient, private conformanceProfilesService: ConformanceProfilesService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, rstate: RouterStateSnapshot): Promise<any> {\n    const conformanceprofileId = route.params['conformanceprofileId'];\n    return this.conformanceProfilesService.getConformanceProfileMetadata(conformanceprofileId);\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-metadata/conformanceprofile-edit-metadata.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.css\n// module chunks = conformanceprofile-edit.module","module.exports = \"<h2>Conformance Profile Post Definition TEXT</h2>\\n<div *ngIf=\\\"conformanceProfilePostdef\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"conformanceProfilePostdef.postDef\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.html\n// module chunks = conformanceprofile-edit.module","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {HttpClient} from \"@angular/common/http\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as _ from 'lodash';\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n@Component({\n  templateUrl : './conformanceprofile-edit-postdef.component.html',\n  styleUrls : ['./conformanceprofile-edit-postdef.component.css']\n})\n\nexport class ConformanceprofileEditPostdefComponent implements WithSave {\n    currentUrl:any;\n    conformanceprofileId:any;\n    conformanceProfilePostdef:any;\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private conformanceProfilesService : ConformanceProfilesService, private http:HttpClient){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.conformanceprofileId = this.route.snapshot.params[\"conformanceprofileId\"];\n        this.route.data.map(data =>data.conformanceprofilePostdef).subscribe(x=>{\n            this.backup=x;\n            this.conformanceProfilePostdef=_.cloneDeep(this.backup);\n        });\n    }\n\n    reset(){\n        this.conformanceProfilePostdef=_.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.conformanceProfilePostdef;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.editForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.conformanceProfilesService.saveConformanceProfilePostDef(this.conformanceprofileId, this.conformanceProfilePostdef);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.component.ts","import {Injectable}  from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n@Injectable()\nexport  class ConformanceprofileEditPostdefResolver implements Resolve<any>{\n    constructor(private http: HttpClient,private conformanceProfilesService: ConformanceProfilesService) {\n\n    }\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let conformanceprofileId= route.params[\"conformanceprofileId\"];\n        return this.conformanceProfilesService.getConformanceProfilePostDef(conformanceprofileId);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-postdef/conformanceprofile-edit-postdef.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.css\n// module chunks = conformanceprofile-edit.module","module.exports = \"<h2>Conformance Profile Pre Definition TEXT</h2>\\n<div *ngIf=\\\"conformanceprofilePredef\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"conformanceprofilePredef.preDef\\\"></div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.html\n// module chunks = conformanceprofile-edit.module","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {HttpClient} from \"@angular/common/http\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as _ from 'lodash';\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n\n@Component({\n  templateUrl : './conformanceprofile-edit-predef.component.html',\n  styleUrls : ['./conformanceprofile-edit-predef.component.css']\n})\nexport class ConformanceprofileEditPredefComponent implements WithSave {\n    currentUrl:any;\n    conformanceprofileId:any;\n    conformanceprofilePredef:any;\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private conformanceProfilesService : ConformanceProfilesService, private http:HttpClient){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.conformanceprofileId = this.route.snapshot.params[\"conformanceprofileId\"];\n        this.route.data.map(data =>data.conformanceprofilePredef).subscribe(x=>{\n            this.backup=x;\n            this.conformanceprofilePredef=_.cloneDeep(this.backup);\n        });\n    }\n\n    reset(){\n        this.conformanceprofilePredef=_.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.conformanceprofilePredef;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.editForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.conformanceProfilesService.saveConformanceProfilePreDef(this.conformanceprofileId, this.conformanceprofilePredef);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n@Injectable()\nexport  class ConformanceprofileEditPredefResolver implements Resolve<any>{\n\n\n  constructor(private http: HttpClient,private conformanceProfilesService: ConformanceProfilesService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n      let conformanceprofileId= route.params[\"conformanceprofileId\"];\n      return this.conformanceProfilesService.getConformanceProfilePreDef(conformanceprofileId);\n\n  }\n\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-predef/conformanceprofile-edit-predef.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.css\n// module chunks = conformanceprofile-edit.module","module.exports = \"<h2>Conformance Profile Structure</h2>\\n\\n<div *ngIf=\\\"conformanceprofileStructure\\\">\\n    <p-treeTable [value]=\\\"conformanceprofileStructure.children\\\" tableStyleClass=\\\"table-condensed table-stripped table-bordered\\\" (onNodeExpand)=\\\"loadNode($event)\\\">\\n\\n        <p-column header=\\\"Name\\\" [style]=\\\"{'width':'350px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'SEGMENT'\\\">\\n                    <display-badge [type]=\\\"node.data.displayData.type\\\"></display-badge>{{node.data.position}}. {{node.data.displayData.segment.label}}\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type !== 'SEGMENT'\\\">\\n                    <display-badge [type]=\\\"node.data.displayData.type\\\"></display-badge>{{node.data.position}}. {{node.data.name}}\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Usage\\\" [style]=\\\"{'width':'190px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\" >\\n                <div *ngIf=\\\"node.data.displayData.type === 'GROUP' || node.data.displayData.type === 'SEGMENT'\\\">\\n                    <p-dropdown *ngIf=\\\"node.data.usage !== 'C'\\\" [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '100%'}\\\"></p-dropdown>\\n                    <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                        <p-dropdown [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>\\n                        (<p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.messageBinding.predicate.trueUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>/\\n                        <p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.messageBinding.predicate.falseUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>)\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.segmentBinding|| !node.data.displayData.segmentBinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate\\\">C({{node.data.displayData.segmentBinding.predicate.trueUsage}}/{{node.data.displayData.segmentBinding.predicate.falseUsage}})</div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.fieldDTbinding|| !node.data.displayData.fieldDTbinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate\\\">C({{node.data.displayData.fieldDTbinding.predicate.trueUsage}}/{{node.data.displayData.fieldDTbinding.predicate.falseUsage}})</div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.componentDTbinding || !node.data.displayData.componentDTbinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate\\\">C({{node.data.displayData.componentDTbinding.predicate.trueUsage}}/{{node.data.displayData.componentDTbinding.predicate.falseUsage}})</div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Cardinality\\\" [style]=\\\"{'width':'100px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type !== 'COMPONENT' && node.data.displayData.type !== 'SUBCOMPONENT'\\\">\\n                    <input required id=\\\"min\\\" [(ngModel)]=\\\"node.data.min\\\" type=\\\"number\\\" #min=\\\"ngModel\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                    <input required id=\\\"max\\\" [(ngModel)]=\\\"node.data.max\\\" type=\\\"text\\\" #max=\\\"ngModel\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Length\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD' || node.data.displayData.type === 'COMPONENT' || node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    [{{node.data.minLength}}..{{node.data.maxLength}}]\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Conf. Length\\\" [style]=\\\"{'width':'120px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD' || node.data.displayData.type === 'COMPONENT' || node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    {{node.data.confLength}}\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n\\n        <p-column header=\\\"Datatype\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD' || node.data.displayData.type === 'COMPONENT' || node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    <display-ref [elm]=\\\"node.data.displayData.datatype\\\"></display-ref>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"ValueSet\\\" [style]=\\\"{'width':valuesetColumnWidth}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && !node.data.displayData.hasSingleCode\\\">\\n                    <div *ngIf=\\\"node.data.displayData.messageBinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.messageBinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'MESSAGE'\\\"></display-ref>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForValueSet(vs)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"delValueSetBinding(node.data.displayData.messageBinding, vs, node.data.displayData)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"vs.edit\\\">\\n                                <p-dropdown [options]=\\\"valuesetOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetId\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\" filter=\\\"true\\\">\\n                                    <ng-template let-option pTemplate=\\\"body\\\">\\n                                        <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\n                                            <display-ref *ngIf=\\\"option.value\\\" [elm]=\\\"getValueSetElm(option.value)\\\"></display-ref>\\n                                            <span *ngIf=\\\"!option.value\\\">{{option.label}}</span>\\n                                        </div>\\n                                    </ng-template>\\n                                </p-dropdown>\\n                                <p-dropdown [options]=\\\"valuesetStrengthOptions\\\" [(ngModel)]=\\\"vs.newvalue.strength\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <p-dropdown *ngIf=\\\"node.data.displayData.valueSetLocationOptions\\\" [options]=\\\"node.data.displayData.valueSetLocationOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetLocations\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewValueSet(vs); node.data.displayData.hasValueSet = true;\\\" [disabled]=\\\"!vs.newvalue.valuesetId\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.valuesetBindings || node.data.displayData.messageBinding.valuesetBindings.length === 0) && node.data.displayData.segmentBinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.segmentBinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'SEGMENT'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.valuesetBindings || node.data.displayData.messageBinding.valuesetBindings.length === 0) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.valuesetBindings || node.data.displayData.segmentBinding.valuesetBindings.length === 0) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.fieldDTbinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'FIELD'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.valuesetBindings || node.data.displayData.messageBinding.valuesetBindings.length === 0) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.valuesetBindings || node.data.displayData.segmentBinding.valuesetBindings.length === 0) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.valuesetBindings || node.data.displayData.fieldDTbinding.valuesetBindings.length === 0) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.componentDTbinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'COMPONENT'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"node.data.displayData.multipleValuesetAllowed || !node.data.displayData.messageBinding || !node.data.displayData.messageBinding.valuesetBindings || node.data.displayData.messageBinding.valuesetBindings.length == 0\\\" (click)=\\\"addNewValueSet(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Single Code\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && node.data.displayData.datatype.leaf && !node.data.displayData.hasValueSet\\\">\\n                    <div *ngIf=\\\"node.data.displayData.messageBinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.messageBinding.externalSingleCode\\\">\\n                            <div *ngIf=\\\"!node.data.displayData.messageBinding.externalSingleCode.edit\\\">\\n                                <display-singlecode [elm]=\\\"node.data.displayData.messageBinding.externalSingleCode\\\" [from]=\\\"'MESSAGE'\\\"></display-singlecode>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"deleteSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"node.data.displayData.messageBinding.externalSingleCode.edit\\\">\\n                                <input [(ngModel)]=\\\"node.data.displayData.messageBinding.externalSingleCode.newSingleCode\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <input [(ngModel)]=\\\"node.data.displayData.messageBinding.externalSingleCode.newSingleCodeSystem\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewSingleCode(node); node.data.displayData.hasSingleCode = true;\\\" [disabled]=\\\"node.data.displayData.messageBinding.externalSingleCode.newSingleCode === '' || node.data.displayData.messageBinding.externalSingleCode.newSingleCodeSystem === ''\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.externalSingleCode) && node.data.displayData.segmentBinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.segmentBinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.segmentBinding.externalSingleCode\\\" [from]=\\\"'SEGMENT'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.externalSingleCode) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.fieldDTbinding.externalSingleCode\\\" [from]=\\\"'FIELD'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.externalSingleCode) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.externalSingleCode) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\" [from]=\\\"'COMPONENT'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode\\\" (click)=\\\"addNewSingleCode(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Constant Value\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.datatype && node.data.displayData.datatype.leaf && !node.data.displayData.valuesetAllowed\\\">\\n                    <div *ngIf=\\\"node.data.displayData.messageBinding\\\">\\n                        <div *ngIf=\\\"!node.data.displayData.messageBinding.editConstantValue\\\">\\n                            <div *ngIf=\\\"node.data.displayData.messageBinding.constantValue\\\">\\n                                <display-constantvalue [elm]=\\\"node.data.displayData.messageBinding.constantValue\\\" [from]=\\\"'MESSAGE'\\\"></display-constantvalue>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"deleteConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.messageBinding.editConstantValue\\\">\\n                            <input [(ngModel)]=\\\"node.data.displayData.messageBinding.newConstantValue\\\" type=\\\"text\\\" style=\\\"width:90%;border-width:0px 0px 1px 0px\\\"/>\\n                            <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewConstantValue(node)\\\" [disabled]=\\\"node.data.displayData.messageBinding.newConstantValue === ''\\\"></button>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.constantValue) && node.data.displayData.segmentBinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.segmentBinding.constantValue !== undefined  && node.data.displayData.segmentBinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.segmentBinding.constantValue\\\" [from]=\\\"'SEGMENT'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.constantValue) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.constantValue) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding.constantValue !== undefined  && node.data.displayData.fieldDTbinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.fieldDTbinding.constantValue\\\" [from]=\\\"'FIELD'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.constantValue) && (!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.constantValue) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.constantValue) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.constantValue  !== undefined && node.data.displayData.componentDTbinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.componentDTbinding.constantValue\\\" [from]=\\\"'COMPONENT'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"!node.data.displayData.messageBinding || !node.data.displayData.messageBinding.editConstantValue\\\">\\n                        <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.messageBinding || (node.data.displayData.messageBinding && !node.data.displayData.messageBinding.constantValue)\\\" (click)=\\\"addNewConstantValue(node)\\\"></i>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Predicate\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                    <!--<div *ngIf=\\\"node.data.displayData.type === 'GROUP'\\\">-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.messageBinding && node.data.displayData.messageBinding.predicate && node.data.displayData.messageBinding.predicate.freeText\\\">-->\\n                            <!--{{node.data.displayData.messageBinding.predicate.freeText}}-->\\n                        <!--</div>-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.messageBinding && node.data.displayData.messageBinding.predicate && node.data.displayData.messageBinding.predicate.assertion && node.data.displayData.messageBinding.predicate.assertion.description\\\">-->\\n                            <!--{{node.data.displayData.messageBinding.predicate.assertion.description}}-->\\n                        <!--</div>-->\\n                    <!--</div>-->\\n                    <!--<div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate && node.data.displayData.segmentBinding.predicate.freeText\\\">-->\\n                            <!--{{node.data.displayData.segmentBinding.predicate.freeText}}-->\\n                        <!--</div>-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate && node.data.displayData.segmentBinding.predicate.assertion && node.data.displayData.segmentBinding.predicate.assertion.description\\\">-->\\n                            <!--{{node.data.displayData.segmentBinding.predicate.assertion.description}}-->\\n                        <!--</div>-->\\n                    <!--</div>-->\\n                    <!--<div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate && node.data.displayData.fieldDTbinding.predicate.freeText\\\">-->\\n                            <!--{{node.data.displayData.fieldDTbinding.predicate.freeText}}-->\\n                        <!--</div>-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate && node.data.displayData.fieldDTbinding.predicate.assertion && node.data.displayData.fieldDTbinding.predicate.assertion.description\\\">-->\\n                            <!--{{node.data.displayData.fieldDTbinding.predicate.assertion.description}}-->\\n                        <!--</div>-->\\n                    <!--</div>-->\\n                    <!--<div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.freeText\\\">-->\\n                            <!--{{node.data.displayData.componentDTbinding.predicate.freeText}}-->\\n                        <!--</div>-->\\n                        <!--<div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.assertion && node.data.displayData.componentDTbinding.predicate.assertion.description\\\">-->\\n                            <!--{{node.data.displayData.componentDTbinding.predicate.assertion.description}}-->\\n                        <!--</div>-->\\n                    <!--</div>-->\\n                    <i class=\\\"fa fa-pencil\\\" (click)=\\\"editPredicate(node)\\\" style=\\\"width:20%;\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Text Definition\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'GROUP' || node.data.displayData.type === 'SEGMENT'\\\">\\n                    <ng-container *ngIf=\\\"node.data.text\\\">\\n                        <span (click)=\\\"editTextDefinition(node)\\\">{{truncate(node.data.text)}}</span>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delTextDefinition(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!node.data.text\\\">\\n                        <i class=\\\"fa fa-pencil\\\" (click)=\\\"editTextDefinition(node)\\\"></i>\\n                    </ng-container>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Comment\\\" [style]=\\\"{'width':'400px'}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.messageBinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.messageBinding.comments\\\">\\n                        <div *ngIf=\\\"!c.edit\\\">\\n                            <display-comment [elm]=\\\"c\\\" [from]=\\\"'MESSAGE'\\\"></display-comment>\\n                            <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForComment(c)\\\" style=\\\"width:20%;\\\"></i>\\n                            <i class=\\\"fa fa-times\\\" (click)=\\\"delCommentBinding(node.data.displayData.messageBinding, c)\\\" style=\\\"width:20%;\\\"></i>\\n                        </div>\\n                        <div *ngIf=\\\"c.edit\\\">\\n                            <textarea pInputTextarea [(ngModel)]=\\\"c.newComment.description\\\"></textarea>\\n                            <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewComment(c);\\\" [disabled]=\\\"c.newComment.description === ''\\\"></button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.segmentBinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.segmentBinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'SEGMENT'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.fieldDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.fieldDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'FIELD'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.componentDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.componentDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'COMPONENT'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <i class=\\\"fa fa-plus\\\" (click)=\\\"addNewComment(node)\\\"></i>\\n            </ng-template>\\n        </p-column>\\n    </p-treeTable>\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Text Definition of {{selectedNode.data.name}}\\\" [(visible)]=\\\"textDefinitionDialogOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\">\\n        <textarea pInputTextarea [(ngModel)]=\\\"selectedNode.data.text\\\"></textarea>\\n    </p-dialog>\\n\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Predicate of {{selectedNode.data.name}}\\\" [(visible)]=\\\"preciateEditorOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"1200\\\" [minWidth]=\\\"800\\\" [minY]=\\\"70\\\">\\n        <form #cpForm=\\\"ngForm\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Editor Type: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedPredicate.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"selectedPredicate.type && selectedPredicate.type ==='ASSERTION'\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Assertion Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedPredicate.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                        <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                Assertion Type is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <edit-free-constraint *ngIf=\\\"selectedPredicate.type === 'FREE'\\\" [constraint]=\\\"selectedPredicate\\\"></edit-free-constraint>\\n            <edit-simple-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCP()\\\" [disabled]=\\\"cpForm.invalid\\\"></button>\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"print(selectedConformanceStatement)\\\"></button>\\n        </form>\\n    </p-dialog>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.html\n// module chunks = conformanceprofile-edit.module","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\n\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport {IndexedDbService} from \"../../../../service/indexed-db/indexed-db.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\n\nimport { _ } from 'underscore';\nimport {DatatypesTocService} from \"../../../../service/indexed-db/datatypes/datatypes-toc.service\";\nimport {ValuesetsTocService} from \"../../../../service/indexed-db/valuesets/valuesets-toc.service\";\n\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as __ from 'lodash';\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\nimport {ConformanceProfilesTocService} from \"../../../../service/indexed-db/conformance-profiles/conformance-profiles-toc.service\";\nimport {SegmentsTocService} from \"../../../../service/indexed-db/segments/segments-toc.service\";\n\n@Component({\n    templateUrl : './conformanceprofile-edit-structure.component.html',\n    styleUrls : ['./conformanceprofile-edit-structure.component.css']\n})\nexport class ConformanceprofileEditStructureComponent implements WithSave {\n    valuesetColumnWidth:string = '200px';\n    currentUrl:any;\n    conformanceprofileId:any;\n    conformanceprofileStructure:any;\n    usages:any;\n    cUsages:any;\n    textDefinitionDialogOpen:boolean = false;\n    selectedNode:any;\n    valuesetStrengthOptions:any = [];\n\n    preciateEditorOpen:boolean = false;\n\n    selectedPredicate: any = {};\n    constraintTypes: any = [];\n    assertionModes: any = [];\n    idMap: any;\n    treeData: any[];\n\n    datatypesLinks :any = [];\n    datatypesOptions:any = [];\n    segmentsLinks :any = [];\n    segmentsOptions:any = [];\n    valuesetsLinks :any = [];\n    valuesetOptions:any = [{label:'Select ValueSet', value:null}];\n\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(public indexedDbService: IndexedDbService,\n                private route: ActivatedRoute,\n                private router : Router,\n                private configService : GeneralConfigurationService,\n                private conformanceProfilesService : ConformanceProfilesService,\n                private segmentsService : SegmentsService,\n                private datatypesService : DatatypesService,\n                private constraintsService : ConstraintsService,\n                private datatypesTocService : DatatypesTocService,\n                private segmentsTocService : SegmentsTocService,\n                private valuesetsTocService : ValuesetsTocService,\n                private conformanceProfilesTocService : ConformanceProfilesTocService){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.conformanceprofileId = this.route.snapshot.params[\"conformanceprofileId\"];\n\n        this.usages = this.configService._usages;\n        this.cUsages = this.configService._cUsages;\n        this.valuesetStrengthOptions = this.configService._valuesetStrengthOptions;\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n\n        this.route.data.map(data =>data.conformanceprofileStructure).subscribe(x=>{\n            console.log(x);\n            this.segmentsTocService.getAll().then((segTOCdata) => {\n                let listTocSegs:any = segTOCdata;\n                for(let entry of listTocSegs){\n                    var treeObj = entry.data;\n\n                    var segLink:any = {};\n                    segLink.id = treeObj.key.id;\n                    segLink.label = treeObj.label;\n                    segLink.domainInfo = treeObj.domainInfo;\n                    var index = treeObj.label.indexOf(\"_\");\n                    if(index > -1){\n                        segLink.name = treeObj.label.substring(0,index);\n                        segLink.ext = treeObj.label.substring(index);;\n                    }else {\n                        segLink.name = treeObj.label;\n                        segLink.ext = null;\n                    }\n\n                    if(treeObj.lazyLoading) segLink.leaf = false;\n                    else segLink.leaf = true;\n                    this.segmentsLinks.push(segLink);\n\n                    var segOption = {label: segLink.label, value : segLink.id};\n                    this.segmentsOptions.push(segOption);\n                }\n\n                this.datatypesTocService.getAll().then((dtTOCdata) => {\n                    let listTocDts: any = dtTOCdata[0];\n                    for (let entry of listTocDts) {\n                        var treeObj = entry.data;\n\n                        var dtLink: any = {};\n                        dtLink.id = treeObj.key.id;\n                        dtLink.label = treeObj.label;\n                        dtLink.domainInfo = treeObj.domainInfo;\n                        var index = treeObj.label.indexOf(\"_\");\n                        if (index > -1) {\n                            dtLink.name = treeObj.label.substring(0, index);\n                            dtLink.ext = treeObj.label.substring(index);\n                            ;\n                        } else {\n                            dtLink.name = treeObj.label;\n                            dtLink.ext = null;\n                        }\n\n                        if (treeObj.lazyLoading) dtLink.leaf = false;\n                        else dtLink.leaf = true;\n                        this.datatypesLinks.push(dtLink);\n\n                        var dtOption = {label: dtLink.label, value: dtLink.id};\n                        this.datatypesOptions.push(dtOption);\n\n\n                        this.valuesetsTocService.getAll().then((valuesetTOCdata) => {\n                            let listTocVSs: any = valuesetTOCdata[0];\n\n                            for (let entry of listTocVSs) {\n                                var treeObj = entry.data;\n                                var valuesetLink: any = {};\n                                valuesetLink.id = treeObj.key.id;\n                                valuesetLink.label = treeObj.label;\n                                valuesetLink.domainInfo = treeObj.domainInfo;\n                                this.valuesetsLinks.push(valuesetLink);\n                                var vsOption = {label: valuesetLink.label, value: valuesetLink.id};\n                                this.valuesetOptions.push(vsOption);\n                            }\n\n                            this.conformanceprofileStructure = {};\n                            this.conformanceprofileStructure.name = x.name;\n\n                            this.updateMessage(x.children, x.binding, null);\n                            // this.updateDatatype(this.conformanceprofileStructure, x.children, x.binding, null, null, null, null, null, null);\n\n                            this.conformanceprofileStructure.children = x.children;\n                            this.backup=__.cloneDeep(this.conformanceprofileStructure);\n                        });\n                    }\n                });\n            });\n        });\n    }\n\n    reset(){\n        this.conformanceprofileStructure=__.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.conformanceprofileStructure;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return true;\n    }\n\n    save(): Promise<any>{\n        return this.conformanceProfilesService.saveConformanceProfileStructure(this.conformanceprofileId, this.conformanceprofileStructure);\n    }\n\n    updateMessage(children, currentBinding, parentFieldId){\n        for (let entry of children) {\n            if(!entry.data.displayData) entry.data.displayData = {};\n            entry.leaf = false;\n            if(parentFieldId === null){\n                entry.data.displayData.idPath = entry.data.id;\n            }else{\n                entry.data.displayData.idPath = parentFieldId + '-' + entry.data.id;\n            }\n\n            if(entry.data.type === 'GROUP'){\n                entry.data.displayData.type = 'GROUP';\n                this.updateMessage(entry.children, currentBinding, entry.data.displayData.idPath)\n            }else if (entry.data.type === 'SEGMENTREF'){\n                entry.data.displayData.type = 'SEGMENT';\n                entry.data.displayData.segment = this.getSegmentLink(entry.data.ref.id);\n            }\n        }\n    }\n\n    updateDatatype(node, children, currentBinding, parentFieldId, fieldDT, messageBinding, segmentBinding, fieldDTbinding, parentDTId, parentDTName, segmentName, type){\n        for (let entry of children) {\n            if(!entry.data.displayData) entry.data.displayData = {};\n            entry.data.displayData.datatype = this.getDatatypeLink(entry.data.ref.id);\n            entry.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(entry.data.displayData.datatype.name,entry.data.position, parentDTName, segmentName, entry.data.displayData.type);\n            entry.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(entry.data.displayData.datatype.name, entry.data.displayData.datatype.domainInfo.version);\n            if(entry.data.displayData.valuesetAllowed) entry.data.displayData.multipleValuesetAllowed =  this.configService.isMultipleValuseSetAllowed(entry.data.displayData.datatype.name);\n            if(entry.data.displayData.datatype.leaf) entry.leaf = true;\n            else entry.leaf = false;\n\n            if(parentFieldId === null){\n                entry.data.displayData.idPath = entry.data.id;\n            }else{\n                entry.data.displayData.idPath = parentFieldId + '-' + entry.data.id;\n            }\n\n            if(type === 'FIELD'){\n                    entry.data.displayData.type = 'FIELD';\n                    // entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath, currentBinding);\n                    // if(entry.data.usage === 'C' && !entry.data.displayData.segmentBinding) {\n                    //     entry.data.displayData.segmentBinding = {};\n                    // }\n                    // if(entry.data.usage === 'C' && !entry.data.displayData.segmentBinding.predicate){\n                    //     entry.data.displayData.segmentBinding.predicate = {};\n                    // }\n            }else if(type === 'COMPONENT'){\n                    entry.data.displayData.type = 'COMPONENT';\n                    entry.data.displayData.fieldDT = parentDTId;\n                //     entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], segmentBinding);\n                //     entry.data.displayData.fieldDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], currentBinding);\n            }else if(type === 'SUBCOMPONENT'){\n                    entry.data.displayData.type = \"SUBCOMPONENT\";\n                    entry.data.displayData.fieldDT = fieldDT;\n                    entry.data.displayData.componentDT = parentDTId;\n                    // entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], segmentBinding);\n                    // entry.data.displayData.fieldDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], fieldDTbinding);\n                    // entry.data.displayData.componentDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], currentBinding);\n            }\n\n            this.setHasSingleCode(entry.data.displayData);\n            this.setHasValueSet(entry.data.displayData);\n        }\n\n        node.children = children;\n    }\n\n    setHasSingleCode(displayData){\n        if(displayData.segmentBinding || displayData.fieldDTbinding || displayData.componentDTbinding){\n            if(displayData.segmentBinding && displayData.segmentBinding.internalSingleCode && displayData.segmentBinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.segmentBinding && displayData.segmentBinding.externalSingleCode && displayData.segmentBinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.internalSingleCode && displayData.fieldDTbinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.externalSingleCode && displayData.fieldDTbinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.internalSingleCode && displayData.componentDTbinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.externalSingleCode && displayData.componentDTbinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else {\n                displayData.hasSingleCode = false;\n            }\n        }else {\n            displayData.hasSingleCode = false;\n        }\n    }\n\n    setHasValueSet(displayData){\n        if(displayData.segmentBinding || displayData.fieldDTbinding || displayData.componentDTbinding){\n            if(displayData.segmentBinding && displayData.segmentBinding.valuesetBindings && displayData.segmentBinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.valuesetBindings && displayData.fieldDTbinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.valuesetBindings && displayData.componentDTbinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else {\n                displayData.hasValueSet = false;\n            }\n        }else {\n            displayData.hasValueSet = false;\n        }\n    }\n\n    getValueSetElm(id){\n        for(let link of this.valuesetsLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    getDatatypeElm(id){\n        for(let link of this.datatypesLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    addNewValueSet(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = [];\n        if(!node.data.displayData.segmentBinding.valuesetBindings) node.data.displayData.segmentBinding.valuesetBindings = [];\n\n        node.data.displayData.segmentBinding.valuesetBindings.push({edit:true, newvalue : {}});\n        this.valuesetColumnWidth = '500px';\n    }\n\n    updateValueSetBindings(binding){\n        var result = JSON.parse(JSON.stringify(binding));\n        if(result && result.valuesetBindings){\n            for(let vs of result.valuesetBindings){\n                var displayValueSetLink = this.getValueSetLink(vs.valuesetId);\n                // vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n                vs.label = displayValueSetLink.label;\n                vs.domainInfo = displayValueSetLink.domainInfo;\n            }\n        }\n        return result;\n    }\n\n    findBinding(id, binding){\n        if(binding && binding.children){\n            for(let b of binding.children){\n                if(b.elementId === id) return this.updateValueSetBindings(b);\n            }\n        }\n\n        return null;\n    }\n\n    delLength(node){\n        node.data.minLength = 'NA';\n        node.data.maxLength = 'NA';\n        node.data.confLength = '';\n    }\n\n    delConfLength(node){\n        node.data.minLength = '';\n        node.data.maxLength = '';\n        node.data.confLength = 'NA';\n    }\n\n    makeEditModeForDatatype(node){\n        node.data.displayData.datatype.edit = true;\n        node.data.displayData.datatype.dtOptions = [];\n\n        for (let dt of this.datatypesLinks) {\n            if(dt.name === node.data.displayData.datatype.name){\n                var dtOption = {label: dt.label, value : dt.id};\n                node.data.displayData.datatype.dtOptions.push(dtOption);\n            }\n        }\n        node.data.displayData.datatype.dtOptions.push({label: 'Change Datatype root', value : null});\n    }\n\n    loadNode(event) {\n        if(event.node && !event.node.children) {\n            if(event.node.data.type === 'SEGMENTREF'){\n                var segmentId = event.node.data.ref.id;\n                this.segmentsService.getSegmentStructure(segmentId).then(structure  => {\n                    this.updateDatatype(event.node, structure.children, structure.binding, event.node.data.displayData.idPath, null, event.node.data.displayData.messageBinding, null, null, null, null, structure.name, 'FIELD');\n                });\n            }else {\n                var datatypeId = event.node.data.ref.id;\n                this.datatypesService.getDatatypeStructure(datatypeId).then(structure  => {\n                    this.updateDatatype(event.node, structure.children, structure.binding, event.node.data.displayData.idPath, datatypeId, event.node.data.displayData.messageBinding, event.node.data.displayData.segmentBinding, event.node.data.displayData.fieldDTBinding, event.node.data.displayData.fieldDT, event.node.data.displayData.datatype.name, null, event.node.data.displayData.type);\n                });\n            }\n        }\n    }\n\n    onDatatypeChange(node){\n        if(!node.data.displayData.datatype.id) {\n            node.data.displayData.datatype.id = node.data.ref.id;\n        }\n        else node.data.ref.id = node.data.displayData.datatype.id;\n        node.data.displayData.datatype = this.getDatatypeLink(node.data.displayData.datatype.id);\n        node.children = null;\n        node.expanded = false;\n        if(node.data.displayData.datatype.leaf) node.leaf = true;\n        else node.leaf = false;\n        node.data.displayData.datatype.edit = false;\n\n\n        node.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(node.data.displayData.datatype.name,node.data.position, null, null, node.data.displayData.type);\n        node.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(node.data.displayData.datatype.name, node.data.displayData.datatype.domainInfo.version);\n    }\n\n    makeEditModeForValueSet(vs){\n        vs.newvalue = {};\n        vs.newvalue.valuesetId = vs.valuesetId;\n        vs.newvalue.strength = vs.strength;\n        vs.newvalue.valuesetLocations = vs.valuesetLocations;\n        vs.edit = true;\n        this.valuesetColumnWidth = '500px';\n    }\n\n    makeEditModeForComment(c){\n        c.newComment = {};\n        c.newComment.description = c.description;\n        c.edit = true;\n    }\n\n    addNewComment(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = [];\n        if(!node.data.displayData.segmentBinding.comments) node.data.displayData.segmentBinding.comments = [];\n        node.data.displayData.segmentBinding.comments.push({edit:true, newComment : {description:''}});\n    }\n\n    addNewSingleCode(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = {};\n        if(!node.data.displayData.segmentBinding.externalSingleCode) node.data.displayData.segmentBinding.externalSingleCode = {};\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCode = '';\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem = '';\n        node.data.displayData.segmentBinding.externalSingleCode.edit = true;\n    }\n\n    submitNewSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode.value = node.data.displayData.segmentBinding.externalSingleCode.newSingleCode;\n        node.data.displayData.segmentBinding.externalSingleCode.codeSystem = node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem;\n        node.data.displayData.segmentBinding.externalSingleCode.edit = false;\n    }\n\n    makeEditModeForSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCode = node.data.displayData.segmentBinding.externalSingleCode.value;\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem = node.data.displayData.segmentBinding.externalSingleCode.codeSystem;\n        node.data.displayData.segmentBinding.externalSingleCode.edit = true;\n    }\n\n    deleteSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode = null;\n        node.data.displayData.hasSingleCode = false;\n    }\n\n    addNewConstantValue(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = {};\n        node.data.displayData.segmentBinding.constantValue = null;\n        node.data.displayData.segmentBinding.newConstantValue= '';\n        node.data.displayData.segmentBinding.editConstantValue = true;\n\n        console.log(node);\n    }\n\n    deleteConstantValue(node){\n        node.data.displayData.segmentBinding.constantValue = null;\n        node.data.displayData.segmentBinding.editConstantValue = false;\n    }\n\n    makeEditModeForConstantValue(node){\n        node.data.displayData.segmentBinding.newConstantValue = node.data.displayData.segmentBinding.constantValue;\n        node.data.displayData.segmentBinding.editConstantValue = true;\n    }\n\n    submitNewConstantValue(node){\n        node.data.displayData.segmentBinding.constantValue = node.data.displayData.segmentBinding.newConstantValue;\n        node.data.displayData.segmentBinding.editConstantValue = false;\n    }\n\n    submitNewValueSet(vs){\n        var displayValueSetLink = this.getValueSetLink(vs.newvalue.valuesetId);\n        vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n        vs.label = displayValueSetLink.label;\n        vs.domainInfo = displayValueSetLink.domainInfo;\n        vs.valuesetId = vs.newvalue.valuesetId;\n        vs.strength = vs.newvalue.strength;\n        vs.valuesetLocations = vs.newvalue.valuesetLocations;\n        vs.edit = false;\n        this.valuesetColumnWidth = '200px';\n    }\n\n    submitNewComment(c){\n        c.description = c.newComment.description;\n        c.dateupdated = new Date();\n        c.edit = false;\n    }\n\n    delValueSetBinding(binding, vs, node){\n        binding.valuesetBindings = _.without(binding.valuesetBindings, _.findWhere(binding.valuesetBindings, {valuesetId: vs.valuesetId}));\n        this.setHasValueSet(node);\n    }\n\n    delCommentBinding(binding, c){\n        binding.comments = _.without(binding.comments, _.findWhere(binding.comments, c));\n    }\n\n    delTextDefinition(node){\n        node.data.text = null;\n    }\n\n    getDatatypeLink(id){\n        for (let dt of this.datatypesLinks) {\n            if(dt.id === id) return JSON.parse(JSON.stringify(dt));\n        }\n        console.log(\"Missing DT:::\" + id);\n        return null;\n    }\n\n    getSegmentLink(id){\n        for (let dt of this.segmentsLinks) {\n            if(dt.id === id) return JSON.parse(JSON.stringify(dt));\n        }\n        console.log(\"Missing SEG:::\" + id);\n        return null;\n    }\n\n    getValueSetLink(id){\n        for(let v of this.valuesetsLinks) {\n            if(v.id === id) return JSON.parse(JSON.stringify(v));\n        }\n        console.log(\"Missing ValueSet:::\" + id);\n        return null;\n    }\n\n    editTextDefinition(node){\n        this.selectedNode = node;\n        this.textDefinitionDialogOpen = true;\n    }\n\n    truncate(txt){\n        if(txt.length < 10) return txt;\n        else return txt.substring(0,10) + \"...\";\n    }\n\n    print(data){\n        console.log(data);\n    }\n\n    submitCP(){\n        if(this.selectedPredicate.type === 'ASSERTION') {\n            this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedPredicate.assertion, this.idMap);\n            this.selectedPredicate.assertion.description = 'If ' + this.selectedPredicate.assertion.description;\n            this.selectedPredicate.freeText = undefined;\n        }\n        if(!this.selectedNode.data.displayData.segmentBinding) this.selectedNode.data.displayData.segmentBinding = {};\n        this.selectedNode.data.displayData.segmentBinding.predicate = this.selectedPredicate;\n        this.preciateEditorOpen = false;\n        this.selectedPredicate = {};\n        this.selectedNode = null;\n    }\n\n    changeType(){\n        if(this.selectedPredicate.type == 'ASSERTION'){\n            this.selectedPredicate.assertion = {};\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.type == 'FREE'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINEDPATTERNS'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINED'){\n            this.selectedPredicate.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedPredicate.assertion.mode == 'SIMPLE'){\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.assertion.mode == 'COMPLEX'){\n            this.selectedPredicate.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    popChild(id, dtId, parentTreeNode){\n        this.datatypesService.getDatatypeStructure(dtId).then( dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n        });\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    onUsageChange(node){\n        if(node.data.usage === 'C') {\n            if(!node.data.displayData.segmentBinding) {\n                node.data.displayData.segmentBinding = {};\n            }\n            if(!node.data.displayData.segmentBinding.predicate){\n                node.data.displayData.segmentBinding.predicate = {};\n            }\n        }else if(node.data.usage !== 'C') {\n            if(node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate) {\n                node.data.displayData.segmentBinding.predicate = undefined;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.component.ts","import {Injectable}  from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {ConformanceProfilesService} from \"../../../../service/conformance-profiles/conformance-profiles.service\";\n\n\n@Injectable()\nexport  class ConformanceprofileEditStructureResolver implements Resolve<any>{\n    constructor(private http: HttpClient,private conformanceProfilesService: ConformanceProfilesService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let conformanceprofileId= route.params[\"conformanceprofileId\"];\n        return this.conformanceProfilesService.getConformanceProfileStructure(conformanceprofileId);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/conformanceprofile-edit/conformanceprofile-structure/conformanceprofile-edit-structure.resolver.ts"],"sourceRoot":"webpack:///"}
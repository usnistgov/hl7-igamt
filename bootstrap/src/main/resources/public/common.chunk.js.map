{"version":3,"sources":["/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constants/types.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/guards/save.guard.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-edit-routing.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-edit.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-definition/coconstraint-table/datatype-name.pipe.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-edit-routing.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-edit.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.css","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.html","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.resolver.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/service/toc.service.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/src/app/utils/utils.module.ts","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/editor.directive.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/editor.module.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/index.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/index.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/index.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/view.directive.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/view.module.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/accordion.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/button.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/checkbox.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/dialog.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/dropdown.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/panel.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/selectbutton.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/tree.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/add/operator/switchMap.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/operator/switchMap.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/operators/switchMap.js","/Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/underscore/underscore.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oBAAoB;AAC1F,uEAAuE,qBAAqB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oMAA6F,8BAA8B,EAAE;AAC7H;AACA,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,mEAAoB;AAC7B,SAAS,+DAAgB;AACzB,MAAM;AACN;AACA,0BAA0B,6DAAc;AACxC,yBAAyB,6DAAc;AACvC,+BAA+B,8DAAe;AAC9C,wBAAwB,8DAAe;AACvC;AACA;AACA,CAAC;AACO;AACR,4C;;;;;;;;;;;ACnRmB;AACa;AAChC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;ACnBgC;AACH;AAC7B,iC;;;;;;;;;;;;;;;;ACFmB;AACU;AACF;AACyB;AACJ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;AC1B8B;AACH;AAC3B,iC;;;;;;;;;;ACFiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,iEAAkB;AAC3B,SAAS,mEAAoB;AAC7B,MAAM;AACN;AACA,wBAAwB,6DAAc;AACtC;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;AClCmB;AACW;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;AACO;AACR,uC;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uF;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,iF;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,qF;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,iF;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,qF;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,+E;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,6F;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,6E;;;;;;;;;ACNA;AAAA;AACqB;AACD;AACpB;AACA;;;;;;;;;;ACJA;AAAA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;sDC9IA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA,KAAK;AACL;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAe;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,qBAAqB;AACrB;;AAEA;AACA;AACA,KAAK;AACL,iBAAiB;;AAEjB;AACA,kDAAkD,EAAE,iBAAiB;;AAErE;AACA,wBAAwB,8BAA8B;AACtD,2BAA2B;;AAE3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AAAA;AACL;AACA,CAAC","file":"common.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-sub-component {\\n  background-color: rgba(99, 187, 236, 0.91);\\n}\\n\\n.label-datatype {\\n  background-color: rgba(52, 242, 101, 0.91);\\n}\\n\\n.label-segment {\\n  background-color: #0f44f2;\\n}\\n\\n.label-field {\\n  background-color: #f24a08;\\n}\\n\\n.label-component {\\n  background-color: #f2c60d;\\n}\\n\\n.label-dynamicCase {\\n  background-color: #ff43d8;\\n}\\n\\n.label-gray {\\n  background-color: gray;\\n}\\n\\n.label-ig {\\n  background-color: purple;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.css\n// module id = ../../../../../src/app/common/badge/display-badge.component.css\n// module chunks = common","module.exports = \"<span *ngIf=\\\"type === 'field' || type === 'FIELD'\\\"  class=\\\"badge label-field\\\">F</span>\\n<span *ngIf=\\\"type === 'component' || type === 'COMPONENT'\\\" class=\\\"badge label-component\\\">C</span>\\n<span *ngIf=\\\"type === 'subcomponent' || type === 'SUBCOMPONENT'\\\" class=\\\"badge label-sub-component\\\">S</span>\\n<span *ngIf=\\\"type === 'segment' || type === 'SEGMENT'\\\" class=\\\"badge label-segment\\\">S</span>\\n<span *ngIf=\\\"type === 'group' || type === 'GROUP'\\\" class=\\\"badge label-group\\\">G</span>\\n<span *ngIf=\\\"type === 'datatype'\\\" class=\\\"badge label-datatype\\\">D</span>\\n<span *ngIf=\\\"type === 'document'\\\" class=\\\"badge label-ig\\\">IG</span>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.html\n// module id = ../../../../../src/app/common/badge/display-badge.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\n@Component({\n  selector : 'display-badge',\n  templateUrl : './display-badge.component.html',\n  styleUrls : ['./display-badge.component.css']\n})\nexport class DisplayBadgeComponent {\n  @Input() type : string;\n  @Input() size : string;\n\n  constructor(){}\n  ngOnInit(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/badge/display-badge.component.ts","/**\n * Created by ena3 on 6/5/18.\n */\nexport enum Types{\n  IGDOCUMENT=\"IGDOCUMENT\",\n  DATATYPEREGISTRY=\"DATATYPEREGISTRY\",\n  SEGMENTREGISTRY=\"SEGMENTREGISTRY\",\n  VALUESETREGISTRY=\"VALUESETREGISTRY\",\n  PROFILECOMPONENTREGISTRY=\"PROFILECOMPONENTREGISTRY\",\n  COMPOSITEPROFILEREGISTRY=\"COMPOSITEPROFILEREGISTRY\",\n  DATATYPE=\"DATATYPE\",\n  VALUESET=\"VALUESET\",\n  CONFORMANCEPROFILE=\"CONFORMANCEPROFILE\",\n  SEGMENT=\"SEGMENT\",\n  PROFILECOMPONENT=\"PROFILECOMPONENT\",\n  COMPOSITEPROFILE=\"COMPOSITEPROFILE\",\n  SEGMENTREF=\"SEGMENTREF\",\n  GROUP=\"GROUP\",\n  FIELD=\"FIELD\",\n  COMPONENT=\"COMPONENT\",\n  TEXT=\"TEXT\",\n  PROFILE=\"PROFILE\", CONFORMANCEPROFILEREGISTRY=\"CONFORMANCEPROFILEREGISTRY\",\n  DISPLAY=\"DISPLAY\",\n  EVENT=\"EVENT\",EVENTS=\"EVENTS\",\n  BINDING=\"BINDING\",\n  SECTION=\"SECTION\",\n  DYNAMICMAPPING=\"DYNAMICMAPPING\"\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constants/types.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.css\n// module id = ../../../../../src/app/common/constraint/display-path.component.css\n// module chunks = common","module.exports = \"<span *ngIf=\\\"path\\\" [ngModelGroup]=\\\"groupName\\\">{{getDisplayName()}}<span *ngIf=\\\"needInstanceParameter()\\\">[<input id=\\\"{{groupName}}-instanceParameter\\\" name=\\\"{{groupName}}-instanceParameter\\\" required [(ngModel)]=\\\"path.instanceParameter\\\" type=\\\"text\\\" style=\\\"width:20px;\\\"/>]</span><span *ngIf=\\\"path.child\\\">.</span><span *ngIf=\\\"!path.child\\\">({{label()}})<i class=\\\"fa fa-pencil\\\" (click)=\\\"displayPicker = true\\\"></i></span><display-path *ngIf=\\\"path.child\\\" [path]=\\\"path.child\\\" [parentPath]=\\\"getIdPath()\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [pathHolder]=\\\"pathHolder\\\" [groupName]=\\\"groupName + '-child'\\\"></display-path></span>\\n<span *ngIf=\\\"!path\\\">(Unselected Node)<i class=\\\"fa fa-pencil\\\" (click)=\\\"displayPicker = true\\\"></i></span>\\n\\n<p-dialog header=\\\"Select Node\\\" [(visible)]=\\\"displayPicker\\\">\\n    <p-tree [value]=\\\"treeData\\\" selectionMode=\\\"single\\\" (onNodeSelect)=\\\"nodeSelect($event)\\\"></p-tree>\\n</p-dialog>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.html\n// module id = ../../../../../src/app/common/constraint/display-path.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector : 'display-path',\n  templateUrl : './display-path.component.html',\n  styleUrls : ['./display-path.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class DisplayPathComponent {\n  @Input() parentPath: any;\n  @Input() path : any;\n  @Input() idMap : any;\n  @Input() treeData:any[];\n  @Input() pathHolder:any;\n  @Input() groupName: string;\n\n  selectedNode:any;\n  displayPicker: boolean = false;\n\n\n  constructor(){\n  }\n  ngOnInit(){\n  }\n\n  getIdPath(){\n    if(!this.parentPath) return this.path.elementId;\n    else return this.parentPath + \"-\" + this.path.elementId;\n  }\n\n  getDisplayName(){\n    if(!this.parentPath) return this.idMap[this.getIdPath()].name;\n    else return this.idMap[this.getIdPath()].position;\n  }\n\n  needInstanceParameter(){\n    if(!this.parentPath) {\n      return false;\n    }\n    else{\n      if(this.idMap[this.getIdPath()].max){\n        if(this.idMap[this.getIdPath()].max !== \"1\"){\n          return true;\n        }else return false;\n      }else {\n        return false;\n      }\n    }\n  }\n\n  label(){\n    if(!this.parentPath) {\n      return null;\n    }else {\n      return this.idMap[this.getIdPath()].name;\n    }\n  }\n\n  nodeSelect(event) {\n\n    this.pathHolder.path = JSON.parse(JSON.stringify(event.node.data));\n\n    this.displayPicker = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/display-path.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\\n\\n.circle-button {\\n    background-color: #4CAF50;\\n    border: none;\\n    color: white;\\n    padding: 0px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    margin: 4px 2px;\\n    border-radius: 50%;\\n    width: 80px !important;\\n    height: 80px !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-andorconstraint.component.css\n// module chunks = common","module.exports = \"<div [ngModelGroup]=\\\"groupName\\\">\\n    <div *ngFor=\\\"let child of constraint.assertions; let idx = index\\\">\\n        <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"idx!==0\\\">\\n            <div class=\\\"ui-g-12 ui-md-5\\\">\\n            </div>\\n            <div class=\\\"ui-g-12 ui-md-2\\\">\\n                <button pButton type=\\\"button\\\" label=\\\"{{constraint.operator}}\\\" class=\\\"green-btn circle-button\\\" (click)=\\\"changeOperator()\\\"></button>\\n            </div>\\n            <div class=\\\"ui-g-12 ui-md-5\\\">\\n            </div>\\n        </div>\\n\\n        <p-panel [toggleable]=\\\"true\\\" [ngModelGroup]=\\\"groupName + '-Child' + idx\\\">\\n            <p-header>\\n                [#{{idx + 1}}] Assertion <i class=\\\"fa fa-times\\\" *ngIf=\\\"constraint.assertions.length > 2\\\" (click)=\\\"constraint.assertions.splice(idx, 1)\\\"></i>\\n            </p-header>\\n\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>[#{{idx + 1}}] Child Assertion Level:</label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-4\\\">\\n                    <p-dropdown id=\\\"{{groupName}}-Child{{idx}}-mode\\\" name=\\\"{{groupName}}-Child{{idx}}-mode\\\" required [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"child.mode\\\" (onChange)=\\\"makeConstraintMode(child)\\\"></p-dropdown>\\n                </div>\\n\\n                <div *ngIf=\\\"child.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Complex Type: </label>\\n                </div>\\n                <div *ngIf=\\\"child.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n                    <p-dropdown id=\\\"{{groupName}}-Child{{idx}}-ComplextAssertionType\\\" name=\\\"{{groupName}}-Child{{idx}}-ComplextAssertionType\\\" required [options]=\\\"partialComplexAssertionTypes\\\" [(ngModel)]=\\\"child.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(child)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>[#{{idx + 1}}] Child Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    <edit-simple-constraint *ngIf=\\\"child.mode === 'SIMPLE'\\\" [constraint]=\\\"child\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-Child' + idx +'-simple'\\\"></edit-simple-constraint>\\n                    <edit-complex-constraint *ngIf=\\\"child.mode === 'COMPLEX'\\\" [constraint]=\\\"child\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [limited]=\\\"true\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-Child' + idx +'-complex'\\\"></edit-complex-constraint>\\n                </div>\\n            </div>\\n        </p-panel>\\n\\n        <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"idx===constraint.assertions.length - 1\\\">\\n            <div class=\\\"ui-g-12 ui-md-5\\\">\\n            </div>\\n            <div class=\\\"ui-g-12 ui-md-2\\\">\\n                <button pButton type=\\\"button\\\" icon=\\\"fa-plus\\\" class=\\\"blue-btn circle-button\\\" (click)=\\\"addConstraint()\\\"></button>\\n            </div>\\n            <div class=\\\"ui-g-12 ui-md-5\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-andorconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport {GeneralConfigurationService} from \"../../service/general-configuration/general-configuration.service\";\n\n@Component({\n  selector : 'edit-andor-constraint',\n  templateUrl : './edit-andorconstraint.component.html',\n  styleUrls : ['./edit-andorconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditAndOrConstraintComponent {\n  @Input() constraint : any;\n  @Input() idMap : any;\n  @Input() treeData : any[];\n  @Input() ifVerb: boolean;\n  @Input() groupName: string;\n\n  partialComplexAssertionTypes: any[];\n  simpleAssertionTypes: any[];\n  verbs: any[];\n  operators: any[];\n  formatTypes:any[];\n  andorOptions:any[];\n  assertionModes:any[];\n\n  constructor(private configService : GeneralConfigurationService){}\n\n  ngOnInit(){\n    this.andorOptions = [\n      {label: 'AND', value: 'AND'},\n      {label: 'OR', value: 'OR'}\n    ];\n    this.verbs = this.configService._simpleConstraintVerbs;\n    this.operators = this.configService._operators;\n    this.formatTypes = this.configService._formatTypes;\n    this.simpleAssertionTypes = this.configService._simpleAssertionTypes;\n    this.partialComplexAssertionTypes = this.configService._partialComplexAssertionTypes;\n    this.assertionModes = this.configService._assertionModes;\n  }\n\n  changeOperator(){\n    if(!this.constraint.assertions) {\n      this.constraint.assertions = [];\n      this.constraint.operator = 'AND';\n    }\n\n    if(this.constraint.operator === 'AND') this.constraint.operator = 'OR';\n    else if(this.constraint.operator === 'OR') this.constraint.operator = 'AND';\n  }\n\n  addConstraint() {\n    this.constraint.assertions.push({mode : 'SIMPLE'});\n  }\n\n  makeConstraintMode(constraint) {\n    constraint.complement = undefined;\n    constraint.subject = undefined;\n    constraint.complexAssertionType = undefined;\n    constraint.assertions = undefined;\n    constraint.child = undefined;\n    constraint.ifAssertion = undefined;\n    constraint.thenAssertion = undefined;\n    constraint.operator = undefined;\n    constraint.verbKey = undefined;\n  }\n\n  changeComplexAssertionType(constraint){\n    if(constraint.complexAssertionType === 'ANDOR'){\n      constraint.child = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.operator = 'AND';\n      constraint.assertions = [];\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n    }else if(constraint.complexAssertionType === 'NOT'){\n      constraint.assertions = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.child = {\n        \"mode\": \"SIMPLE\"\n      };\n    }else if(constraint.complexAssertionType === 'IFTHEN'){\n      constraint.assertions = undefined;\n      constraint.child = undefined;\n      constraint.ifAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n      constraint.thenAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-andorconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-complexconstraint.component.css\n// module chunks = common","module.exports = \"<p-panel class=\\\"border\\\" header=\\\"Complex Assertion\\\" [toggleable]=\\\"true\\\" [ngModelGroup]=\\\"groupName\\\">\\n    <div *ngIf=\\\"constraint.complexAssertionType\\\">\\n        <edit-ifthen-constraint *ngIf=\\\"constraint.complexAssertionType === 'IFTHEN'\\\" [constraint]=\\\"constraint\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName + '-IFTHEN'\\\"></edit-ifthen-constraint>\\n        <edit-andor-constraint *ngIf=\\\"constraint.complexAssertionType === 'ANDOR'\\\" [constraint]=\\\"constraint\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-ANDOR'\\\"></edit-andor-constraint>\\n        <edit-not-constraint *ngIf=\\\"constraint.complexAssertionType === 'NOT'\\\" [constraint]=\\\"constraint\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-NOT'\\\"></edit-not-constraint>\\n    </div>\\n</p-panel>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-complexconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport {GeneralConfigurationService} from \"../../service/general-configuration/general-configuration.service\";\n\n@Component({\n  selector : 'edit-complex-constraint',\n  templateUrl : './edit-complexconstraint.component.html',\n  styleUrls : ['./edit-complexconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditComplexConstraintComponent {\n  @Input() constraint : any;\n  @Input() idMap : any;\n  @Input() treeData : any[];\n  @Input() limited : boolean;\n  @Input() ifVerb: boolean;\n  @Input() groupName: string;\n\n  complexAssertionTypes: any[];\n  simpleAssertionTypes: any[];\n  verbs: any[];\n  operators: any[];\n  formatTypes:any[];\n\n  constructor(private configService : GeneralConfigurationService){}\n\n  ngOnInit(){\n    this.verbs = this.configService._simpleConstraintVerbs;\n    this.operators = this.configService._operators;\n    this.formatTypes = this.configService._formatTypes;\n    this.simpleAssertionTypes = this.configService._simpleAssertionTypes;\n    if(this.limited){\n      this.complexAssertionTypes = this.configService._partialComplexAssertionTypes;\n    }else {\n      this.complexAssertionTypes = this.configService._complexAssertionTypes;\n    }\n\n  }\n\n  changeComplexAssertionType(){\n    if(this.constraint.complexAssertionType === 'ANDOR'){\n      this.constraint.child = undefined;\n      this.constraint.ifAssertion = undefined;\n      this.constraint.thenAssertion = undefined;\n      this.constraint.operator = 'AND';\n      this.constraint.assertions = [];\n      this.constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n\n      this.constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n    }else if(this.constraint.complexAssertionType === 'NOT'){\n      this.constraint.assertions = undefined;\n      this.constraint.ifAssertion = undefined;\n      this.constraint.thenAssertion = undefined;\n      this.constraint.child = {\n        \"mode\": \"SIMPLE\"\n      };\n    }else if(this.constraint.complexAssertionType === 'IFTHEN'){\n      this.constraint.assertions = undefined;\n      this.constraint.child = undefined;\n      this.constraint.ifAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n      this.constraint.thenAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-complexconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-freeconstraint.component.css\n// module chunks = common","module.exports = \"<div ngModelGroup=\\\"freeText\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label for=\\\"freetext\\\">Free Text: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-10\\\">\\n            <input id=\\\"freetext\\\" name=\\\"freetext\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"constraint.freeText\\\" type=\\\"text\\\" #freetext=\\\"ngModel\\\"/>\\n            <div *ngIf=\\\"freetext.invalid && (freetext.dirty || freetext.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"freetext.errors.required\\\">\\n                    Free Text is required.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-freeconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector : 'edit-free-constraint',\n  templateUrl : './edit-freeconstraint.component.html',\n  styleUrls : ['./edit-freeconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditFreeConstraintComponent {\n  @Input() constraint : any;\n\n  constructor(){}\n  ngOnInit(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-freeconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-ifthenconstraint.component.css\n// module chunks = common","module.exports = \"<div [ngModelGroup]=\\\"groupName\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>IF Assertion Level: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"ifAssertionMode\\\" name=\\\"ifAssertionMode\\\" required #ifAssertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"constraint.ifAssertion.mode\\\" (onChange)=\\\"makeConstraintMode(constraint.ifAssertion)\\\"></p-dropdown>\\n        </div>\\n        <div *ngIf=\\\"constraint.ifAssertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>Complex Type: </label>\\n        </div>\\n        <div *ngIf=\\\"constraint.ifAssertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"ifComplextAssertionType\\\" name=\\\"ifComplextAssertionType\\\" required #ifComplextAssertionType=\\\"ngModel\\\" [options]=\\\"limitedComplexAssertionTypes\\\" [(ngModel)]=\\\"constraint.ifAssertion.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(constraint.ifAssertion)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n            <div *ngIf=\\\"ifComplextAssertionType.invalid && (ifComplextAssertionType.dirty || ifComplextAssertionType.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"ifComplextAssertionType.errors.required\\\">\\n                    Complex Type is required.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>IF Assertion: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-10\\\">\\n            <edit-simple-constraint *ngIf=\\\"constraint.ifAssertion.mode === 'SIMPLE'\\\" [constraint]=\\\"constraint.ifAssertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [ifVerb]=\\\"true\\\" [groupName]=\\\"groupName + '-ifSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"constraint.ifAssertion.mode === 'COMPLEX'\\\" [constraint]=\\\"constraint.ifAssertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [limited]=\\\"true\\\" [ifVerb]=\\\"true\\\" [groupName]=\\\"groupName + '-ifComplex'\\\"></edit-complex-constraint>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>THEN Assertion Level: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"thenAssertionMode\\\" name=\\\"thenAssertionMode\\\" required #thenAssertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"constraint.thenAssertion.mode\\\" (onChange)=\\\"makeConstraintMode(constraint.thenAssertion)\\\"></p-dropdown>\\n        </div>\\n        <div *ngIf=\\\"constraint.thenAssertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>Complex Type: </label>\\n        </div>\\n        <div *ngIf=\\\"constraint.thenAssertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"thenComplextAssertionType\\\" name=\\\"thenComplextAssertionType\\\" required #thenComplextAssertionType=\\\"ngModel\\\" [options]=\\\"limitedComplexAssertionTypes\\\" [(ngModel)]=\\\"constraint.thenAssertion.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(constraint.thenAssertion)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n            <div *ngIf=\\\"thenComplextAssertionType.invalid && (thenComplextAssertionType.dirty || thenComplextAssertionType.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"thenComplextAssertionType.errors.required\\\">\\n                    Complex Type is required.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>THEN Assertion: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-10\\\">\\n            <edit-simple-constraint *ngIf=\\\"constraint.thenAssertion.mode === 'SIMPLE'\\\" [constraint]=\\\"constraint.thenAssertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName + '-thenSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"constraint.thenAssertion.mode === 'COMPLEX'\\\" [constraint]=\\\"constraint.thenAssertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [limited]=\\\"true\\\" [groupName]=\\\"groupName + '-thenComplex'\\\"></edit-complex-constraint>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-ifthenconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport {GeneralConfigurationService} from \"../../service/general-configuration/general-configuration.service\";\n\n@Component({\n  selector : 'edit-ifthen-constraint',\n  templateUrl : './edit-ifthenconstraint.component.html',\n  styleUrls : ['./edit-ifthenconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditIfThenConstraintComponent {\n  @Input() constraint : any;\n  @Input() idMap : any;\n  @Input() treeData : any[];\n  @Input() groupName: string;\n  partialComplexAssertionTypes: any[];\n  simpleAssertionTypes: any[];\n  limitedComplexAssertionTypes: any[];\n  verbs: any[];\n  operators: any[];\n  formatTypes:any[];\n  andorOptions:any[];\n  assertionModes:any[];\n\n  constructor(private configService : GeneralConfigurationService){}\n\n  ngOnInit(){\n\n    this.assertionModes = this.configService._assertionModes;\n    this.andorOptions = [\n      {label: 'AND', value: 'AND'},\n      {label: 'OR', value: 'OR'}\n    ];\n    this.verbs = this.configService._simpleConstraintVerbs;\n    this.operators = this.configService._operators;\n    this.formatTypes = this.configService._formatTypes;\n    this.simpleAssertionTypes = this.configService._simpleAssertionTypes;\n    this.partialComplexAssertionTypes = this.configService._partialComplexAssertionTypes;\n    this.limitedComplexAssertionTypes = this.configService._partialComplexAssertionTypes;\n  }\n\n  makeConstraintMode(constraint) {\n    constraint.complement = undefined;\n    constraint.subject = undefined;\n    constraint.complexAssertionType = undefined;\n    constraint.assertions = undefined;\n    constraint.child = undefined;\n    constraint.ifAssertion = undefined;\n    constraint.thenAssertion = undefined;\n    constraint.operator = undefined;\n    constraint.verbKey = undefined;\n  }\n\n  changeComplexAssertionType(constraint){\n    if(constraint.complexAssertionType === 'ANDOR'){\n      constraint.child = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.operator = 'AND';\n      constraint.assertions = [];\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n    }else if(constraint.complexAssertionType === 'NOT'){\n      constraint.assertions = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.child = {\n        \"mode\": \"SIMPLE\"\n      };\n    }else if(constraint.complexAssertionType === 'IFTHEN'){\n      constraint.assertions = undefined;\n      constraint.child = undefined;\n      constraint.ifAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n      constraint.thenAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-ifthenconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-notconstraint.component.css\n// module chunks = common","module.exports = \"<div [ngModelGroup]=\\\"groupName\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>NOT Assertion Level: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"notChildMode\\\" name=\\\"notChildMode\\\" required #notChildMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"constraint.child.mode\\\" (onChange)=\\\"makeConstraintMode(constraint.child)\\\"></p-dropdown>\\n        </div>\\n        <div *ngIf=\\\"constraint.child.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>Complex Type: </label>\\n        </div>\\n        <div *ngIf=\\\"constraint.child.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n            <p-dropdown id=\\\"notComplextAssertionType\\\" name=\\\"notComplextAssertionType\\\" required [options]=\\\"partialComplexAssertionTypes\\\" [(ngModel)]=\\\"constraint.child.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(constraint.child)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>NOT Assertion: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-10\\\">\\n            <edit-simple-constraint *ngIf=\\\"constraint.child.mode === 'SIMPLE'\\\" [constraint]=\\\"constraint.child\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-NotSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"constraint.child.mode === 'COMPLEX'\\\" [constraint]=\\\"constraint.child\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [limited]=\\\"true\\\" [ifVerb]=\\\"ifVerb\\\" [groupName]=\\\"groupName + '-NotComplex'\\\"></edit-complex-constraint>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-notconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport {GeneralConfigurationService} from \"../../service/general-configuration/general-configuration.service\";\n\n@Component({\n  selector : 'edit-not-constraint',\n  templateUrl : './edit-notconstraint.component.html',\n  styleUrls : ['./edit-notconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditNotConstraintComponent {\n  @Input() constraint : any;\n  @Input() idMap : any;\n  @Input() treeData : any[];\n  @Input() ifVerb:any[];\n  @Input() groupName: string;\n  partialComplexAssertionTypes: any[];\n  simpleAssertionTypes: any[];\n  verbs: any[];\n  operators: any[];\n  formatTypes:any[];\n  andorOptions:any[];\n  assertionModes:any[];\n\n  constructor(private configService : GeneralConfigurationService){}\n\n  ngOnInit(){\n    this.andorOptions = [\n      {label: 'AND', value: 'AND'},\n      {label: 'OR', value: 'OR'}\n    ];\n    this.verbs = this.configService._simpleConstraintVerbs;\n    this.operators = this.configService._operators;\n    this.formatTypes = this.configService._formatTypes;\n    this.simpleAssertionTypes = this.configService._simpleAssertionTypes;\n    this.partialComplexAssertionTypes = this.configService._partialComplexAssertionTypes;\n    this.assertionModes = this.configService._assertionModes;\n  }\n\n  makeConstraintMode(constraint) {\n    constraint.complement = undefined;\n    constraint.subject = undefined;\n    constraint.complexAssertionType = undefined;\n    constraint.assertions = undefined;\n    constraint.child = undefined;\n    constraint.ifAssertion = undefined;\n    constraint.thenAssertion = undefined;\n    constraint.operator = undefined;\n    constraint.verbKey = undefined;\n  }\n\n  changeComplexAssertionType(constraint){\n    if(constraint.complexAssertionType === 'ANDOR'){\n      constraint.child = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.operator = 'AND';\n      constraint.assertions = [];\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n\n      constraint.assertions.push({\n        \"mode\": \"SIMPLE\"\n      });\n    }else if(constraint.complexAssertionType === 'NOT'){\n      constraint.assertions = undefined;\n      constraint.ifAssertion = undefined;\n      constraint.thenAssertion = undefined;\n      constraint.child = {\n        \"mode\": \"SIMPLE\"\n      };\n    }else if(constraint.complexAssertionType === 'IFTHEN'){\n      constraint.assertions = undefined;\n      constraint.child = undefined;\n      constraint.ifAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n      constraint.thenAssertion = {\n        \"mode\": \"SIMPLE\"\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-notconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n    border-width:0px 0px 1px 0px;\\n}\\n\\n.ui-panel-content{\\n    border-bottom: 1px solid #d8d8d8 !important;\\n    border-left: 1px solid #d8d8d8 !important;\\n    border-right: 1px solid #d8d8d8 !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.css\n// module id = ../../../../../src/app/common/constraint/edit-simpleconstraint.component.css\n// module chunks = common","module.exports = \"<div [ngModelGroup]=\\\"groupName\\\">\\n    <div class=\\\"ui-g ui-fluid\\\">\\n        <div class=\\\"ui-g-12 ui-md-2\\\">\\n            <label>Simple Assertion Type: </label>\\n        </div>\\n        <div class=\\\"ui-g-12 ui-md-10\\\">\\n            <p-dropdown id=\\\"simpleAssertionType\\\" name=\\\"simpleAssertionType\\\" required #simpleAssertionType=\\\"ngModel\\\" [options]=\\\"simpleAssertionTypes\\\" [(ngModel)]=\\\"constraint.complement.complementKey\\\" placeholder=\\\"Select a type\\\" [group]=\\\"true\\\"></p-dropdown>\\n            <div *ngIf=\\\"simpleAssertionType.invalid && (simpleAssertionType.dirty || simpleAssertionType.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"simpleAssertionType.errors.required\\\">\\n                    SimpleAssertion Type is required.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"constraint.complement.complementKey\\\">\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'SAMEVALUE'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> contain the constant value '<input id=\\\"value\\\" name=\\\"value\\\" required #value=\\\"ngModel\\\" [(ngModel)]=\\\"constraint.complement.value\\\" type=\\\"text\\\" style=\\\"width:100px;\\\"/>'  <p-checkbox id=\\\"casesensitive\\\" name=\\\"casesensitive\\\" [(ngModel)]=\\\"constraint.complement.casesensitive\\\" binary=\\\"true\\\"></p-checkbox> Case Sensitive\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'LISTVALUE'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    The value of <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> be one of list values: <span *ngFor=\\\"let listValueEntry of constraint.complement.values; let idx = index\\\">'<input id=\\\"listValue_{{idx}}\\\" name=\\\"listValue_{{idx}}\\\" required [(ngModel)]=\\\"constraint.complement.values[idx]\\\" type=\\\"text\\\" style=\\\"width:100px;border-width:0px 0px 1px 0px\\\"/>'</span> <button pButton type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" (click)=\\\"addValue()\\\"></button>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'COMPARENODE'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    The value of <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> <p-dropdown id=\\\"operator\\\" name=\\\"operator\\\" required #operator=\\\"ngModel\\\" [options]=\\\"operators\\\" [(ngModel)]=\\\"constraint.complement.operator\\\" placeholder=\\\"Select an operator\\\"></p-dropdown> <display-path [path]=\\\"constraint.complement.path\\\" [pathHolder]=\\\"constraint.complement\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-other'\\\"></display-path>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'COMPAREVALUE'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    The value of <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> <p-dropdown id=\\\"operator\\\" name=\\\"operator\\\" required #operator=\\\"ngModel\\\" [options]=\\\"operators\\\" [(ngModel)]=\\\"constraint.complement.operator\\\" placeholder=\\\"Select an operator\\\"></p-dropdown> <input id=\\\"value\\\" name=\\\"value\\\" required #value=\\\"ngModel\\\" [(ngModel)]=\\\"constraint.complement.value\\\" type=\\\"text\\\" style=\\\"width:100px;border-width:0px 0px 1px 0px\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'FORMATTED'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    The value of <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> <p-dropdown id=\\\"formatType\\\" name=\\\"formatType\\\" required #formatType=\\\"ngModel\\\" [options]=\\\"formatTypes\\\" [(ngModel)]=\\\"constraint.complement.type\\\" placeholder=\\\"Select a format type\\\"></p-dropdown>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"constraint.complement.complementKey === 'PRESENCE'\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Assertion: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    The value of <display-path [path]=\\\"constraint.subject.path\\\" [pathHolder]=\\\"constraint.subject\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"groupName+'-subject'\\\"></display-path> <p-dropdown id=\\\"verb\\\" name=\\\"verb\\\" required #verb=\\\"ngModel\\\" [options]=\\\"verbs\\\" [(ngModel)]=\\\"constraint.verbKey\\\" placeholder=\\\"Select a verb\\\"></p-dropdown> be presence\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.html\n// module id = ../../../../../src/app/common/constraint/edit-simpleconstraint.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport {GeneralConfigurationService} from \"../../service/general-configuration/general-configuration.service\";\n\n@Component({\n  selector : 'edit-simple-constraint',\n  templateUrl : './edit-simpleconstraint.component.html',\n  styleUrls : ['./edit-simpleconstraint.component.css'],\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class EditSimpleConstraintComponent {\n  @Input() constraint : any;\n  @Input() idMap : any;\n  @Input() treeData : any[];\n  @Input() ifVerb: boolean;\n  @Input() groupName: string;\n\n  simpleAssertionTypes: any[];\n  verbs: any[];\n  operators: any[];\n  formatTypes:any[];\n\n  constructor(private configService : GeneralConfigurationService){}\n\n  ngOnInit(){\n    if(!this.constraint.complement) this.constraint.complement = {};\n    if(!this.constraint.subject) this.constraint.subject = {};\n    if(this.ifVerb){\n      this.verbs = this.configService._ifConstraintVerbs;\n    }else{\n      this.verbs = this.configService._simpleConstraintVerbs;\n    }\n    this.operators = this.configService._operators;\n    this.formatTypes = this.configService._formatTypes;\n    this.simpleAssertionTypes = this.configService._simpleAssertionTypes;\n  }\n\n  addValue(){\n    if(!this.constraint.complement.values) this.constraint.complement.values = [];\n\n\n    this.constraint.complement.values.push('');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/constraint/edit-simpleconstraint.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".h-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  padding-left: 15px;\\n  width: 100%;\\n  font-size : 22px;\\n}\\n\\n.label-green {\\n  background-color: #26905e;\\n}\\n\\n.label-blue {\\n  background-color: #7ca7e6;\\n}\\n\\n.label-user {\\n  background-color: #e68650;\\n}\\n\\n.text-small {\\n  font-size : 13px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.css\n// module id = ../../../../../src/app/common/entity-header/entity-header.component.css\n// module chunks = common","module.exports = \"<div class=\\\"h-bar\\\">\\n  <display-badge [type]=\\\"_elm.type\\\"></display-badge> {{header()}}\\n  <span class=\\\"text-small label label-green\\\">\\n    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n    {{_elm.dateUpdated | date : 'short'}}\\n  </span>\\n  <span *ngIf=\\\"_elm.type != 'document'\\\" class=\\\"text-small label label-blue\\\">\\n    <i class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></i>\\n    HL7 v{{_elm.hl7Version }}\\n  </span>\\n  <span *ngIf=\\\"_elm.type == 'document'\\\" class=\\\"text-small label label-user\\\">\\n    <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n    <!--{{_elm.owner.username }}-->\\n  </span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.html\n// module id = ../../../../../src/app/common/entity-header/entity-header.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/30/17.\n */\nimport {Component, Input} from \"@angular/core\";\n@Component({\n  selector : 'entity-header',\n  templateUrl : './entity-header.component.html',\n  styleUrls : ['./entity-header.component.css']\n})\nexport class EntityHeaderComponent {\n  _elm : any;\n\n  constructor(){}\n\n  @Input() set elm(e){\n    this._elm = e;\n  }\n\n  header(){\n    switch (this._elm.type){\n      case 'segment' :\n        return this._elm.label;\n      case 'document' :\n        return this._elm.metaData.title;\n    }\n    return 'ndef';\n  }\n  ngOnInit(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/entity-header/entity-header.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-USE {\\n  background-color: green;\\n  font-weight: 400;\\n}\\n\\n.label-HL7 {\\n  background-color: #f4867e;\\n  font-weight: 400;\\n}\\n\\n.label-PRL {\\n  background: cornflowerblue;\\n  font-weight: 400;\\n}\\n\\n.label-PVS {\\n  background: #ed0bea;\\n  font-weight: 400;\\n}\\n\\n.label-MASTER {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ff7400+0,ff7400+100;Orange+Flat */\\n  background: #ff7400; /* Old browsers */\\n  /* FF3.6-15 */\\n  /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#ff7400), to(#ff7400));\\n  background: linear-gradient(to bottom, #ff7400 0%, #ff7400 100%);\\n  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff7400',\\n  endColorstr='#ff7400', GradientType=0); /* IE6-9 */\\n  font-weight: 400;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.css\n// module id = ../../../../../src/app/common/label/display-label.component.css\n// module chunks = common","module.exports = \"<div (click)=\\\"goTo()\\\">\\n\\n\\n\\n  <span   *ngIf=\\\"getScopeLabel()\\\" class=\\\"badge\\\"  [ngClass]=\\\"{'label-HL7' : getScopeLabel()==='HL7', 'label-USE': getScopeLabel()==='USR','label-MASTER':getScopeLabel()==='MAS','label-PRL':getScopeLabel()==='PRL','label-PVS':getScopeLabel()==='PVS'}\\\">\\n\\n  {{getScopeLabel()}} {{getVersion()}}</span> {{getElementLabel()}}\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.html\n// module id = ../../../../../src/app/common/label/display-label.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport {Router, ActivatedRoute, ParamMap, ActivatedRouteSnapshot} from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector : 'display-label',\n  templateUrl : './display-label.component.html',\n  styleUrls : ['./display-label.component.css']\n})\nexport class DisplayLabelComponent {\n  _elm : any;\n  _ig : any;\n\n  @Input()\n  igId : any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n  ){\n  }\n  ngOnInit(){\n\n  }\n\n  @Input() set elm(obj){\n    this._elm = obj;\n  }\n\n  get elm(){\n    return this._elm;\n  }\n\n  getScopeLabel() {\n    if(this.elm.type=='TEXT'){\n      return null;\n\n    }\n    if (this.elm.domainInfo && this.elm.domainInfo.scope) {\n      let scope = this.elm.domainInfo.scope;\n      if (scope === 'HL7STANDARD') {\n        return 'HL7';\n      } else if (scope === 'USER') {\n        return 'USR';\n      } else if (scope === 'MASTER') {\n        return 'MAS';\n      } else if (scope=== 'PRELOADED') {\n        return 'PRL';\n      } else if (scope === 'PHINVADS') {\n        return 'PVS';\n      } else {\n        return null ;\n      }\n    }\n  }\n\n  getElementLabel(){\n    var type =this.elm.type;\n    if(type){\n      if (type === 'SEGMENT') {\n        return this.getSegmentLabel(this.elm);\n      } else if (type='DATATYPE') {\n        return this.getDatatypeLabel(this.elm);\n      } else if (type==='table') {\n        console.log(\"Called\");\n        return this.getTableLabel(this.elm);\n      } else if (type ==='message') {\n        return this.getMessageLabel(this.elm);\n      } else if (type === 'profilecomponent') {\n        return this.getProfileComponentsLabel(this.elm);\n      } else if(type ==='compositeprofile'){\n        return this.getCompositeProfileLabel(this.elm);\n      }\n      if(type=='TEXT'){\n        return this.elm.label;\n      }\n    }else{\n      return this.elm.label;\n    }\n  }\n\n  getVersion(){\n    return this.elm.domainInfo.version ? this.elm.domainInfo.version : '';\n  };\n  getSegmentLabel(elm){\n    if(!elm.ext || elm.ext==''){\n      return elm.label+\"-\"+elm.description;\n    }else{\n      return elm.label+\"_\"+elm.ext+elm.description;\n    }\n  };\n\n  getDatatypeLabel(elm){\n    if(!elm.ext || elm.ext==''){\n      return elm.label+\"-\"+elm.description;\n    }else{\n      return elm.label+\"_\"+elm.ext+elm.description;\n    }\n  };\n  getTableLabel(elm){\n    return elm.bindingIdentifier+\"-\"+elm.label;\n\n  };\n\n  getMessageLabel(elm){\n    return elm.label+\"-\"+elm.description;\n  };\n  getProfileComponentsLabel(elm){\n    return elm.label+\"-\"+elm.description;\n\n  };\n\n  getCompositeProfileLabel(elm){\n    return elm.label+\"-\"+elm.description;\n\n\n  };\n\n  goTo() {\n    console.log(this.elm);\n    var type=this.elm.type.toLowerCase();\n    let id =\"\";\n    if(type=='text'){\n      type=\"section\";\n      id=this.elm.id;\n\n    }else{\n     id= this.elm.key.id;\n    }\n    this.route.queryParams\n      .subscribe(params => {\n        console.log(params); // {order: \"popular\"}\n\n        this.router.navigate([\"./\"+type+\"/\"+this.elm.key.id],{ preserveQueryParams:true ,relativeTo:this.route, preserveFragment:true});\n\n      });\n\n\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/label/display-label.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-segment {\\n  color: #0f44f2;\\n}\\n\\n.label-field {\\n  color: #f24a08;\\n}\\n\\n.label-component {\\n  color: #f2c60d;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.css\n// module id = ../../../../../src/app/common/tree-table-label/display-comment.component.css\n// module chunks = common","module.exports = \"<span  class=\\\"badge\\\">\\n<i class=\\\"fa fa-circle\\\" *ngIf=\\\"_from\\\" [ngClass]=\\\"{'label-segment' : _from ==='SEGMENT', 'label-component': _from ==='COMPONENT','label-field': _from==='FIELD'}\\\" aria-hidden=\\\"true\\\"></i>  {{_elm.dateupdated}}</span>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.html\n// module id = ../../../../../src/app/common/tree-table-label/display-comment.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector : 'display-comment',\n  templateUrl : './display-comment.component.html',\n  styleUrls : ['./display-comment.component.css']\n})\nexport class DisplayCommentComponent {\n  _elm : any;\n  _from : string;\n\n  constructor(){}\n  ngOnInit(){\n\n  }\n\n  @Input() set elm(obj){\n    this._elm = obj;\n  }\n\n  get elm(){\n    return this._elm;\n  }\n\n  @Input() set from(obj){\n    this._from = obj;\n  }\n\n  get from(){\n    return this._from;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-comment.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-segment {\\n  color: #0f44f2;\\n}\\n\\n.label-field {\\n  color: #f24a08;\\n}\\n\\n.label-component {\\n  color: #f2c60d;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.css\n// module id = ../../../../../src/app/common/tree-table-label/display-constantvalue.component.css\n// module chunks = common","module.exports = \"<span  class=\\\"badge\\\">\\n<i class=\\\"fa fa-circle\\\" *ngIf=\\\"_from\\\" [ngClass]=\\\"{'label-segment' : _from ==='SEGMENT', 'label-component': _from ==='COMPONENT','label-field': _from==='FIELD'}\\\" aria-hidden=\\\"true\\\"></i>  {{_elm}}</span>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.html\n// module id = ../../../../../src/app/common/tree-table-label/display-constantvalue.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector : 'display-constantvalue',\n  templateUrl : './display-constantvalue.component.html',\n  styleUrls : ['./display-constantvalue.component.css']\n})\nexport class DisplayConstantValueComponent {\n  _elm : any;\n  _from : string;\n\n  constructor(){}\n  ngOnInit(){\n\n  }\n\n  @Input() set elm(obj){\n    this._elm = obj;\n  }\n\n  get elm(){\n    return this._elm;\n  }\n\n  @Input() set from(obj){\n    this._from = obj;\n  }\n\n  get from(){\n    return this._from;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-constantvalue.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-USE {\\n  background-color: green;\\n  font-weight: 400;\\n  color: white;\\n}\\n\\n.label-HL7 {\\n  background-color: #f4867e;\\n  font-weight: 400;\\n}\\n\\n.label-PRL {\\n  background: cornflowerblue;\\n  font-weight: 400;\\n}\\n\\n.label-PVS {\\n  background: #ed0bea;\\n  font-weight: 400;\\n}\\n\\n.label-MASTER {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ff7400+0,ff7400+100;Orange+Flat */\\n  background: #ff7400; /* Old browsers */\\n  /* FF3.6-15 */\\n  /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#ff7400), to(#ff7400));\\n  background: linear-gradient(to bottom, #ff7400 0%, #ff7400 100%);\\n  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff7400',\\n  endColorstr='#ff7400', GradientType=0); /* IE6-9 */\\n  font-weight: 400;\\n}\\n\\n.version {\\n  background: #f6f6f6;\\n  font-weight: 400;\\n  color: #00037a;\\n}\\n\\n.label-segment {\\n  color: #0f44f2;\\n}\\n\\n.label-field {\\n  color: #f24a08;\\n}\\n\\n.label-component {\\n  color: #f2c60d;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.css\n// module id = ../../../../../src/app/common/tree-table-label/display-ref.component.css\n// module chunks = common","module.exports = \"<span  class=\\\"badge\\\"  [ngClass]=\\\"{'label-HL7' : getScopeLabel()==='HL7', 'label-USE': getScopeLabel()==='USR','label-MASTER':getScopeLabel()==='MAS','label-PRL':getScopeLabel()==='PRL','label-PVS':getScopeLabel()==='PVS'}\\\">\\n<i class=\\\"fa fa-circle\\\" *ngIf=\\\"_from\\\" [ngClass]=\\\"{'label-segment' : _from ==='SEGMENT', 'label-component': _from ==='COMPONENT','label-field': _from==='FIELD'}\\\" aria-hidden=\\\"true\\\"></i>  {{getElementLabel()}} <span class=\\\"badge version\\\">{{getVersion()}}</span></span>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.html\n// module id = ../../../../../src/app/common/tree-table-label/display-ref.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport {Router, ActivatedRoute, ParamMap, ActivatedRouteSnapshot} from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector : 'display-ref',\n  templateUrl : './display-ref.component.html',\n  styleUrls : ['./display-ref.component.css']\n})\nexport class DisplayRefComponent {\n  _elm : any;\n  _from : string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n  ){\n  }\n  ngOnInit(){\n\n  }\n\n  @Input() set elm(obj){\n    this._elm = obj;\n  }\n\n  get elm(){\n    return this._elm;\n  }\n\n  @Input() set from(obj){\n    this._from = obj;\n  }\n\n  get from(){\n    return this._from;\n  }\n\n  getScopeLabel() {\n    if (this.elm.domainInfo && this.elm.domainInfo.scope) {\n      let scope = this.elm.domainInfo.scope;\n      if (scope === 'HL7STANDARD') {\n        return 'HL7';\n      } else if (scope === 'USER') {\n        return 'USR';\n      } else if (scope === 'MASTER') {\n        return 'MAS';\n      } else if (scope=== 'PRELOADED') {\n        return 'PRL';\n      } else if (scope === 'PHINVADS') {\n        return 'PVS';\n      } else {\n        return null ;\n      }\n    }\n\n    return null;\n  }\n\n  getElementLabel(){\n    return this.elm.label;\n  }\n\n  getVersion(){\n    return this.elm.domainInfo.version ? this.elm.domainInfo.version : '';\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-ref.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".label-segment {\\n  color: #0f44f2;\\n}\\n\\n.label-field {\\n  color: #f24a08;\\n}\\n\\n.label-component {\\n  color: #f2c60d;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.css\n// module id = ../../../../../src/app/common/tree-table-label/display-singlecode.component.css\n// module chunks = common","module.exports = \"<span  class=\\\"badge\\\">\\n<i class=\\\"fa fa-circle\\\" *ngIf=\\\"_from\\\" [ngClass]=\\\"{'label-segment' : _from ==='SEGMENT', 'label-component': _from ==='COMPONENT','label-field': _from==='FIELD'}\\\" aria-hidden=\\\"true\\\"></i>  {{_elm.value}} <== {{_elm.codeSystem}}</span>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.html\n// module id = ../../../../../src/app/common/tree-table-label/display-singlecode.component.html\n// module chunks = common","/**\n * Created by hnt5 on 10/26/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport 'rxjs/add/operator/switchMap';\n@Component({\n  selector : 'display-singlecode',\n  templateUrl : './display-singlecode.component.html',\n  styleUrls : ['./display-singlecode.component.css']\n})\nexport class DisplaySingleCodeComponent {\n  _elm : any;\n  _from : string;\n\n  constructor(){}\n  ngOnInit(){\n\n  }\n\n  @Input() set elm(obj){\n    this._elm = obj;\n  }\n\n  get elm(){\n    return this._elm;\n  }\n\n  @Input() set from(obj){\n    this._from = obj;\n  }\n\n  get from(){\n    return this._from;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/common/tree-table-label/display-singlecode.component.ts","/**\n * Created by ena3 on 5/10/18.\n */\nimport { CanDeactivate } from '@angular/router';\nimport {Injectable, Component} from '@angular/core';\nimport {WithSave} from \"./with.save.interface\";\nimport {ConfirmationService} from 'primeng/components/common/api';\n\nimport {Md5} from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SaveFormsGuard implements CanDeactivate<WithSave> {\n  constructor(private confirmationService: ConfirmationService) {\n  }\n\n\n  canDeactivate(component: WithSave):Promise<any> {\n    return new Promise((resolve, reject) => {\n      // if (!component.isValid()) {\n      //   console.log(\"invalid form\");\n      //\n      //   this.getDialog(component, resolve , reject);\n      // }\n       if (this.compareHash(component.getBackup(), component.getCurrent())) {\n        resolve(true);\n\n      }else{\n\n        component.save().then(x=>{\n          console.log(\"Segment saved\");\n          resolve(true);\n        },error=>{\n          console.log(\"error saving\");\n          reject(false);\n\n        })\n      }\n    });\n\n  }\n  compareHash(obj1:any, obj2:any):boolean{\n    return Md5.hashStr(JSON.stringify(obj1))==Md5.hashStr(JSON.stringify(obj2))\n  }\n\n  getDialog(component,resolve,reject){\n      this.confirmationService.confirm({\n        message: \"You have invalid Data. You cannot leave the page. Please fix you data \",\n        accept: () => {\n\n          resolve(false);\n        },\n        reject: () => {\n          resolve(false);\n        }\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/guards/save.guard.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n  /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n  border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.css\n// module chunks = common","module.exports = \"<div *ngIf=\\\"datatypeConformanceStatements\\\">\\n    <h1>Conformance Statements</h1>\\n    <form #csForm=\\\"ngForm\\\">\\n        <p-accordion (onOpen)=\\\"onTabOpen($event)\\\">\\n            <p-accordionTab header=\\\"List of Conformance Statements\\\" [(selected)]=\\\"listTab\\\">\\n                <p-table [columns]=\\\"cols\\\" [value]=\\\"datatypeConformanceStatements.conformanceStatements\\\" [reorderableColumns]=\\\"true\\\" [resizableColumns]=\\\"true\\\">\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\n                        <tr>\\n                            <th style=\\\"width:3em\\\"></th>\\n\\n\\n                            <th *ngFor=\\\"let col of columns\\\" pReorderableColumn [pSortableColumn]=\\\"col.sort\\\" [ngStyle]=\\\"col.colStyle\\\" pResizableColumn>\\n                                {{col.header}}\\n                                <p-sortIcon *ngIf=\\\"col.colStyle\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n                            </th>\\n\\n                            <th style=\\\"width:15em\\\" pReorderableColumn>Actions</th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\n                        <tr [pReorderableRow]=\\\"index\\\">\\n                            <td>\\n                                <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\n                            </td>\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\">\\n                                <div *ngIf=\\\"col.field === 'identifier'\\\">\\n                                    {{rowData[col.field]}}\\n                                </div>\\n                                <div *ngIf=\\\"col.field === 'description'\\\">\\n                                    <div *ngIf=\\\"rowData['type'] === 'FREE'\\\">\\n                                        {{rowData['freeText']}}\\n                                    </div>\\n                                    <div *ngIf=\\\"rowData['type'] === 'ASSERTION'\\\">\\n                                        {{rowData['assertion'].description}}\\n                                    </div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-warning\\\" icon=\\\"fa-times\\\" label=\\\"Delete\\\" (click)=\\\"deleteCS(rowData['identifier'])\\\"></button>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-info\\\" icon=\\\"fa-pencil\\\" label=\\\"Edit\\\" (click)=\\\"selectCS(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n\\n\\n            </p-accordionTab>\\n            <p-accordionTab header=\\\"Conformance Statement Editor\\\" [(selected)]=\\\"editorTab\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Editor Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedConformanceStatement.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label for=\\\"id\\\">ID: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-10\\\">\\n                            <input id=\\\"id\\\" name=\\\"id\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"selectedConformanceStatement.identifier\\\" type=\\\"text\\\" #id=\\\"ngModel\\\" style=\\\"width:50%;\\\"/>\\n                            <div *ngIf=\\\"id.invalid && (id.dirty || id.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"id.errors.required\\\">\\n                                    Constraint Id is required.\\n                                </div>\\n                                <div *ngIf=\\\"id.errors.minlength\\\">\\n                                    Constraint Id must be at least 2 characters long.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type && selectedConformanceStatement.type ==='ASSERTION'\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label>Assertion Level: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-10\\\">\\n                            <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedConformanceStatement.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                            <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                    Assertion Type is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <edit-free-constraint *ngIf=\\\"selectedConformanceStatement.type === 'FREE'\\\" [constraint]=\\\"selectedConformanceStatement\\\"></edit-free-constraint>\\n                <edit-simple-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n                <edit-complex-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCS()\\\" [disabled]=\\\"csForm.invalid\\\"></button>\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"printCS(selectedConformanceStatement)\\\"></button>\\n            </p-accordionTab>\\n        </p-accordion>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport { _ } from 'underscore';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\n\n\n@Component({\n    templateUrl : './datatype-edit-conformancestatements.component.html',\n    styleUrls : ['./datatype-edit-conformancestatements.component.css']\n})\n\nexport class DatatypeEditConformanceStatementsComponent {\n    cols:any;\n    currentUrl:any;\n    datatypeId:any;\n    datatypeConformanceStatements:any;\n    idMap: any;\n    treeData: any[];\n    constraintTypes: any = [];\n    assertionModes: any = [];\n\n    selectedConformanceStatement: any = {};\n\n    listTab: boolean = true;\n    editorTab: boolean = false;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router : Router,\n        private datatypesService : DatatypesService,\n        private configService : GeneralConfigurationService,\n        private constraintsService : ConstraintsService,\n    ){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n\n        this.cols = [\n            { field: 'identifier', header: 'ID', colStyle: {width: '20em'}, sort:'identifier'},\n            { field: 'description', header: 'Description' }\n        ];\n    }\n\n    ngOnInit() {\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n        this.idMap = {};\n        this.treeData = [];\n        this.datatypeId = this.route.snapshot.params[\"datatypeId\"];\n        this.datatypesService.getDatatypeConformanceStatements(this.datatypeId).then(conformanceStatementData => {\n            this.datatypeConformanceStatements = conformanceStatementData;\n        });\n\n        this.datatypesService.getDatatypeStructure(this.datatypeId).then( dtStructure  => {\n            this.idMap[this.datatypeId] = {name:dtStructure.name};\n\n            var rootData = {elementId:this.datatypeId};\n\n            for (let child of dtStructure.children) {\n                var childData =  JSON.parse(JSON.stringify(rootData));\n                childData.child = {\n                    elementId: child.data.id,\n                };\n\n                if(child.data.max === '1'){\n                    childData.child.instanceParameter = '1';\n                }else if (child.data.max){\n                    childData.child.instanceParameter = '*';\n                }else {\n                    childData.child.instanceParameter = '1';\n                }\n\n                var treeNode = {\n                    label: child.data.name,\n                    data : childData,\n                    expandedIcon: \"fa-folder-open\",\n                    collapsedIcon: \"fa-folder\",\n                };\n\n                var data = {\n                    id: child.data.id,\n                    name: child.data.name,\n                    max: child.data.max,\n                    position: child.data.position,\n                    usage: child.data.usage,\n                    dtId: child.data.ref.id\n                };\n\n                this.idMap[this.datatypeId + '-' + data.id] = data;\n                this.popChild(this.datatypeId + '-' + data.id, data.dtId, treeNode);\n                this.treeData.push(treeNode);\n            }\n        });\n    }\n\n    popChild(id, dtId, parentTreeNode){\n        this.datatypesService.getDatatypeStructure(dtId).then( dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n        });\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    changeType(){\n        if(this.selectedConformanceStatement.type == 'ASSERTION'){\n            this.selectedConformanceStatement.assertion = {};\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.type == 'FREE'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINEDPATTERNS'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINED'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedConformanceStatement.assertion.mode == 'SIMPLE'){\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.assertion.mode == 'COMPLEX'){\n            this.selectedConformanceStatement.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    submitCS(){\n        if(this.selectedConformanceStatement.type === 'ASSERTION') this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedConformanceStatement.assertion, this.idMap);\n        this.deleteCS(this.selectedConformanceStatement.identifier);\n        this.datatypeConformanceStatements.conformanceStatements.push(this.selectedConformanceStatement);\n        this.selectedConformanceStatement = {};\n        this.editorTab = false;\n        this.listTab = true;\n    }\n\n    selectCS(cs){\n        this.selectedConformanceStatement = JSON.parse(JSON.stringify(cs));\n        this.editorTab = true;\n        this.listTab = false;\n    }\n\n    deleteCS(identifier){\n        this.datatypeConformanceStatements.conformanceStatements = _.without(this.datatypeConformanceStatements.conformanceStatements, _.findWhere(this.datatypeConformanceStatements.conformanceStatements, {identifier: identifier}));\n    }\n\n    printCS(cs){\n        console.log(cs);\n    }\n\n    onTabOpen(e) {\n        if(e.index === 0) this.selectedConformanceStatement = {};\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-conformancestatements/datatype-edit-conformancestatements.component.ts","/**\n * Created by hnt5 on 10/23/17.\n */\nimport {RouterModule} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {DatatypeEditStructureComponent} from \"./datatype-structure/datatype-edit-structure.component\";\nimport {DatatypeEditConformanceStatementsComponent} from \"./datatype-conformancestatements/datatype-edit-conformancestatements.component\";\nimport {DatatypeEditMetadataComponent} from \"./datatype-metadata/datatype-edit-metadata.component\";\nimport {DatatypeEditPredefComponent} from \"./datatype-predef/datatype-edit-predef.component\";\nimport {DatatypeEditPostdefComponent} from \"./datatype-postdef/datatype-edit-postdef.component\";\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n        {\n            path: ':datatypeId', component: DatatypeEditStructureComponent,\n        },\n        {\n            path: ':datatypeId/structure', component: DatatypeEditStructureComponent,\n        },\n        {\n            path: ':datatypeId/metadata', component: DatatypeEditMetadataComponent,\n        },\n        {\n            path: ':datatypeId/preDef', component: DatatypeEditPredefComponent,\n        },\n        {\n            path: ':datatypeId/postDef', component: DatatypeEditPostdefComponent,\n        },\n        {\n            path: ':datatypeId/conformanceStatement', component: DatatypeEditConformanceStatementsComponent,\n        }\n    ])\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DatatypeEditRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-edit-routing.module.ts","/**\n * Created by hnt5 on 10/23/17.\n */\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {DatatypeEditRoutingModule} from \"./datatype-edit-routing.module\";\nimport {TabMenuModule} from \"primeng/components/tabmenu/tabmenu\";\nimport {TreeTableModule} from \"primeng/components/treetable/treetable\";\nimport {FormsModule} from \"@angular/forms\";\nimport {DialogModule} from \"primeng/components/dialog/dialog\";\nimport {DropdownModule} from \"primeng/components/dropdown/dropdown\";\n\nimport {UtilsModule} from \"../../../utils/utils.module\";\nimport {ButtonModule} from 'primeng/button';\nimport {AccordionModule} from 'primeng/accordion';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {TableModule} from 'primeng/table';\n\nimport {DatatypeEditStructureComponent} from \"./datatype-structure/datatype-edit-structure.component\";\nimport {DatatypeEditConformanceStatementsComponent} from \"./datatype-conformancestatements/datatype-edit-conformancestatements.component\";\nimport {DatatypeEditMetadataComponent} from \"./datatype-metadata/datatype-edit-metadata.component\";\nimport {DatatypeEditPostdefComponent} from \"./datatype-postdef/datatype-edit-postdef.component\";\nimport {DatatypeEditPredefComponent} from \"./datatype-predef/datatype-edit-predef.component\";\n\nimport {FroalaEditorModule, FroalaViewModule} from 'angular-froala-wysiwyg';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TabMenuModule,\n    DialogModule,\n    DropdownModule,\n    DatatypeEditRoutingModule,\n    UtilsModule,\n    TreeTableModule,\n    ButtonModule,\n    AccordionModule,\n    SelectButtonModule,\n    TableModule,\n      FroalaEditorModule.forRoot(),\n      FroalaViewModule.forRoot()\n  ],\n  providers : [],\n  declarations: [DatatypeEditStructureComponent, DatatypeEditConformanceStatementsComponent, DatatypeEditMetadataComponent, DatatypeEditPostdefComponent, DatatypeEditPredefComponent],\n  schemas : [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class DatatypeEditModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-edit.module.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.css\n// module chunks = common","module.exports = \"<h2>Datatype Metadata</h2>\\n<div *ngIf=\\\"datatypeMetadata\\\">\\n    <form #datatypeMetadataForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Name\\n            </label>\\n            <input name=\\\"name\\\" id=\\\"name\\\" pInputText type=\\\"text\\\" disabled class=\\\"ui-g-10\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"datatypeMetadata.name\\\" required />\\n            <div class=\\\"ui-g-offset-1\\\" *ngIf=\\\"name.invalid&& (name.dirty || name.touched)\\\">\\n                <p-message severity=\\\"error\\\" text=\\\"Name is required\\\"></p-message>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Flavor Name (Ext)\\n            </label>\\n            <input name=\\\"ext\\\" id=\\\"ext\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #ext=\\\"ngModel\\\" [(ngModel)]=\\\"datatypeMetadata.ext\\\" required />\\n            <div class=\\\"ui-g-offset-1\\\" *ngIf=\\\"ext.invalid && (ext.dirty || ext.touched)\\\">\\n                <p-message severity=\\\"error\\\" text=\\\"Extension is required\\\"></p-message>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Description\\n            </label>\\n            <input name=\\\"description\\\" id=\\\"description\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"datatypeMetadata.description\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Author Notes\\n            </label>\\n            <div class=\\\"ui-g-10\\\" [froalaEditor] [(froalaModel)]=\\\"datatypeMetadata.authorNote\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, Input} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {IndexedDbService} from \"../../../../service/indexed-db/indexed-db.service\";\n\n\n\n@Component({\n  templateUrl : './datatype-edit-metadata.component.html',\n  styleUrls : ['./datatype-edit-metadata.component.css']\n})\nexport class DatatypeEditMetadataComponent {\n  currentUrl:any;\n  datatypeId:any;\n  datatypeMetadata:any;\n\n  constructor(public indexedDbService: IndexedDbService, private route: ActivatedRoute, private  router : Router, private datatypesService : DatatypesService){\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd ) {\n        this.currentUrl=event.url;\n      }\n    });\n  }\n\n  ngOnInit() {\n      this.datatypeId = this.route.snapshot.params[\"datatypeId\"];\n      this.datatypesService.getDatatypeMetadata(this.datatypeId).then( metadata  => {\n        this.datatypeMetadata = metadata;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-metadata/datatype-edit-metadata.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.css\n// module chunks = common","module.exports = \"<h2>Datatype Post Definition TEXT</h2>\\n<div *ngIf=\\\"datatypePostdef\\\">\\n    <div class=\\\"ui-g input-box\\\">\\n        <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"datatypePostdef.postDef\\\"></div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\n\n\n\n@Component({\n  templateUrl : './datatype-edit-postdef.component.html',\n  styleUrls : ['./datatype-edit-postdef.component.css']\n})\nexport class DatatypeEditPostdefComponent {\n    currentUrl:any;\n    datatypeId:any;\n    datatypePostdef:any;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private datatypesService : DatatypesService){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.datatypeId = this.route.snapshot.params[\"datatypeId\"];\n        this.datatypesService.getDatatypePostDef(this.datatypeId).then( data  => {\n            this.datatypePostdef = data;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-postdef/datatype-edit-postdef.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.css\n// module chunks = common","module.exports = \"<h2>Datatype Pre Definition TEXT</h2>\\n<div *ngIf=\\\"datatypePredef\\\">\\n    <div class=\\\"ui-g input-box\\\">\\n        <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"datatypePredef.preDef\\\"></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\n\n\n\n@Component({\n  templateUrl : './datatype-edit-predef.component.html',\n  styleUrls : ['./datatype-edit-predef.component.css']\n})\nexport class DatatypeEditPredefComponent {\n    currentUrl:any;\n    datatypeId:any;\n    datatypePredef:any;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private datatypesService : DatatypesService){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.datatypeId = this.route.snapshot.params[\"datatypeId\"];\n        this.datatypesService.getDatatypePreDef(this.datatypeId).then(data  => {\n            this.datatypePredef = data;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-predef/datatype-edit-predef.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.css\n// module chunks = common","module.exports = \"<h2>Datatype Structure</h2>\\n\\n<div *ngIf=\\\"datatypeStructure\\\">\\n    <p-treeTable [value]=\\\"datatypeStructure.children\\\" tableStyleClass=\\\"table-condensed table-stripped table-bordered\\\" (onNodeExpand)=\\\"loadNode($event)\\\">\\n\\n        <p-column header=\\\"Name\\\" [style]=\\\"{'width':'350px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <display-badge [type]=\\\"node.data.displayData.type\\\"></display-badge>{{node.data.position}}. {{node.data.name}}\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Usage\\\" [style]=\\\"{'width':'190px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\" >\\n                <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                    <p-dropdown *ngIf=\\\"node.data.usage !== 'C'\\\" [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '100%'}\\\"></p-dropdown>\\n                    <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                        <p-dropdown [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>\\n                        (<p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.datatypeBinding.predicate.trueUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>/\\n                        <p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.datatypeBinding.predicate.falseUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>)\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.componentDTbinding || !node.data.displayData.componentDTbinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate\\\">C({{node.data.displayData.componentDTbinding.predicate.trueUsage}}/{{node.data.displayData.componentDTbinding.predicate.falseUsage}})</div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Length\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.minLength !== 'NA' && node.data.displayData.datatype.leaf\\\">\\n                        <input [(ngModel)]=\\\"node.data.minLength\\\" type=\\\"number\\\" style=\\\"width:40%;border-width:0px 0px 1px 0px\\\"/>\\n                        <input [(ngModel)]=\\\"node.data.maxLength\\\" type=\\\"text\\\" style=\\\"width:40%;border-width:0px 0px 1px 0px\\\"/>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delLength(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type !== 'COMPONENT'\\\">\\n                    [{{node.data.minLength}}..{{node.data.maxLength}}]\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Conf. Length\\\" [style]=\\\"{'width':'120px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                    <ng-container *ngIf=\\\"node.data.confLength !== 'NA' && node.data.displayData.datatype.leaf\\\">\\n                        <input [(ngModel)]=\\\"node.data.confLength\\\" type=\\\"text\\\" style=\\\"width: 80%;border-width:0px 0px 1px 0px\\\"/>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delConfLength(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </ng-container>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type !== 'COMPONENT'\\\">\\n                    {{node.data.confLength}}\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Datatype\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"!node.data.displayData.datatype.edit\\\">\\n                    <display-ref [elm]=\\\"node.data.displayData.datatype\\\"></display-ref>\\n                    <i class=\\\"fa fa-pencil\\\" *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\" (click)=\\\"makeEditModeForDatatype(node)\\\"></i>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.datatype.edit\\\">\\n                    <p-dropdown [options]=\\\"node.data.displayData.datatype.dtOptions\\\" [(ngModel)]=\\\"node.data.displayData.datatype.id\\\" (onChange)=\\\"onDatatypeChange(node)\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'100%'}\\\">\\n                        <ng-template let-option pTemplate=\\\"body\\\">\\n                            <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\n                                <display-ref *ngIf=\\\"option.value\\\" [elm]=\\\"getDatatypeElm(option.value)\\\"></display-ref>\\n                                <span *ngIf=\\\"!option.value\\\" (click)=\\\"node.data.displayData.datatype.dtOptions = datatypeOptions\\\">{{option.label}}</span>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"ValueSet\\\" [style]=\\\"{'width':valuesetColumnWidth}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && !node.data.displayData.hasSingleCode\\\">\\n                    <div *ngIf=\\\"node.data.displayData.datatypeBinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.datatypeBinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'DATATYPE'\\\"></display-ref>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForValueSet(vs)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"delValueSetBinding(node.data.displayData.datatypeBinding, vs, node.data.displayData)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"vs.edit\\\">\\n                                <p-dropdown [options]=\\\"valuesetOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetId\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\" filter=\\\"true\\\">\\n                                    <ng-template let-option pTemplate=\\\"body\\\">\\n                                        <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\n                                            <display-ref *ngIf=\\\"option.value\\\" [elm]=\\\"getValueSetElm(option.value)\\\"></display-ref>\\n                                            <span *ngIf=\\\"!option.value\\\">{{option.label}}</span>\\n                                        </div>\\n                                    </ng-template>\\n                                </p-dropdown>\\n                                <p-dropdown [options]=\\\"valuesetStrengthOptions\\\" [(ngModel)]=\\\"vs.newvalue.strength\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <p-dropdown *ngIf=\\\"node.data.displayData.valueSetLocationOptions\\\" [options]=\\\"node.data.displayData.valueSetLocationOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetLocations\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewValueSet(vs); node.data.displayData.hasValueSet = true;\\\" [disabled]=\\\"!vs.newvalue.valuesetId\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.valuesetBindings || node.data.displayData.datatypeBinding.valuesetBindings.length === 0) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.componentDTbinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'COMPONENT'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"node.data.displayData.multipleValuesetAllowed || !node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.valuesetBindings || node.data.displayData.datatypeBinding.valuesetBindings.length == 0\\\" (click)=\\\"addNewValueSet(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Single Code\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && node.data.displayData.datatype.leaf && !node.data.displayData.hasValueSet\\\">\\n                    <div *ngIf=\\\"node.data.displayData.datatypeBinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.datatypeBinding.externalSingleCode\\\">\\n                            <div *ngIf=\\\"!node.data.displayData.datatypeBinding.externalSingleCode.edit\\\">\\n                                <display-singlecode [elm]=\\\"node.data.displayData.datatypeBinding.externalSingleCode\\\" [from]=\\\"'DATATYPE'\\\"></display-singlecode>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"deleteSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"node.data.displayData.datatypeBinding.externalSingleCode.edit\\\">\\n                                <input [(ngModel)]=\\\"node.data.displayData.datatypeBinding.externalSingleCode.newSingleCode\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <input [(ngModel)]=\\\"node.data.displayData.datatypeBinding.externalSingleCode.newSingleCodeSystem\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewSingleCode(node); node.data.displayData.hasSingleCode = true;\\\" [disabled]=\\\"node.data.displayData.datatypeBinding.externalSingleCode.newSingleCode === '' || node.data.displayData.datatypeBinding.externalSingleCode.newSingleCodeSystem === ''\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.externalSingleCode) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\" [from]=\\\"'COMPONENT'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.externalSingleCode\\\" (click)=\\\"addNewSingleCode(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Constant Value\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.datatype.leaf && !node.data.displayData.valuesetAllowed\\\">\\n                    <div *ngIf=\\\"node.data.displayData.datatypeBinding\\\">\\n                        <div *ngIf=\\\"!node.data.displayData.datatypeBinding.editConstantValue\\\">\\n                            <div *ngIf=\\\"node.data.displayData.datatypeBinding.constantValue\\\">\\n                                <display-constantvalue [elm]=\\\"node.data.displayData.datatypeBinding.constantValue\\\" [from]=\\\"'DATATYPE'\\\"></display-constantvalue>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"deleteConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.datatypeBinding.editConstantValue\\\">\\n                            <input [(ngModel)]=\\\"node.data.displayData.datatypeBinding.newConstantValue\\\" type=\\\"text\\\" style=\\\"width:90%;border-width:0px 0px 1px 0px\\\"/>\\n                            <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewConstantValue(node)\\\" [disabled]=\\\"node.data.displayData.datatypeBinding.newConstantValue === ''\\\"></button>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.constantValue) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.constantValue  !== undefined && node.data.displayData.componentDTbinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.componentDTbinding.constantValue\\\" [from]=\\\"'COMPONENT'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"!node.data.displayData.datatypeBinding || !node.data.displayData.datatypeBinding.editConstantValue\\\">\\n                        <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.datatypeBinding || (node.data.displayData.datatypeBinding && !node.data.displayData.datatypeBinding.constantValue)\\\" (click)=\\\"addNewConstantValue(node)\\\"></i>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Predicate\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                    <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                        <div *ngIf=\\\"node.data.displayData.datatypeBinding && node.data.displayData.datatypeBinding.predicate && node.data.displayData.datatypeBinding.predicate.freeText\\\">\\n                            {{node.data.displayData.datatypeBinding.predicate.freeText}}\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.datatypeBinding && node.data.displayData.datatypeBinding.predicate && node.data.displayData.datatypeBinding.predicate.assertion && node.data.displayData.datatypeBinding.predicate.assertion.description\\\">\\n                            {{node.data.displayData.datatypeBinding.predicate.assertion.description}}\\n                        </div>\\n                        <i class=\\\"fa fa-pencil\\\" (click)=\\\"editPredicate(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </div>\\n                    <div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.freeText\\\">\\n                            {{node.data.displayData.componentDTbinding.predicate.freeText}}\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.assertion && node.data.displayData.componentDTbinding.predicate.assertion.description\\\">\\n                            {{node.data.displayData.componentDTbinding.predicate.assertion.description}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Text Definition\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <ng-container *ngIf=\\\"node.data.text\\\">\\n                        <span (click)=\\\"editTextDefinition(node)\\\">{{truncate(node.data.text)}}</span>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delTextDefinition(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!node.data.text\\\">\\n                        <i class=\\\"fa fa-pencil\\\" (click)=\\\"editTextDefinition(node)\\\"></i>\\n                    </ng-container>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Comment\\\" [style]=\\\"{'width':'400px'}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.datatypeBinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.datatypeBinding.comments\\\">\\n                        <div *ngIf=\\\"!c.edit\\\">\\n                            <display-comment [elm]=\\\"c\\\" [from]=\\\"'DATATYPE'\\\"></display-comment>\\n                            <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForComment(c)\\\" style=\\\"width:20%;\\\"></i>\\n                            <i class=\\\"fa fa-times\\\" (click)=\\\"delCommentBinding(node.data.displayData.datatypeBinding, c)\\\" style=\\\"width:20%;\\\"></i>\\n                        </div>\\n                        <div *ngIf=\\\"c.edit\\\">\\n                            <textarea pInputTextarea [(ngModel)]=\\\"c.newComment.description\\\"></textarea>\\n                            <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewComment(c);\\\" [disabled]=\\\"c.newComment.description === ''\\\"></button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.fieldDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.fieldDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'FIELD'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.componentDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.componentDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'COMPONENT'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <i class=\\\"fa fa-plus\\\" (click)=\\\"addNewComment(node)\\\"></i>\\n            </ng-template>\\n        </p-column>\\n    </p-treeTable>\\n\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Text Definition of {{selectedNode.data.name}}\\\" [(visible)]=\\\"textDefinitionDialogOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\">\\n        <textarea pInputTextarea [(ngModel)]=\\\"selectedNode.data.text\\\"></textarea>\\n    </p-dialog>\\n\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Predicate of {{selectedNode.data.name}}\\\" [(visible)]=\\\"preciateEditorOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"1200\\\" [minWidth]=\\\"800\\\" [minY]=\\\"70\\\">\\n        <form #cpForm=\\\"ngForm\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Editor Type: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedPredicate.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"selectedPredicate.type && selectedPredicate.type ==='ASSERTION'\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Assertion Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedPredicate.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                        <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                Assertion Type is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <edit-free-constraint *ngIf=\\\"selectedPredicate.type === 'FREE'\\\" [constraint]=\\\"selectedPredicate\\\"></edit-free-constraint>\\n            <edit-simple-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n            <p>\\n                Parent Form Values:\\n                {{cpForm.value | json}}\\n            </p>\\n\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCP()\\\" [disabled]=\\\"cpForm.invalid\\\"></button>\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"print(selectedConformanceStatement)\\\"></button>\\n        </form>\\n    </p-dialog>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\n\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\nimport { _ } from 'underscore';\nimport {DatatypesTocService} from \"../../../../service/indexed-db/datatypes/datatypes-toc.service\";\nimport {ValuesetsTocService} from \"../../../../service/indexed-db/valuesets/valuesets-toc.service\";\n\n@Component({\n  selector : 'datatype-edit',\n  templateUrl : './datatype-edit-structure.component.html',\n  styleUrls : ['./datatype-edit-structure.component.css']\n})\nexport class DatatypeEditStructureComponent {\n    valuesetColumnWidth:string = '200px';\n    currentUrl:any;\n    datatypeId:any;\n    datatypeStructure:any;\n    usages:any;\n    cUsages:any;\n    textDefinitionDialogOpen:boolean = false;\n    selectedNode:any;\n    valuesetStrengthOptions:any = [];\n\n    preciateEditorOpen:boolean = false;\n\n    selectedPredicate: any = {};\n    constraintTypes: any = [];\n    assertionModes: any = [];\n    idMap: any;\n    treeData: any[];\n\n    valuesetsLinks :any = [];\n    datatypesLinks :any = [];\n    datatypeOptions:any = [];\n    valuesetOptions:any = [{label:'Select ValueSet', value:null}];\n\n    constructor(private route: ActivatedRoute, private  router : Router, private configService : GeneralConfigurationService, private datatypesService : DatatypesService, private constraintsService : ConstraintsService, private datatypesTocService : DatatypesTocService, private valuesetsTocService : ValuesetsTocService){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.datatypeId = this.route.snapshot.params[\"datatypeId\"];\n        this.usages = this.configService._usages;\n        this.cUsages = this.configService._cUsages;\n        this.valuesetStrengthOptions = this.configService._valuesetStrengthOptions;\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n        this.datatypesTocService.getAll().then((dtTOCdata) => {\n            let listTocDTs:any = dtTOCdata;\n            for(let entry of listTocDTs){\n                var treeObj = entry.data;\n\n                var dtLink:any = {};\n                dtLink.id = treeObj.key.id;\n                dtLink.label = treeObj.label;\n                dtLink.domainInfo = treeObj.domainInfo;\n                var index = treeObj.label.indexOf(\"_\");\n                if(index > -1){\n                    dtLink.name = treeObj.label.substring(0,index);\n                    dtLink.ext = treeObj.label.substring(index);;\n                }else {\n                    dtLink.name = treeObj.label;\n                    dtLink.ext = null;\n                }\n\n                if(treeObj.lazyLoading) dtLink.leaf = false;\n                else dtLink.leaf = true;\n                this.datatypesLinks.push(dtLink);\n\n                var dtOption = {label: dtLink.label, value : dtLink.id};\n                this.datatypeOptions.push(dtOption);\n            }\n\n\n            this.valuesetsTocService.getAll().then((valuesetTOCdata) => {\n                let listTocVSs:any = valuesetTOCdata;\n\n                for(let entry of listTocVSs){\n                    var treeObj = entry.data;\n                    var valuesetLink:any = {};\n                    valuesetLink.id = treeObj.key.id;\n                    valuesetLink.label = treeObj.label;\n                    valuesetLink.domainInfo = treeObj.domainInfo;\n                    this.valuesetsLinks.push(valuesetLink);\n\n                    var vsOption = {label: valuesetLink.label, value : valuesetLink.id};\n                    this.valuesetOptions.push(vsOption);\n                }\n\n                this.datatypesService.getDatatypeStructure(this.datatypeId).then(structure  => {\n                    this.datatypeStructure = {};\n                    this.datatypeStructure.name = structure.name;\n                    this.datatypeStructure.ext = structure.ext;\n                    this.datatypeStructure.scope = structure.scope;\n\n                    this.updateDatatype(this.datatypeStructure, structure.children, structure.binding, null, null, null, null);\n                });\n            });\n        });\n    }\n\n    updateDatatype(node, children, currentBinding, parentComponentId, datatypeBinding, parentDTId, parentDTName){\n        for (let entry of children) {\n            if(!entry.data.displayData) entry.data.displayData = {};\n            entry.data.displayData.datatype = this.getDatatypeLink(entry.data.ref.id);\n            entry.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(entry.data.displayData.datatype.name,entry.data.position, parentDTName, null, entry.data.displayData.type);\n            entry.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(entry.data.displayData.datatype.name, entry.data.displayData.datatype.domainInfo.version);\n            if(entry.data.displayData.valuesetAllowed) entry.data.displayData.multipleValuesetAllowed =  this.configService.isMultipleValuseSetAllowed(entry.data.displayData.datatype.name);\n            if(entry.data.displayData.datatype.leaf) entry.leaf = true;\n            else entry.leaf = false;\n\n            if(parentComponentId === null){\n                entry.data.displayData.idPath = entry.data.id;\n            }else{\n                entry.data.displayData.idPath = parentComponentId + '-' + entry.data.id;\n            }\n\n            if(entry.data.displayData.idPath.split(\"-\").length === 1){\n                entry.data.displayData.type = 'COMPONENT';\n                entry.data.displayData.datatypeBinding = this.findBinding(entry.data.displayData.idPath, currentBinding);\n                if(entry.data.usage === 'C' && !entry.data.displayData.datatypeBinding) {\n                    entry.data.displayData.datatypeBinding = {};\n                }\n                if(entry.data.usage === 'C' && !entry.data.displayData.datatypeBinding.predicate){\n                    entry.data.displayData.datatypeBinding.predicate = {};\n                }\n            }else if(entry.data.displayData.idPath.split(\"-\").length === 2){\n                entry.data.displayData.type = 'SUBCOMPONENT';\n                entry.data.displayData.componentDT = parentDTId;\n                entry.data.displayData.datatypeBinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], datatypeBinding);\n                entry.data.displayData.componentDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], currentBinding);\n            }\n\n            this.setHasSingleCode(entry.data.displayData);\n            this.setHasValueSet(entry.data.displayData);\n        }\n\n        node.children = children;\n    }\n\n    setHasSingleCode(displayData){\n        if(displayData.datatypeBinding || displayData.componentDTbinding){\n            if(displayData.datatypeBinding && displayData.datatypeBinding.internalSingleCode && displayData.datatypeBinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.datatypeBinding && displayData.datatypeBinding.externalSingleCode && displayData.datatypeBinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.internalSingleCode && displayData.componentDTbinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.externalSingleCode && displayData.componentDTbinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else {\n                displayData.hasSingleCode = false;\n            }\n        }else {\n            displayData.hasSingleCode = false;\n        }\n    }\n\n    setHasValueSet(displayData){\n        if(displayData.datatypeBinding || displayData.componentDTbinding){\n            if(displayData.datatypeBinding && displayData.datatypeBinding.valuesetBindings && displayData.datatypeBinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.valuesetBindings && displayData.componentDTbinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else {\n                displayData.hasValueSet = false;\n            }\n        }else {\n            displayData.hasValueSet = false;\n        }\n    }\n\n    getValueSetElm(id){\n        for(let link of this.valuesetsLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    getDatatypeElm(id){\n        for(let link of this.datatypesLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    addNewValueSet(node){\n        if(!node.data.displayData.datatypeBinding) node.data.displayData.datatypeBinding = [];\n        if(!node.data.displayData.datatypeBinding.valuesetBindings) node.data.displayData.datatypeBinding.valuesetBindings = [];\n\n        node.data.displayData.datatypeBinding.valuesetBindings.push({edit:true, newvalue : {}});\n        this.valuesetColumnWidth = '500px';\n    }\n\n    updateValueSetBindings(binding){\n        var result = JSON.parse(JSON.stringify(binding));\n        if(result && result.valuesetBindings){\n            for(let vs of result.valuesetBindings){\n                var displayValueSetLink = this.getValueSetLink(vs.valuesetId);\n                vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n                vs.label = displayValueSetLink.label;\n                vs.domainInfo = displayValueSetLink.domainInfo;\n            }\n        }\n        return result;\n    }\n\n    findBinding(id, binding){\n        if(binding && binding.children){\n            for(let b of binding.children){\n                if(b.elementId === id) return this.updateValueSetBindings(b);\n            }\n        }\n        return null;\n    }\n\n    delLength(node){\n        node.data.minLength = 'NA';\n        node.data.maxLength = 'NA';\n        node.data.confLength = '';\n    }\n\n    delConfLength(node){\n        node.data.minLength = '';\n        node.data.maxLength = '';\n        node.data.confLength = 'NA';\n    }\n\n    makeEditModeForDatatype(node){\n        node.data.displayData.datatype.edit = true;\n        node.data.displayData.datatype.dtOptions = [];\n\n        for (let dt of this.datatypesLinks) {\n            if(dt.name === node.data.displayData.datatype.name){\n                var dtOption = {label: dt.label, value : dt.id};\n                node.data.displayData.datatype.dtOptions.push(dtOption);\n            }\n        }\n        node.data.displayData.datatype.dtOptions.push({label: 'Change Datatype root', value : null});\n    }\n\n    loadNode(event) {\n        if(event.node && !event.node.children) {\n            var datatypeId = event.node.data.ref.id;\n            this.datatypesService.getDatatypeStructure(datatypeId).then(structure  => {\n                this.updateDatatype(event.node, structure.children, structure.binding, event.node.data.displayData.idPath, event.node.data.displayData.datatypeBinding, event.node.data.displayData.componentDT, event.node.data.displayData.datatype.name);\n            });\n        }\n    }\n\n    onDatatypeChange(node){\n        if(!node.data.displayData.datatype.id) {\n            node.data.displayData.datatype.id = node.data.ref.id;\n        }\n        else node.data.ref.id = node.data.displayData.datatype.id;\n        node.data.displayData.datatype = this.getDatatypeLink(node.data.displayData.datatype.id);\n        node.children = null;\n        node.expanded = false;\n        if(node.data.displayData.datatype.leaf) node.leaf = true;\n        else node.leaf = false;\n        node.data.displayData.datatype.edit = false;\n\n\n        node.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(node.data.displayData.datatype.name,node.data.position, null, null, node.data.displayData.type);\n        node.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(node.data.displayData.datatype.name, node.data.displayData.datatype.domainInfo.version);\n    }\n\n    makeEditModeForValueSet(vs){\n        vs.newvalue = {};\n        vs.newvalue.valuesetId = vs.valuesetId;\n        vs.newvalue.strength = vs.strength;\n        vs.newvalue.valuesetLocations = vs.valuesetLocations;\n        vs.edit = true;\n        this.valuesetColumnWidth = '500px';\n    }\n\n    makeEditModeForComment(c){\n        c.newComment = {};\n        c.newComment.description = c.description;\n        c.edit = true;\n    }\n\n    addNewComment(node){\n        if(!node.data.displayData.datatypeBinding) node.data.displayData.datatypeBinding = [];\n        if(!node.data.displayData.datatypeBinding.comments) node.data.displayData.datatypeBinding.comments = [];\n        node.data.displayData.datatypeBinding.comments.push({edit:true, newComment : {description:''}});\n    }\n\n    addNewSingleCode(node){\n        if(!node.data.displayData.datatypeBinding) node.data.displayData.datatypeBinding = {};\n        if(!node.data.displayData.datatypeBinding.externalSingleCode) node.data.displayData.datatypeBinding.externalSingleCode = {};\n        node.data.displayData.datatypeBinding.externalSingleCode.newSingleCode = '';\n        node.data.displayData.datatypeBinding.externalSingleCode.newSingleCodeSystem = '';\n        node.data.displayData.datatypeBinding.externalSingleCode.edit = true;\n    }\n\n    submitNewSingleCode(node){\n        node.data.displayData.datatypeBinding.externalSingleCode.value = node.data.displayData.datatypeBinding.externalSingleCode.newSingleCode;\n        node.data.displayData.datatypeBinding.externalSingleCode.codeSystem = node.data.displayData.datatypeBinding.externalSingleCode.newSingleCodeSystem;\n        node.data.displayData.datatypeBinding.externalSingleCode.edit = false;\n    }\n\n    makeEditModeForSingleCode(node){\n        node.data.displayData.datatypeBinding.externalSingleCode.newSingleCode = node.data.displayData.datatypeBinding.externalSingleCode.value;\n        node.data.displayData.datatypeBinding.externalSingleCode.newSingleCodeSystem = node.data.displayData.datatypeBinding.externalSingleCode.codeSystem;\n        node.data.displayData.datatypeBinding.externalSingleCode.edit = true;\n    }\n\n    deleteSingleCode(node){\n        node.data.displayData.datatypeBinding.externalSingleCode = null;\n        node.data.displayData.hasSingleCode = false;\n    }\n\n    addNewConstantValue(node){\n        if(!node.data.displayData.datatypeBinding) node.data.displayData.datatypeBinding = {};\n        node.data.displayData.datatypeBinding.constantValue = null;\n        node.data.displayData.datatypeBinding.newConstantValue= '';\n        node.data.displayData.datatypeBinding.editConstantValue = true;\n\n        console.log(node);\n    }\n\n    deleteConstantValue(node){\n        node.data.displayData.datatypeBinding.constantValue = null;\n        node.data.displayData.datatypeBinding.editConstantValue = false;\n    }\n\n    makeEditModeForConstantValue(node){\n        node.data.displayData.datatypeBinding.newConstantValue = node.data.displayData.datatypeBinding.constantValue;\n        node.data.displayData.datatypeBinding.editConstantValue = true;\n    }\n\n    submitNewConstantValue(node){\n        node.data.displayData.datatypeBinding.constantValue = node.data.displayData.datatypeBinding.newConstantValue;\n        node.data.displayData.datatypeBinding.editConstantValue = false;\n    }\n\n    submitNewValueSet(vs){\n        var displayValueSetLink = this.getValueSetLink(vs.newvalue.valuesetId);\n        vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n        vs.label = displayValueSetLink.label;\n        vs.domainInfo = displayValueSetLink.domainInfo;\n        vs.valuesetId = vs.newvalue.valuesetId;\n        vs.strength = vs.newvalue.strength;\n        vs.valuesetLocations = vs.newvalue.valuesetLocations;\n        vs.edit = false;\n        this.valuesetColumnWidth = '200px';\n    }\n\n    submitNewComment(c){\n        c.description = c.newComment.description;\n        c.dateupdated = new Date();\n        c.edit = false;\n    }\n\n    delValueSetBinding(binding, vs, node){\n        binding.valuesetBindings = _.without(binding.valuesetBindings, _.findWhere(binding.valuesetBindings, {valuesetId: vs.valuesetId}));\n        this.setHasValueSet(node);\n    }\n\n    delCommentBinding(binding, c){\n        binding.comments = _.without(binding.comments, _.findWhere(binding.comments, c));\n    }\n\n    delTextDefinition(node){\n        node.data.text = null;\n    }\n\n    getDatatypeLink(id){\n        for (let dt of this.datatypesLinks) {\n            if(dt.id === id) return JSON.parse(JSON.stringify(dt));\n        }\n        console.log(\"Missing DT:::\" + id);\n        return null;\n    }\n\n    getValueSetLink(id){\n        for(let v of this.valuesetsLinks) {\n            if(v.id === id) return JSON.parse(JSON.stringify(v));\n        }\n        console.log(\"Missing ValueSet:::\" + id);\n        return null;\n    }\n\n    editTextDefinition(node){\n        this.selectedNode = node;\n        this.textDefinitionDialogOpen = true;\n    }\n\n    truncate(txt){\n        if(txt.length < 10) return txt;\n        else return txt.substring(0,10) + \"...\";\n    }\n\n    print(data){\n        console.log(data);\n    }\n\n    editPredicate(node){\n        this.selectedNode = node;\n        if(this.selectedNode.data.displayData.datatypeBinding) this.selectedPredicate = JSON.parse(JSON.stringify(this.selectedNode.data.displayData.datatypeBinding.predicate));\n        if(!this.selectedPredicate) this.selectedPredicate = {};\n\n        this.idMap = {};\n        this.treeData = [];\n\n        this.datatypesService.getDatatypeStructure(this.datatypeId).then(dtStructure  => {\n            this.idMap[this.datatypeId] = {name:dtStructure.name};\n\n            var rootData = {elementId:this.datatypeId};\n\n            for (let child of dtStructure.children) {\n                var childData =  JSON.parse(JSON.stringify(rootData));\n                childData.child = {\n                    elementId: child.data.id,\n                };\n\n                if(child.data.max === '1'){\n                    childData.child.instanceParameter = '1';\n                }else if (child.data.max){\n                    childData.child.instanceParameter = '*';\n                }else {\n                    childData.child.instanceParameter = '1';\n                }\n\n                var treeNode = {\n                    label: child.data.name,\n                    data : childData,\n                    expandedIcon: \"fa-folder-open\",\n                    collapsedIcon: \"fa-folder\",\n                };\n\n                var data = {\n                    id: child.data.id,\n                    name: child.data.name,\n                    max: child.data.max,\n                    position: child.data.position,\n                    usage: child.data.usage,\n                    dtId: child.data.ref.id\n                };\n\n                this.idMap[this.datatypeId + '-' + data.id] = data;\n                this.popChild(this.datatypeId + '-' + data.id, data.dtId, treeNode);\n                this.treeData.push(treeNode);\n            }\n        });\n        this.preciateEditorOpen = true;\n    }\n\n    submitCP(){\n        if(this.selectedPredicate.type === 'ASSERTION') {\n            this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedPredicate.assertion, this.idMap);\n            this.selectedPredicate.assertion.description = 'If ' + this.selectedPredicate.assertion.description;\n            this.selectedPredicate.freeText = undefined;\n        }\n        if(!this.selectedNode.data.displayData.datatypeBinding) this.selectedNode.data.displayData.datatypeBinding = {};\n        this.selectedNode.data.displayData.datatypeBinding.predicate = this.selectedPredicate;\n        this.preciateEditorOpen = false;\n        this.selectedPredicate = {};\n        this.selectedNode = null;\n    }\n\n    changeType(){\n        if(this.selectedPredicate.type == 'ASSERTION'){\n            this.selectedPredicate.assertion = {};\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.type == 'FREE'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINEDPATTERNS'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINED'){\n            this.selectedPredicate.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedPredicate.assertion.mode == 'SIMPLE'){\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.assertion.mode == 'COMPLEX'){\n            this.selectedPredicate.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    popChild(id, dtId, parentTreeNode){\n        this.datatypesService.getDatatypeStructure(dtId).then(dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n        });\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    onUsageChange(node){\n        if(node.data.usage === 'C') {\n            if(!node.data.displayData.datatypeBinding) {\n                node.data.displayData.datatypeBinding = {};\n            }\n            if(!node.data.displayData.datatypeBinding.predicate){\n                node.data.displayData.datatypeBinding.predicate = {};\n            }\n        }else if(node.data.usage !== 'C') {\n            if(node.data.displayData.datatypeBinding && node.data.displayData.datatypeBinding.predicate) {\n                node.data.displayData.datatypeBinding.predicate = undefined;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/datatype-edit/datatype-structure/datatype-edit-structure.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n  /*border-left: 5px solid #42A948; !* green *!*/\\n}\\n\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442 !important; /* red */\\n}\\n\\ninput[type=text]{\\n  border-width:0px 0px 1px 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.css\n// module chunks = common","module.exports = \"<div *ngIf=\\\"segmentConformanceStatements\\\">\\n    <h1>Conformance Statements</h1>\\n    <form #csForm=\\\"ngForm\\\">\\n        <p-accordion (onOpen)=\\\"onTabOpen($event)\\\">\\n            <p-accordionTab header=\\\"List of Conformance Statements\\\" [(selected)]=\\\"listTab\\\">\\n                <p-table [columns]=\\\"cols\\\" [value]=\\\"segmentConformanceStatements.conformanceStatements\\\" [reorderableColumns]=\\\"true\\\" [resizableColumns]=\\\"true\\\">\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\n                        <tr>\\n                            <th style=\\\"width:3em\\\"></th>\\n\\n\\n                            <th *ngFor=\\\"let col of columns\\\" pReorderableColumn [pSortableColumn]=\\\"col.sort\\\" [ngStyle]=\\\"col.colStyle\\\" pResizableColumn>\\n                                {{col.header}}\\n                                <p-sortIcon *ngIf=\\\"col.colStyle\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n                            </th>\\n\\n                            <th style=\\\"width:15em\\\" pReorderableColumn>Actions</th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\">\\n                        <tr [pReorderableRow]=\\\"index\\\">\\n                            <td>\\n                                <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\n                            </td>\\n                            <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\">\\n                                <div *ngIf=\\\"col.field === 'identifier'\\\">\\n                                    {{rowData[col.field]}}\\n                                </div>\\n                                <div *ngIf=\\\"col.field === 'description'\\\">\\n                                    <div *ngIf=\\\"rowData['type'] === 'FREE'\\\">\\n                                        {{rowData['freeText']}}\\n                                    </div>\\n                                    <div *ngIf=\\\"rowData['type'] === 'ASSERTION'\\\">\\n                                        {{rowData['assertion'].description}}\\n                                    </div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-warning\\\" icon=\\\"fa-times\\\" label=\\\"Delete\\\" (click)=\\\"deleteCS(rowData['identifier'])\\\"></button>\\n                                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"ui-button-info\\\" icon=\\\"fa-pencil\\\" label=\\\"Edit\\\" (click)=\\\"selectCS(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n\\n\\n            </p-accordionTab>\\n            <p-accordionTab header=\\\"Conformance Statement Editor\\\" [(selected)]=\\\"editorTab\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Editor Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedConformanceStatement.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label for=\\\"id\\\">ID: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-10\\\">\\n                            <input id=\\\"id\\\" name=\\\"id\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"selectedConformanceStatement.identifier\\\" type=\\\"text\\\" #id=\\\"ngModel\\\" style=\\\"width:50%;\\\"/>\\n                            <div *ngIf=\\\"id.invalid && (id.dirty || id.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"id.errors.required\\\">\\n                                    Constraint Id is required.\\n                                </div>\\n                                <div *ngIf=\\\"id.errors.minlength\\\">\\n                                    Constraint Id must be at least 2 characters long.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"selectedConformanceStatement.type && selectedConformanceStatement.type ==='ASSERTION'\\\">\\n                    <div class=\\\"ui-g ui-fluid\\\">\\n                        <div class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label>Assertion Level: </label>\\n                        </div>\\n                        <div class=\\\"ui-g-12 ui-md-4\\\">\\n                            <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedConformanceStatement.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                            <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                    Assertion Type is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-2\\\">\\n                            <label>Complex Type: </label>\\n                        </div>\\n                        <div *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" class=\\\"ui-g-12 ui-md-4\\\">\\n                            <p-dropdown id=\\\"complexAssertionType\\\" name=\\\"complexAssertionType\\\" required #complexAssertionType=\\\"ngModel\\\" [options]=\\\"complexAssertionTypes\\\" [(ngModel)]=\\\"selectedConformanceStatement.assertion.complexAssertionType\\\" (onChange)=\\\"changeComplexAssertionType(selectedConformanceStatement.assertion)\\\" placeholder=\\\"Select a complex type\\\"></p-dropdown>\\n                            <div *ngIf=\\\"complexAssertionType.invalid && (complexAssertionType.dirty || complexAssertionType.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"complexAssertionType.errors.required\\\">\\n                                    Complex Type is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <edit-free-constraint *ngIf=\\\"selectedConformanceStatement.type === 'FREE'\\\" [constraint]=\\\"selectedConformanceStatement\\\"></edit-free-constraint>\\n                <edit-simple-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n                <edit-complex-constraint *ngIf=\\\"selectedConformanceStatement.assertion && selectedConformanceStatement.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedConformanceStatement.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCS()\\\" [disabled]=\\\"csForm.invalid\\\"></button>\\n                <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"printCS(selectedConformanceStatement)\\\"></button>\\n            </p-accordionTab>\\n        </p-accordion>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport { _ } from 'underscore';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as __ from 'lodash';\n\n@Component({\n    templateUrl : './segment-edit-conformancestatements.component.html',\n    styleUrls : ['./segment-edit-conformancestatements.component.css']\n})\nexport class SegmentEditConformanceStatementsComponent  implements WithSave{\n    cols:any;\n    currentUrl:any;\n    segmentId:any;\n    segmentConformanceStatements:any;\n    idMap: any;\n    treeData: any[];\n    constraintTypes: any = [];\n    assertionModes: any = [];\n    complexAssertionTypes: any[];\n    backup:any;\n\n    selectedConformanceStatement: any = {};\n\n    listTab: boolean = true;\n    editorTab: boolean = false;\n\n    @ViewChild('csForm')\n    private csForm: NgForm;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router : Router,\n        private segmentsService : SegmentsService,\n        private datatypesService : DatatypesService,\n        private configService : GeneralConfigurationService,\n        private constraintsService : ConstraintsService,\n    ){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n\n        this.cols = [\n            { field: 'identifier', header: 'ID', colStyle: {width: '20em'}, sort:'identifier'},\n            { field: 'description', header: 'Description' }\n        ];\n    }\n\n    ngOnInit() {\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n        this.complexAssertionTypes = this.configService._complexAssertionTypes;\n        this.idMap = {};\n        this.treeData = [];\n        this.segmentId = this.route.snapshot.params[\"segmentId\"];\n\n        this.route.data.map(data =>data.segmentConformanceStatements).subscribe(x=>{\n            this.segmentConformanceStatements= x;\n\n\n            this.segmentsService.getSegmentStructure(this.segmentId).then( segStructure  => {\n                this.idMap[this.segmentId] = {name:segStructure.name};\n\n                var rootData = {elementId:this.segmentId};\n\n                for (let child of segStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(rootData));\n                    childData.child = {\n                        elementId: child.data.id,\n                    };\n\n                    if(child.data.max === '1'){\n                        childData.child.instanceParameter = '1';\n                    }else{\n                        childData.child.instanceParameter = '*';\n                    }\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data : childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: child.data.max,\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n\n                    this.idMap[this.segmentId + '-' + data.id] = data;\n                    this.popChild(this.segmentId + '-' + data.id, data.dtId, treeNode);\n                    this.treeData.push(treeNode);\n\n                    this.backup=__.cloneDeep(this.segmentConformanceStatements);\n                }\n            });\n        });\n    }\n\n    reset(){\n        this.segmentConformanceStatements=__.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.segmentConformanceStatements;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.csForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.segmentsService.saveSegmentConformanceStatements(this.segmentId, this.segmentConformanceStatements);\n    }\n\n    popChild(id, dtId, parentTreeNode){\n\n        this.datatypesService.getDatatypeStructure(dtId).then( dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n\n\n        });\n\n\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    changeType(){\n        if(this.selectedConformanceStatement.type == 'ASSERTION'){\n            this.selectedConformanceStatement.assertion = {};\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.type == 'FREE'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINEDPATTERNS'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }else if(this.selectedConformanceStatement.type == 'PREDEFINED'){\n            this.selectedConformanceStatement.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedConformanceStatement.assertion.mode == 'SIMPLE'){\n            this.selectedConformanceStatement.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedConformanceStatement.assertion.mode == 'COMPLEX'){\n            this.selectedConformanceStatement.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    submitCS(){\n        if(this.selectedConformanceStatement.type === 'ASSERTION') this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedConformanceStatement.assertion, this.idMap);\n        this.deleteCS(this.selectedConformanceStatement.identifier);\n        this.segmentConformanceStatements.conformanceStatements.push(this.selectedConformanceStatement);\n        this.selectedConformanceStatement = {};\n        this.editorTab = false;\n        this.listTab = true;\n    }\n\n    selectCS(cs){\n        this.selectedConformanceStatement = JSON.parse(JSON.stringify(cs));\n        this.editorTab = true;\n        this.listTab = false;\n    }\n\n    deleteCS(identifier){\n        this.segmentConformanceStatements.conformanceStatements = _.without(this.segmentConformanceStatements.conformanceStatements, _.findWhere(this.segmentConformanceStatements.conformanceStatements, {identifier: identifier}));\n    }\n\n    printCS(cs){\n        console.log(cs);\n    }\n\n    onTabOpen(e) {\n        if(e.index === 0) this.selectedConformanceStatement = {};\n    }\n\n    changeComplexAssertionType(constraint){\n        if(constraint.complexAssertionType === 'ANDOR'){\n            constraint.child = undefined;\n            constraint.ifAssertion = undefined;\n            constraint.thenAssertion = undefined;\n            constraint.operator = 'AND';\n            constraint.assertions = [];\n            constraint.assertions.push({\n                \"mode\": \"SIMPLE\"\n            });\n\n            constraint.assertions.push({\n                \"mode\": \"SIMPLE\"\n            });\n        }else if(constraint.complexAssertionType === 'NOT'){\n            constraint.assertions = undefined;\n            constraint.ifAssertion = undefined;\n            constraint.thenAssertion = undefined;\n            constraint.child = {\n                \"mode\": \"SIMPLE\"\n            };\n        }else if(constraint.complexAssertionType === 'IFTHEN'){\n            constraint.assertions = undefined;\n            constraint.child = undefined;\n            constraint.ifAssertion = {\n                \"mode\": \"SIMPLE\"\n            };\n            constraint.thenAssertion = {\n                \"mode\": \"SIMPLE\"\n            };\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\n\n\n@Injectable()\nexport  class SegmentEditConformanceStatementsResolver implements Resolve<any>{\n    constructor(private http: HttpClient,private segmentService: SegmentsService) {}\n\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let segmentId= route.params[\"segmentId\"];\n        return this.segmentService.getSegmentConformanceStatements(segmentId);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-conformancestatements/segment-edit-conformancestatements.resolver.ts","/**\n * Created by hnt5 on 10/16/17.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'dtFlavor'})\nexport class DtFlavorPipe implements PipeTransform {\n    transform(list : any[], base : string) : any[] {\n        if(list && base){\n            return list.filter(node => node.label.startsWith(base));\n        }\n        return [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-definition/coconstraint-table/datatype-name.pipe.ts","/**\n * Created by hnt5 on 10/23/17.\n */\nimport {RouterModule} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {SegmentEditMetadataComponent} from \"./segment-metadata/segment-edit-metadata.component\";\nimport {SegmentEditPredefComponent} from \"./segment-predef/segment-edit-predef.component\";\nimport {SegmentEditPostdefComponent} from \"./segment-postdef/segment-edit-postdef.component\";\nimport {SegmentEditStructureComponent} from \"./segment-structure/segment-edit-structure.component\";\nimport {SegmentEditConformanceStatementsComponent} from \"./segment-conformancestatements/segment-edit-conformancestatements.component\";\nimport {SegmentEditMetadatResolver} from \"./segment-metadata/segment-edit-metadata.resolver\";\nimport {SegmentEditStructureResolver} from \"./segment-structure/segment-edit-structure.resolver\";\nimport {SegmentEditPredefResolver} from \"./segment-predef/segment-edit-predef.resolver\";\nimport {SegmentEditPostdefResolver} from \"./segment-postdef/segment-edit-postdef.resolver\";\nimport {SegmentEditConformanceStatementsResolver} from \"./segment-conformancestatements/segment-edit-conformancestatements.resolver\";\nimport {SaveFormsGuard} from \"../../../guards/save.guard\";\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n        {\n            path: ':segmentId', component: SegmentEditStructureComponent,  canDeactivate: [SaveFormsGuard],  resolve: { segmentStructure : SegmentEditStructureResolver}\n        },\n        {\n            path: ':segmentId/metadata', component: SegmentEditMetadataComponent,  canDeactivate: [SaveFormsGuard] ,resolve: { segmentMetadata : SegmentEditMetadatResolver}\n        },\n        {\n            path: ':segmentId/preDef', component: SegmentEditPredefComponent,  canDeactivate: [SaveFormsGuard],  resolve: { segmentPredef : SegmentEditPredefResolver}\n        },\n        {\n            path: ':segmentId/structure', component: SegmentEditStructureComponent,  canDeactivate: [SaveFormsGuard],  resolve: { segmentStructure : SegmentEditStructureResolver}\n        },\n        {\n            path: ':segmentId/postDef', component: SegmentEditPostdefComponent,  canDeactivate: [SaveFormsGuard],  resolve: { segmentPostdef : SegmentEditPostdefResolver}\n        },\n        {\n            path: ':segmentId/conformanceStatement', component: SegmentEditConformanceStatementsComponent,  canDeactivate: [SaveFormsGuard],  resolve: { segmentConformanceStatements : SegmentEditConformanceStatementsResolver}\n        }\n    ])\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class SegmentEditRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-edit-routing.module.ts","/**\n * Created by hnt5 on 10/23/17.\n */\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {SegmentEditMetadataComponent} from \"./segment-metadata/segment-edit-metadata.component\";\nimport {SegmentEditStructureComponent} from \"./segment-structure/segment-edit-structure.component\";\nimport {SegmentEditConformanceStatementsComponent} from \"./segment-conformancestatements/segment-edit-conformancestatements.component\";\nimport {SegmentEditPredefComponent} from \"./segment-predef/segment-edit-predef.component\";\nimport {SegmentEditPostdefComponent} from \"./segment-postdef/segment-edit-postdef.component\";\nimport {SegmentEditRoutingModule} from \"./segment-edit-routing.module\";\nimport {TabMenuModule} from \"primeng/components/tabmenu/tabmenu\";\nimport {TreeTableModule} from \"primeng/components/treetable/treetable\";\nimport {FormsModule} from \"@angular/forms\";\nimport {DialogModule} from \"primeng/components/dialog/dialog\";\nimport {DropdownModule} from \"primeng/components/dropdown/dropdown\";\nimport {ButtonModule} from 'primeng/button';\nimport {AccordionModule} from 'primeng/accordion';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {TableModule} from 'primeng/table';\nimport {UtilsModule} from \"../../../utils/utils.module\";\nimport {SegmentEditMetadatResolver} from \"./segment-metadata/segment-edit-metadata.resolver\";\nimport {FroalaEditorModule, FroalaViewModule} from 'angular-froala-wysiwyg';\nimport {MessageModule} from 'primeng/message';\nimport {SegmentEditStructureResolver} from \"./segment-structure/segment-edit-structure.resolver\";\nimport {SegmentEditPredefResolver} from \"./segment-predef/segment-edit-predef.resolver\";\nimport {SegmentEditPostdefResolver} from \"./segment-postdef/segment-edit-postdef.resolver\";\nimport {SegmentEditConformanceStatementsResolver} from \"./segment-conformancestatements/segment-edit-conformancestatements.resolver\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TabMenuModule,\n        DialogModule,\n        DropdownModule,\n        SegmentEditRoutingModule,\n        UtilsModule,\n        TreeTableModule,\n        ButtonModule,\n        AccordionModule,\n        SelectButtonModule,\n        TableModule,\n        FroalaEditorModule.forRoot(),\n        FroalaViewModule.forRoot(),\n        MessageModule\n    ],\n    providers : [SegmentEditMetadatResolver, SegmentEditStructureResolver, SegmentEditPredefResolver, SegmentEditPostdefResolver, SegmentEditConformanceStatementsResolver],\n    declarations: [SegmentEditMetadataComponent, SegmentEditStructureComponent, SegmentEditPredefComponent, SegmentEditPostdefComponent, SegmentEditConformanceStatementsComponent],\n    schemas : [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class SegmentEditModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-edit.module.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.css\n// module chunks = common","module.exports = \"<h2>SEGMENT Metadata</h2>\\n<div *ngIf=\\\"segmentMetadata\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Name\\n            </label>\\n            <input name=\\\"name\\\" id=\\\"name\\\" pInputText type=\\\"text\\\" disabled class=\\\"ui-g-10\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"segmentMetadata.name\\\" required />\\n            <div class=\\\"ui-g-offset-1\\\" *ngIf=\\\"name.invalid&& (name.dirty || name.touched)\\\">\\n                <p-message severity=\\\"error\\\" text=\\\"Name is required\\\"></p-message>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Flavor Name (Ext)\\n            </label>\\n            <input name=\\\"ext\\\" id=\\\"ext\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #ext=\\\"ngModel\\\" [(ngModel)]=\\\"segmentMetadata.ext\\\" required />\\n            <div class=\\\"ui-g-offset-2\\\" *ngIf=\\\"ext.invalid && (ext.dirty || ext.touched)\\\">\\n                <p-message severity=\\\"error\\\" text=\\\"Extension is required\\\"></p-message>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Description\\n            </label>\\n            <input name=\\\"description\\\" id=\\\"description\\\" pInputText type=\\\"text\\\" class=\\\"ui-g-10\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"segmentMetadata.description\\\" />\\n        </div>\\n\\n        <div class=\\\"ui-g input-box\\\">\\n            <label class=\\\"metadata-label ui-g-2\\\">\\n                Author Notes\\n            </label>\\n            <div class=\\\"ui-g-10\\\" [froalaEditor] [(froalaModel)]=\\\"segmentMetadata.authorNote\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, Input, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\n\nimport * as _ from 'lodash';\n\nimport 'rxjs/add/operator/filter';\nimport {TocService} from \"../../service/toc.service\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {IndexedDbService} from \"../../../../service/indexed-db/indexed-db.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport {SegmentsTocService} from \"../../../../service/indexed-db/segments/segments-toc.service\";\n\n\n\n@Component({\n  selector : 'segment-edit',\n  templateUrl : './segment-edit-metadata.component.html',\n  styleUrls : ['./segment-edit-metadata.component.css']\n})\nexport class SegmentEditMetadataComponent implements WithSave {\n  segmentId:any;\n  segmentMetadata:any;\n  backup:any;\n  currentNode:any;\n\n  @ViewChild('editForm')\n  private editForm: NgForm;\n\n  constructor(public indexedDbService: IndexedDbService, private route: ActivatedRoute, private  router : Router, private segmentsService : SegmentsService, private segmentsTocService:SegmentsTocService,private tocService:TocService){\n    this.tocService.getActiveNode().subscribe(x=>{\n      console.log(x);\n      this.currentNode=x;\n    });\n  }\n\n  ngOnInit() {\n    this.segmentId = this.route.snapshot.params[\"segmentId\"];\n    this.route.data.map(data =>data.segmentMetadata).subscribe(x=>{\n\n      this.segmentsTocService.getAll().then(segments=>{\n        console.log(segments);\n        this.backup=x;\n        this.segmentMetadata=_.cloneDeep(this.backup);\n\n      });\n\n    });\n  }\n\n  reset(){\n    this.segmentMetadata=_.cloneDeep(this.backup);\n  }\n\n  getCurrent(){\n\n   return  this.segmentMetadata;\n  }\n  getBackup(){\n    return this.backup;\n  }\n\n  isValid(){\n    return !this.editForm.invalid;\n  }\n  save(){\n    this.tocService.getActiveNode().subscribe(x=>{\n\n        let node= x;\n        node.data.data.ext= _.cloneDeep(this.segmentMetadata.ext);\n\n\n      }\n    );\n    console.log(\"saving segment Meta Data\");\n\n    return this.segmentsService.saveSegmentMetadata(this.segmentId,this.segmentMetadata);\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\n\n\n@Injectable()\nexport  class SegmentEditMetadatResolver implements Resolve<any> {\n\n\n  constructor(private http: HttpClient, private segmentService: SegmentsService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, rstate: RouterStateSnapshot): Promise<any> {\n    const segmentId = route.params['segmentId'];\n    return this.segmentService.getSegmentMetadata(segmentId);\n  }\n\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-metadata/segment-edit-metadata.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.css\n// module chunks = common","module.exports = \"<h2>SEGMENT Post Definition TEXT</h2>\\n<div *ngIf=\\\"segmentPostdef\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"segmentPostdef.postDef\\\"></div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {HttpClient} from \"@angular/common/http\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector : 'segment-edit',\n  templateUrl : './segment-edit-postdef.component.html',\n  styleUrls : ['./segment-edit-postdef.component.css']\n})\n\nexport class SegmentEditPostdefComponent implements WithSave {\n    currentUrl:any;\n    segmentId:any;\n    segmentPostdef:any;\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private segmentsService : SegmentsService, private http:HttpClient){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.segmentId = this.route.snapshot.params[\"segmentId\"];\n        this.route.data.map(data =>data.segmentPostdef).subscribe(x=>{\n            this.backup=x;\n            this.segmentPostdef=_.cloneDeep(this.backup);\n        });\n    }\n\n    reset(){\n        this.segmentPostdef=_.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.segmentPostdef;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.editForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.segmentsService.saveSegmentPostDef(this.segmentId, this.segmentPostdef);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\n\n\n@Injectable()\nexport  class SegmentEditPostdefResolver implements Resolve<any>{\n\n\n    constructor(private http: HttpClient,private segmentService: SegmentsService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let segmentId= route.params[\"segmentId\"];\n        return this.segmentService.getSegmentPostDef(segmentId);\n\n    }\n\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-postdef/segment-edit-postdef.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.css\n// module chunks = common","module.exports = \"<h2>SEGMENT Pre Definition TEXT</h2>\\n<div *ngIf=\\\"segmentPredef\\\">\\n    <form #editForm=\\\"ngForm\\\">\\n        <div class=\\\"ui-g input-box\\\">\\n            <div class=\\\"ui-g-12\\\" [froalaEditor] [(froalaModel)]=\\\"segmentPredef.preDef\\\"></div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {HttpClient} from \"@angular/common/http\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as _ from 'lodash';\n\n\n\n@Component({\n  selector : 'segment-edit',\n  templateUrl : './segment-edit-predef.component.html',\n  styleUrls : ['./segment-edit-predef.component.css']\n})\nexport class SegmentEditPredefComponent implements WithSave {\n    currentUrl:any;\n    segmentId:any;\n    segmentPredef:any;\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(private route: ActivatedRoute, private  router : Router, private segmentsService : SegmentsService, private http:HttpClient){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.segmentId = this.route.snapshot.params[\"segmentId\"];\n        this.route.data.map(data =>data.segmentPredef).subscribe(x=>{\n            this.backup=x;\n            this.segmentPredef=_.cloneDeep(this.backup);\n        });\n    }\n\n    reset(){\n        this.segmentPredef=_.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.segmentPredef;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        return !this.editForm.invalid;\n    }\n\n    save(): Promise<any>{\n        return this.segmentsService.saveSegmentPreDef(this.segmentId, this.segmentPredef);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\n\n\n@Injectable()\nexport  class SegmentEditPredefResolver implements Resolve<any>{\n\n\n  constructor(private http: HttpClient,private segmentService: SegmentsService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n      let segmentId= route.params[\"segmentId\"];\n      return this.segmentService.getSegmentPreDef(segmentId);\n\n  }\n\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-predef/segment-edit-predef.resolver.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sg-bar {\\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f2f5f6+0,e3eaed+37,c8d7dc+100;Grey+3D+%234 */\\n  background: #f2f5f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\n  background: -webkit-gradient(linear, left top, left bottom, from(#f2f5f6),color-stop(37%, #e3eaed),to(#c8d7dc));\\n  background: linear-gradient(to bottom, #f2f5f6 0%,#e3eaed 37%,#c8d7dc 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=0 ); /* IE6-9 */\\n\\n\\n  padding-bottom: 10px;\\n  padding-top   : 10px;\\n  font-size : 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.css\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.css\n// module chunks = common","module.exports = \"<h2>Segment Structure</h2>\\n\\n<div *ngIf=\\\"segmentStructure\\\">\\n    <p-treeTable [value]=\\\"segmentStructure.children\\\" tableStyleClass=\\\"table-condensed table-stripped table-bordered\\\" (onNodeExpand)=\\\"loadNode($event)\\\">\\n\\n        <p-column header=\\\"Name\\\" [style]=\\\"{'width':'350px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <display-badge [type]=\\\"node.data.displayData.type\\\"></display-badge>{{node.data.position}}. {{node.data.name}}\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Usage\\\" [style]=\\\"{'width':'190px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\" >\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <p-dropdown *ngIf=\\\"node.data.usage !== 'C'\\\" [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '100%'}\\\"></p-dropdown>\\n                    <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                        <p-dropdown [options]=\\\"usages\\\" [(ngModel)]=\\\"node.data.usage\\\" appendTo=\\\"body\\\" (onChange)=\\\"onUsageChange(node)\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>\\n                        (<p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.segmentBinding.predicate.trueUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>/\\n                        <p-dropdown [options]=\\\"cUsages\\\" [(ngModel)]=\\\"node.data.displayData.segmentBinding.predicate.falseUsage\\\" appendTo=\\\"body\\\" [style]=\\\"{'width' : '30%'}\\\"></p-dropdown>)\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.fieldDTbinding|| !node.data.displayData.fieldDTbinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate\\\">C({{node.data.displayData.fieldDTbinding.predicate.trueUsage}}/{{node.data.displayData.fieldDTbinding.predicate.falseUsage}})</div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                    <div *ngIf=\\\"node.data.usage !== 'C' || !node.data.displayData.componentDTbinding || !node.data.displayData.componentDTbinding.predicate\\\">{{node.data.usage}}</div>\\n                    <div *ngIf=\\\"node.data.usage === 'C' && node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate\\\">C({{node.data.displayData.componentDTbinding.predicate.trueUsage}}/{{node.data.displayData.componentDTbinding.predicate.falseUsage}})</div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Cardinality\\\" [style]=\\\"{'width':'100px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <input required id=\\\"min\\\" [(ngModel)]=\\\"node.data.min\\\" type=\\\"number\\\" #min=\\\"ngModel\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                    <input required id=\\\"max\\\" [(ngModel)]=\\\"node.data.max\\\" type=\\\"text\\\" #max=\\\"ngModel\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Length\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <div *ngIf=\\\"node.data.minLength !== 'NA' && node.data.displayData.datatype.leaf\\\">\\n                        <input [(ngModel)]=\\\"node.data.minLength\\\" type=\\\"number\\\" style=\\\"width:40%;border-width:0px 0px 1px 0px\\\"/>\\n                        <input [(ngModel)]=\\\"node.data.maxLength\\\" type=\\\"text\\\" style=\\\"width:40%;border-width:0px 0px 1px 0px\\\"/>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delLength(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type !== 'FIELD'\\\">\\n                    [{{node.data.minLength}}..{{node.data.maxLength}}]\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Conf. Length\\\" [style]=\\\"{'width':'120px'}\\\" >\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <ng-container *ngIf=\\\"node.data.confLength !== 'NA' && node.data.displayData.datatype.leaf\\\">\\n                        <input [(ngModel)]=\\\"node.data.confLength\\\" type=\\\"text\\\" style=\\\"width: 80%;border-width:0px 0px 1px 0px\\\"/>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delConfLength(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </ng-container>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.type !== 'FIELD'\\\">\\n                    {{node.data.confLength}}\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Datatype\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"!node.data.displayData.datatype.edit\\\">\\n                    <display-ref [elm]=\\\"node.data.displayData.datatype\\\"></display-ref>\\n                    <i class=\\\"fa fa-pencil\\\" *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\" (click)=\\\"makeEditModeForDatatype(node)\\\"></i>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.datatype.edit\\\">\\n                    <p-dropdown [options]=\\\"node.data.displayData.datatype.dtOptions\\\" [(ngModel)]=\\\"node.data.displayData.datatype.id\\\" (onChange)=\\\"onDatatypeChange(node)\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'100%'}\\\">\\n                        <ng-template let-option pTemplate=\\\"body\\\">\\n                            <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\n                                <display-ref *ngIf=\\\"option.value\\\" [elm]=\\\"getDatatypeElm(option.value)\\\"></display-ref>\\n                                <span *ngIf=\\\"!option.value\\\" (click)=\\\"node.data.displayData.datatype.dtOptions = datatypeOptions\\\">{{option.label}}</span>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"ValueSet\\\" [style]=\\\"{'width':valuesetColumnWidth}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && !node.data.displayData.hasSingleCode\\\">\\n                    <div *ngIf=\\\"node.data.displayData.segmentBinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.segmentBinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'SEGMENT'\\\"></display-ref>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForValueSet(vs)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"delValueSetBinding(node.data.displayData.segmentBinding, vs, node.data.displayData)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"vs.edit\\\">\\n                                <p-dropdown [options]=\\\"valuesetOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetId\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\" filter=\\\"true\\\">\\n                                    <ng-template let-option pTemplate=\\\"body\\\">\\n                                        <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\n                                            <display-ref *ngIf=\\\"option.value\\\" [elm]=\\\"getValueSetElm(option.value)\\\"></display-ref>\\n                                            <span *ngIf=\\\"!option.value\\\">{{option.label}}</span>\\n                                        </div>\\n                                    </ng-template>\\n                                </p-dropdown>\\n                                <p-dropdown [options]=\\\"valuesetStrengthOptions\\\" [(ngModel)]=\\\"vs.newvalue.strength\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <p-dropdown *ngIf=\\\"node.data.displayData.valueSetLocationOptions\\\" [options]=\\\"node.data.displayData.valueSetLocationOptions\\\" [(ngModel)]=\\\"vs.newvalue.valuesetLocations\\\" appendTo=\\\"body\\\" [style]=\\\"{'width':'150px'}\\\">\\n                                </p-dropdown>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewValueSet(vs); node.data.displayData.hasValueSet = true;\\\" [disabled]=\\\"!vs.newvalue.valuesetId\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.valuesetBindings || node.data.displayData.segmentBinding.valuesetBindings.length === 0) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.fieldDTbinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'FIELD'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.valuesetBindings || node.data.displayData.segmentBinding.valuesetBindings.length === 0) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.valuesetBindings || node.data.displayData.fieldDTbinding.valuesetBindings.length === 0) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngFor=\\\"let vs of node.data.displayData.componentDTbinding.valuesetBindings\\\">\\n                            <div *ngIf=\\\"!vs.edit\\\">\\n                                <display-ref [elm]=\\\"vs\\\" [from]=\\\"'COMPONENT'\\\"></display-ref>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"node.data.displayData.multipleValuesetAllowed || !node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.valuesetBindings || node.data.displayData.segmentBinding.valuesetBindings.length == 0\\\" (click)=\\\"addNewValueSet(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Single Code\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.valuesetAllowed && node.data.displayData.datatype.leaf && !node.data.displayData.hasValueSet\\\">\\n                    <div *ngIf=\\\"node.data.displayData.segmentBinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.segmentBinding.externalSingleCode\\\">\\n                            <div *ngIf=\\\"!node.data.displayData.segmentBinding.externalSingleCode.edit\\\">\\n                                <display-singlecode [elm]=\\\"node.data.displayData.segmentBinding.externalSingleCode\\\" [from]=\\\"'SEGMENT'\\\"></display-singlecode>\\n                                <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                <i class=\\\"fa fa-times\\\" (click)=\\\"deleteSingleCode(node)\\\" style=\\\"width:20%;\\\"></i>\\n                            </div>\\n                            <div *ngIf=\\\"node.data.displayData.segmentBinding.externalSingleCode.edit\\\">\\n                                <input [(ngModel)]=\\\"node.data.displayData.segmentBinding.externalSingleCode.newSingleCode\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <input [(ngModel)]=\\\"node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem\\\" type=\\\"text\\\" style=\\\"width:45%;border-width:0px 0px 1px 0px\\\"/>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewSingleCode(node); node.data.displayData.hasSingleCode = true;\\\" [disabled]=\\\"node.data.displayData.segmentBinding.externalSingleCode.newSingleCode === '' || node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem === ''\\\"></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.fieldDTbinding.externalSingleCode\\\" [from]=\\\"'FIELD'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.externalSingleCode) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\">\\n                            <display-singlecode [elm]=\\\"node.data.displayData.componentDTbinding.externalSingleCode\\\" [from]=\\\"'COMPONENT'\\\"></display-singlecode>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.externalSingleCode\\\" (click)=\\\"addNewSingleCode(node)\\\"></i>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Constant Value\\\" [style]=\\\"{'width':'200px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.datatype.leaf && !node.data.displayData.valuesetAllowed\\\">\\n                    <div *ngIf=\\\"node.data.displayData.segmentBinding\\\">\\n                            <div *ngIf=\\\"!node.data.displayData.segmentBinding.editConstantValue\\\">\\n                                <div *ngIf=\\\"node.data.displayData.segmentBinding.constantValue\\\">\\n                                    <display-constantvalue [elm]=\\\"node.data.displayData.segmentBinding.constantValue\\\" [from]=\\\"'SEGMENT'\\\"></display-constantvalue>\\n                                    <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                    <i class=\\\"fa fa-times\\\" (click)=\\\"deleteConstantValue(node)\\\" style=\\\"width:20%;\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"node.data.displayData.segmentBinding.editConstantValue\\\">\\n                                <input [(ngModel)]=\\\"node.data.displayData.segmentBinding.newConstantValue\\\" type=\\\"text\\\" style=\\\"width:90%;border-width:0px 0px 1px 0px\\\"/>\\n                                <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewConstantValue(node)\\\" [disabled]=\\\"node.data.displayData.segmentBinding.newConstantValue === ''\\\"></button>\\n                            </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.constantValue) && node.data.displayData.fieldDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding.constantValue !== undefined  && node.data.displayData.fieldDTbinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.fieldDTbinding.constantValue\\\" [from]=\\\"'FIELD'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"(!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.constantValue) && (!node.data.displayData.fieldDTbinding || !node.data.displayData.fieldDTbinding.constantValue) && node.data.displayData.componentDTbinding\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding.constantValue  !== undefined && node.data.displayData.componentDTbinding.constantValue !== ''\\\">\\n                            <display-constantvalue [elm]=\\\"node.data.displayData.componentDTbinding.constantValue\\\" [from]=\\\"'COMPONENT'\\\"></display-constantvalue>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"!node.data.displayData.segmentBinding || !node.data.displayData.segmentBinding.editConstantValue\\\">\\n                        <i class=\\\"fa fa-plus\\\" *ngIf=\\\"!node.data.displayData.segmentBinding || (node.data.displayData.segmentBinding && !node.data.displayData.segmentBinding.constantValue)\\\" (click)=\\\"addNewConstantValue(node)\\\"></i>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Predicate\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.usage === 'C'\\\">\\n                    <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                        <div *ngIf=\\\"node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate && node.data.displayData.segmentBinding.predicate.freeText\\\">\\n                            {{node.data.displayData.segmentBinding.predicate.freeText}}\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate && node.data.displayData.segmentBinding.predicate.assertion && node.data.displayData.segmentBinding.predicate.assertion.description\\\">\\n                            {{node.data.displayData.segmentBinding.predicate.assertion.description}}\\n                        </div>\\n                        <i class=\\\"fa fa-pencil\\\" (click)=\\\"editPredicate(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </div>\\n                    <div *ngIf=\\\"node.data.displayData.type === 'COMPONENT'\\\">\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate && node.data.displayData.fieldDTbinding.predicate.freeText\\\">\\n                            {{node.data.displayData.fieldDTbinding.predicate.freeText}}\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.fieldDTbinding && node.data.displayData.fieldDTbinding.predicate && node.data.displayData.fieldDTbinding.predicate.assertion && node.data.displayData.fieldDTbinding.predicate.assertion.description\\\">\\n                            {{node.data.displayData.fieldDTbinding.predicate.assertion.description}}\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"node.data.displayData.type === 'SUBCOMPONENT'\\\">\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.freeText\\\">\\n                            {{node.data.displayData.componentDTbinding.predicate.freeText}}\\n                        </div>\\n                        <div *ngIf=\\\"node.data.displayData.componentDTbinding && node.data.displayData.componentDTbinding.predicate && node.data.displayData.componentDTbinding.predicate.assertion && node.data.displayData.componentDTbinding.predicate.assertion.description\\\">\\n                            {{node.data.displayData.componentDTbinding.predicate.assertion.description}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n\\n        <p-column header=\\\"Text Definition\\\" [style]=\\\"{'width':'150px'}\\\">\\n            <ng-template let-col let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.type === 'FIELD'\\\">\\n                    <ng-container *ngIf=\\\"node.data.text\\\">\\n                        <span (click)=\\\"editTextDefinition(node)\\\">{{truncate(node.data.text)}}</span>\\n                        <i class=\\\"fa fa-times\\\" (click)=\\\"delTextDefinition(node)\\\" style=\\\"width:20%;\\\"></i>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!node.data.text\\\">\\n                        <i class=\\\"fa fa-pencil\\\" (click)=\\\"editTextDefinition(node)\\\"></i>\\n                    </ng-container>\\n                </div>\\n            </ng-template>\\n        </p-column>\\n        <p-column header=\\\"Comment\\\" [style]=\\\"{'width':'400px'}\\\">\\n            <ng-template let-node=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                <div *ngIf=\\\"node.data.displayData.segmentBinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.segmentBinding.comments\\\">\\n                        <div *ngIf=\\\"!c.edit\\\">\\n                            <display-comment [elm]=\\\"c\\\" [from]=\\\"'SEGMENT'\\\"></display-comment>\\n                            <i class=\\\"fa fa-pencil\\\" (click)=\\\"makeEditModeForComment(c)\\\" style=\\\"width:20%;\\\"></i>\\n                            <i class=\\\"fa fa-times\\\" (click)=\\\"delCommentBinding(node.data.displayData.segmentBinding, c)\\\" style=\\\"width:20%;\\\"></i>\\n                        </div>\\n                        <div *ngIf=\\\"c.edit\\\">\\n                            <textarea pInputTextarea [(ngModel)]=\\\"c.newComment.description\\\"></textarea>\\n                            <button pButton type=\\\"button\\\" class=\\\"blue-btn\\\" icon=\\\"fa-check\\\" (click)=\\\"submitNewComment(c);\\\" [disabled]=\\\"c.newComment.description === ''\\\"></button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.fieldDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.fieldDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'FIELD'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"node.data.displayData.componentDTbinding\\\">\\n                    <div *ngFor=\\\"let c of node.data.displayData.componentDTbinding.comments\\\">\\n                        <display-comment [elm]=\\\"c\\\" [from]=\\\"'COMPONENT'\\\"></display-comment>\\n                    </div>\\n                </div>\\n                <i class=\\\"fa fa-plus\\\" (click)=\\\"addNewComment(node)\\\"></i>\\n            </ng-template>\\n        </p-column>\\n    </p-treeTable>\\n\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Text Definition of {{selectedNode.data.name}}\\\" [(visible)]=\\\"textDefinitionDialogOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\">\\n        <textarea pInputTextarea [(ngModel)]=\\\"selectedNode.data.text\\\"></textarea>\\n    </p-dialog>\\n\\n    <p-dialog *ngIf=\\\"selectedNode\\\" header=\\\"Edit Predicate of {{selectedNode.data.name}}\\\" [(visible)]=\\\"preciateEditorOpen\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"1200\\\" [minWidth]=\\\"800\\\" [minY]=\\\"70\\\">\\n        <form #cpForm=\\\"ngForm\\\">\\n            <div class=\\\"ui-g ui-fluid\\\">\\n                <div class=\\\"ui-g-12 ui-md-2\\\">\\n                    <label>Editor Type: </label>\\n                </div>\\n                <div class=\\\"ui-g-12 ui-md-10\\\">\\n                    <p-selectButton name=\\\"type\\\" [options]=\\\"constraintTypes\\\" [(ngModel)]=\\\"selectedPredicate.type\\\" (onChange)=\\\"changeType()\\\"></p-selectButton>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"selectedPredicate.type && selectedPredicate.type ==='ASSERTION'\\\">\\n                <div class=\\\"ui-g ui-fluid\\\">\\n                    <div class=\\\"ui-g-12 ui-md-2\\\">\\n                        <label>Assertion Type: </label>\\n                    </div>\\n                    <div class=\\\"ui-g-12 ui-md-10\\\">\\n                        <p-dropdown id=\\\"assertionMode\\\" name=\\\"assertionMode\\\" required #assertionMode=\\\"ngModel\\\" [options]=\\\"assertionModes\\\" [(ngModel)]=\\\"selectedPredicate.assertion.mode\\\" (onChange)=\\\"changeAssertionMode()\\\"></p-dropdown>\\n                        <div *ngIf=\\\"assertionMode.invalid && (assertionMode.dirty || assertionMode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"assertionMode.errors.required\\\">\\n                                Assertion Type is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <edit-free-constraint *ngIf=\\\"selectedPredicate.type === 'FREE'\\\" [constraint]=\\\"selectedPredicate\\\"></edit-free-constraint>\\n            <edit-simple-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'SIMPLE'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'rootSimple'\\\"></edit-simple-constraint>\\n            <edit-complex-constraint *ngIf=\\\"selectedPredicate.assertion && selectedPredicate.assertion.mode === 'COMPLEX'\\\" [constraint]=\\\"selectedPredicate.assertion\\\" [idMap]=\\\"idMap\\\" [treeData]=\\\"treeData\\\" [groupName]=\\\"'root'\\\"></edit-complex-constraint>\\n\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-plus\\\" label=\\\"Submit\\\" (click)=\\\"submitCP()\\\" [disabled]=\\\"cpForm.invalid\\\"></button>\\n            <button pButton style=\\\"float: right\\\" type=\\\"button\\\"  class=\\\"blue-btn\\\" icon=\\\"fa-print\\\" label=\\\"Print\\\" (click)=\\\"print(selectedConformanceStatement)\\\"></button>\\n        </form>\\n    </p-dialog>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.html\n// module id = ../../../../../src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.html\n// module chunks = common","/**\n * Created by Jungyub on 10/23/17.\n */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\nimport 'rxjs/add/operator/filter';\nimport {GeneralConfigurationService} from \"../../../../service/general-configuration/general-configuration.service\";\n\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\nimport {DatatypesService} from \"../../../../service/datatypes/datatypes.service\";\nimport {IndexedDbService} from \"../../../../service/indexed-db/indexed-db.service\";\nimport {ConstraintsService} from \"../../../../service/constraints/constraints.service\";\n\nimport { _ } from 'underscore';\nimport {DatatypesTocService} from \"../../../../service/indexed-db/datatypes/datatypes-toc.service\";\nimport {ValuesetsTocService} from \"../../../../service/indexed-db/valuesets/valuesets-toc.service\";\n\nimport {WithSave} from \"../../../../guards/with.save.interface\";\nimport {NgForm} from \"@angular/forms\";\nimport * as __ from 'lodash';\nimport {TocService} from \"../../service/toc.service\";\nimport {Types} from \"../../../../common/constants/types\";\n\n@Component({\n    selector : 'segment-edit',\n    templateUrl : './segment-edit-structure.component.html',\n    styleUrls : ['./segment-edit-structure.component.css']\n})\nexport class SegmentEditStructureComponent implements WithSave {\n    valuesetColumnWidth:string = '200px';\n    currentUrl:any;\n    segmentId:any;\n    segmentStructure:any;\n    usages:any;\n    cUsages:any;\n    textDefinitionDialogOpen:boolean = false;\n    selectedNode:any;\n    valuesetStrengthOptions:any = [];\n\n    preciateEditorOpen:boolean = false;\n\n    selectedPredicate: any = {};\n    constraintTypes: any = [];\n    assertionModes: any = [];\n    idMap: any;\n    treeData: any[];\n\n    valuesetsLinks :any = [];\n    datatypesLinks :any = [];\n    datatypeOptions:any = [];\n    valuesetOptions:any = [{label:'Select ValueSet', value:null}];\n\n    backup:any;\n\n    @ViewChild('editForm')\n    private editForm: NgForm;\n\n    constructor(public indexedDbService: IndexedDbService, private route: ActivatedRoute, private  router : Router, private configService : GeneralConfigurationService, private segmentsService : SegmentsService, private datatypesService : DatatypesService,\n                private constraintsService : ConstraintsService,\n                private datatypesTocService : DatatypesTocService,\n                private valuesetsTocService : ValuesetsTocService,private tocService:TocService){\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd ) {\n                this.currentUrl=event.url;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.segmentId = this.route.snapshot.params[\"segmentId\"];\n\n        this.usages = this.configService._usages;\n        this.cUsages = this.configService._cUsages;\n        this.valuesetStrengthOptions = this.configService._valuesetStrengthOptions;\n        this.constraintTypes = this.configService._constraintTypes;\n        this.assertionModes = this.configService._assertionModes;\n\n        this.route.data.map(data =>data.segmentStructure).subscribe(x=>{\n            console.log(x);\n            this.tocService.getNodesList(Types.DATATYPEREGISTRY).then((dtTOCdata) => {\n                let listTocDTs:any = dtTOCdata;\n                for(let entry of listTocDTs){\n                    var treeObj = entry.data;\n\n                    var dtLink:any = {};\n                    dtLink.id = treeObj.key.id;\n                    dtLink.label = treeObj.label;\n                    dtLink.domainInfo = treeObj.domainInfo;\n                    var index = treeObj.label.indexOf(\"_\");\n                    if(index > -1){\n                        dtLink.name = treeObj.label.substring(0,index);\n                        dtLink.ext = treeObj.label.substring(index);;\n                    }else {\n                        dtLink.name = treeObj.label;\n                        dtLink.ext = null;\n                    }\n\n                    if(treeObj.lazyLoading) dtLink.leaf = false;\n                    else dtLink.leaf = true;\n                    this.datatypesLinks.push(dtLink);\n\n                    var dtOption = {label: dtLink.label, value : dtLink.id};\n                    this.datatypeOptions.push(dtOption);\n                }\n\n\n                this.tocService.getNodesList(Types.VALUESETREGISTRY).then((valuesetTOCdata) => {\n                    let listTocVSs: any = valuesetTOCdata;\n\n                    for (let entry of listTocVSs) {\n                        var treeObj = entry.data;\n                        var valuesetLink: any = {};\n                        valuesetLink.id = treeObj.key.id;\n                        valuesetLink.label = treeObj.label;\n                        valuesetLink.domainInfo = treeObj.domainInfo;\n                        this.valuesetsLinks.push(valuesetLink);\n                        var vsOption = {label: valuesetLink.label, value: valuesetLink.id};\n                        this.valuesetOptions.push(vsOption);\n                    }\n\n                    this.segmentStructure = {};\n                    this.segmentStructure.name = x.name;\n                    this.segmentStructure.ext = x.ext;\n                    this.segmentStructure.scope = x.scope;\n\n                    this.updateDatatype(this.segmentStructure, x.children, x.binding, null, null, null, null, null, null);\n\n                    this.backup=__.cloneDeep(this.segmentStructure);\n                });\n            });\n\n        });\n    }\n\n    reset(){\n        this.segmentStructure=__.cloneDeep(this.backup);\n    }\n\n    getCurrent(){\n        return  this.segmentStructure;\n    }\n\n    getBackup(){\n        return this.backup;\n    }\n\n    isValid(){\n        // return !this.editForm.invalid;\n        return true;\n    }\n\n    save(): Promise<any>{\n        return this.segmentsService.saveSegmentStructure(this.segmentId, this.segmentStructure);\n    }\n\n    updateDatatype(node, children, currentBinding, parentFieldId, fieldDT, segmentBinding, fieldDTbinding, parentDTId, parentDTName){\n        for (let entry of children) {\n            if(!entry.data.displayData) entry.data.displayData = {};\n            entry.data.displayData.datatype = this.getDatatypeLink(entry.data.ref.id);\n            entry.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(entry.data.displayData.datatype.name,entry.data.position, parentDTName, this.segmentStructure.name, entry.data.displayData.type);\n            entry.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(entry.data.displayData.datatype.name, entry.data.displayData.datatype.domainInfo.version);\n            if(entry.data.displayData.valuesetAllowed) entry.data.displayData.multipleValuesetAllowed =  this.configService.isMultipleValuseSetAllowed(entry.data.displayData.datatype.name);\n            if(entry.data.displayData.datatype.leaf) entry.leaf = true;\n            else entry.leaf = false;\n\n            if(parentFieldId === null){\n                entry.data.displayData.idPath = entry.data.id;\n            }else{\n                entry.data.displayData.idPath = parentFieldId + '-' + entry.data.id;\n            }\n\n            if(entry.data.displayData.idPath.split(\"-\").length === 1){\n                entry.data.displayData.type = 'FIELD';\n                entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath, currentBinding);\n                if(entry.data.usage === 'C' && !entry.data.displayData.segmentBinding) {\n                    entry.data.displayData.segmentBinding = {};\n                }\n                if(entry.data.usage === 'C' && !entry.data.displayData.segmentBinding.predicate){\n                    entry.data.displayData.segmentBinding.predicate = {};\n                }\n            }else if(entry.data.displayData.idPath.split(\"-\").length === 2){\n                entry.data.displayData.type = 'COMPONENT';\n                entry.data.displayData.fieldDT = parentDTId;\n                entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], segmentBinding);\n                entry.data.displayData.fieldDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[1], currentBinding);\n            }else if(entry.data.displayData.idPath.split(\"-\").length === 3){\n                entry.data.displayData.type = \"SUBCOMPONENT\";\n                entry.data.displayData.fieldDT = fieldDT;\n                entry.data.displayData.componentDT = parentDTId;\n                entry.data.displayData.segmentBinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], segmentBinding);\n                entry.data.displayData.fieldDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], fieldDTbinding);\n                entry.data.displayData.componentDTbinding = this.findBinding(entry.data.displayData.idPath.split(\"-\")[2], currentBinding);\n            }\n\n            this.setHasSingleCode(entry.data.displayData);\n            this.setHasValueSet(entry.data.displayData);\n        }\n\n        node.children = children;\n    }\n\n    setHasSingleCode(displayData){\n        if(displayData.segmentBinding || displayData.fieldDTbinding || displayData.componentDTbinding){\n            if(displayData.segmentBinding && displayData.segmentBinding.internalSingleCode && displayData.segmentBinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.segmentBinding && displayData.segmentBinding.externalSingleCode && displayData.segmentBinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.internalSingleCode && displayData.fieldDTbinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.externalSingleCode && displayData.fieldDTbinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.internalSingleCode && displayData.componentDTbinding.internalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.externalSingleCode && displayData.componentDTbinding.externalSingleCode !== ''){\n                displayData.hasSingleCode = true;\n            }else {\n                displayData.hasSingleCode = false;\n            }\n        }else {\n            displayData.hasSingleCode = false;\n        }\n    }\n\n    setHasValueSet(displayData){\n        if(displayData.segmentBinding || displayData.fieldDTbinding || displayData.componentDTbinding){\n            if(displayData.segmentBinding && displayData.segmentBinding.valuesetBindings && displayData.segmentBinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else if(displayData.fieldDTbinding && displayData.fieldDTbinding.valuesetBindings && displayData.fieldDTbinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else if(displayData.componentDTbinding && displayData.componentDTbinding.valuesetBindings && displayData.componentDTbinding.valuesetBindings.length > 0){\n                displayData.hasValueSet = true;\n            }else {\n                displayData.hasValueSet = false;\n            }\n        }else {\n            displayData.hasValueSet = false;\n        }\n    }\n\n    getValueSetElm(id){\n        for(let link of this.valuesetsLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    getDatatypeElm(id){\n        for(let link of this.datatypesLinks){\n            if(link.id === id) return link;\n        }\n        return null;\n    }\n\n    addNewValueSet(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = [];\n        if(!node.data.displayData.segmentBinding.valuesetBindings) node.data.displayData.segmentBinding.valuesetBindings = [];\n\n        node.data.displayData.segmentBinding.valuesetBindings.push({edit:true, newvalue : {}});\n        this.valuesetColumnWidth = '500px';\n    }\n\n    updateValueSetBindings(binding){\n        var result = JSON.parse(JSON.stringify(binding));\n        if(result && result.valuesetBindings){\n            for(let vs of result.valuesetBindings){\n                var displayValueSetLink = this.getValueSetLink(vs.valuesetId);\n                // vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n                vs.label = displayValueSetLink.label;\n                vs.domainInfo = displayValueSetLink.domainInfo;\n            }\n        }\n        return result;\n    }\n\n    findBinding(id, binding){\n        if(binding && binding.children){\n            for(let b of binding.children){\n                if(b.elementId === id) return this.updateValueSetBindings(b);\n            }\n        }\n\n        return null;\n    }\n\n    delLength(node){\n        node.data.minLength = 'NA';\n        node.data.maxLength = 'NA';\n        node.data.confLength = '';\n    }\n\n    delConfLength(node){\n        node.data.minLength = '';\n        node.data.maxLength = '';\n        node.data.confLength = 'NA';\n    }\n\n    makeEditModeForDatatype(node){\n        node.data.displayData.datatype.edit = true;\n        node.data.displayData.datatype.dtOptions = [];\n\n        for (let dt of this.datatypesLinks) {\n            if(dt.name === node.data.displayData.datatype.name){\n                var dtOption = {label: dt.label, value : dt.id};\n                node.data.displayData.datatype.dtOptions.push(dtOption);\n            }\n        }\n        node.data.displayData.datatype.dtOptions.push({label: 'Change Datatype root', value : null});\n    }\n\n    loadNode(event) {\n        if(event.node && !event.node.children) {\n            var datatypeId = event.node.data.ref.id;\n            this.datatypesService.getDatatypeStructure(datatypeId).then(structure  => {\n                this.updateDatatype(event.node, structure.children, structure.binding, event.node.data.displayData.idPath, datatypeId, event.node.data.displayData.segmentBinding, event.node.data.displayData.fieldDTBinding, event.node.data.displayData.fieldDT, event.node.data.displayData.datatype.name);\n            });\n        }\n    }\n\n    onDatatypeChange(node){\n        if(!node.data.displayData.datatype.id) {\n            node.data.displayData.datatype.id = node.data.ref.id;\n        }\n        else node.data.ref.id = node.data.displayData.datatype.id;\n        node.data.displayData.datatype = this.getDatatypeLink(node.data.displayData.datatype.id);\n        node.children = null;\n        node.expanded = false;\n        if(node.data.displayData.datatype.leaf) node.leaf = true;\n        else node.leaf = false;\n        node.data.displayData.datatype.edit = false;\n\n\n        node.data.displayData.valuesetAllowed = this.configService.isValueSetAllow(node.data.displayData.datatype.name,node.data.position, null, null, node.data.displayData.type);\n        node.data.displayData.valueSetLocationOptions = this.configService.getValuesetLocations(node.data.displayData.datatype.name, node.data.displayData.datatype.domainInfo.version);\n    }\n\n    makeEditModeForValueSet(vs){\n        vs.newvalue = {};\n        vs.newvalue.valuesetId = vs.valuesetId;\n        vs.newvalue.strength = vs.strength;\n        vs.newvalue.valuesetLocations = vs.valuesetLocations;\n        vs.edit = true;\n        this.valuesetColumnWidth = '500px';\n    }\n\n    makeEditModeForComment(c){\n        c.newComment = {};\n        c.newComment.description = c.description;\n        c.edit = true;\n    }\n\n    addNewComment(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = [];\n        if(!node.data.displayData.segmentBinding.comments) node.data.displayData.segmentBinding.comments = [];\n        node.data.displayData.segmentBinding.comments.push({edit:true, newComment : {description:''}});\n    }\n\n    addNewSingleCode(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = {};\n        if(!node.data.displayData.segmentBinding.externalSingleCode) node.data.displayData.segmentBinding.externalSingleCode = {};\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCode = '';\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem = '';\n        node.data.displayData.segmentBinding.externalSingleCode.edit = true;\n    }\n\n    submitNewSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode.value = node.data.displayData.segmentBinding.externalSingleCode.newSingleCode;\n        node.data.displayData.segmentBinding.externalSingleCode.codeSystem = node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem;\n        node.data.displayData.segmentBinding.externalSingleCode.edit = false;\n    }\n\n    makeEditModeForSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCode = node.data.displayData.segmentBinding.externalSingleCode.value;\n        node.data.displayData.segmentBinding.externalSingleCode.newSingleCodeSystem = node.data.displayData.segmentBinding.externalSingleCode.codeSystem;\n        node.data.displayData.segmentBinding.externalSingleCode.edit = true;\n    }\n\n    deleteSingleCode(node){\n        node.data.displayData.segmentBinding.externalSingleCode = null;\n        node.data.displayData.hasSingleCode = false;\n    }\n\n    addNewConstantValue(node){\n        if(!node.data.displayData.segmentBinding) node.data.displayData.segmentBinding = {};\n        node.data.displayData.segmentBinding.constantValue = null;\n        node.data.displayData.segmentBinding.newConstantValue= '';\n        node.data.displayData.segmentBinding.editConstantValue = true;\n\n        console.log(node);\n    }\n\n    deleteConstantValue(node){\n        node.data.displayData.segmentBinding.constantValue = null;\n        node.data.displayData.segmentBinding.editConstantValue = false;\n    }\n\n    makeEditModeForConstantValue(node){\n        node.data.displayData.segmentBinding.newConstantValue = node.data.displayData.segmentBinding.constantValue;\n        node.data.displayData.segmentBinding.editConstantValue = true;\n    }\n\n    submitNewConstantValue(node){\n        node.data.displayData.segmentBinding.constantValue = node.data.displayData.segmentBinding.newConstantValue;\n        node.data.displayData.segmentBinding.editConstantValue = false;\n    }\n\n    submitNewValueSet(vs){\n        var displayValueSetLink = this.getValueSetLink(vs.newvalue.valuesetId);\n        vs.bindingIdentifier = displayValueSetLink.displayValueSetLink;\n        vs.label = displayValueSetLink.label;\n        vs.domainInfo = displayValueSetLink.domainInfo;\n        vs.valuesetId = vs.newvalue.valuesetId;\n        vs.strength = vs.newvalue.strength;\n        vs.valuesetLocations = vs.newvalue.valuesetLocations;\n        vs.edit = false;\n        this.valuesetColumnWidth = '200px';\n    }\n\n    submitNewComment(c){\n        c.description = c.newComment.description;\n        c.dateupdated = new Date();\n        c.edit = false;\n    }\n\n    delValueSetBinding(binding, vs, node){\n        binding.valuesetBindings = _.without(binding.valuesetBindings, _.findWhere(binding.valuesetBindings, {valuesetId: vs.valuesetId}));\n        this.setHasValueSet(node);\n    }\n\n    delCommentBinding(binding, c){\n        binding.comments = _.without(binding.comments, _.findWhere(binding.comments, c));\n    }\n\n    delTextDefinition(node){\n        node.data.text = null;\n    }\n\n    getDatatypeLink(id){\n        for (let dt of this.datatypesLinks) {\n            if(dt.id === id) return JSON.parse(JSON.stringify(dt));\n        }\n        console.log(\"Missing DT:::\" + id);\n        return null;\n    }\n\n    getValueSetLink(id){\n        for(let v of this.valuesetsLinks) {\n            if(v.id === id) return JSON.parse(JSON.stringify(v));\n        }\n        console.log(\"Missing ValueSet:::\" + id);\n        return null;\n    }\n\n    editTextDefinition(node){\n        this.selectedNode = node;\n        this.textDefinitionDialogOpen = true;\n    }\n\n    truncate(txt){\n        if(txt.length < 10) return txt;\n        else return txt.substring(0,10) + \"...\";\n    }\n\n    print(data){\n        console.log(data);\n    }\n\n    editPredicate(node){\n        this.selectedNode = node;\n        if(this.selectedNode.data.displayData.segmentBinding) this.selectedPredicate = JSON.parse(JSON.stringify(this.selectedNode.data.displayData.segmentBinding.predicate));\n        if(!this.selectedPredicate) this.selectedPredicate = {};\n\n        this.idMap = {};\n        this.treeData = [];\n\n        this.segmentsService.getSegmentStructure(this.segmentId).then(segStructure  => {\n            this.idMap[this.segmentId] = {name:segStructure.name};\n\n            var rootData = {elementId:this.segmentId};\n\n            for (let child of segStructure.children) {\n                var childData =  JSON.parse(JSON.stringify(rootData));\n                childData.child = {\n                    elementId: child.data.id,\n                };\n\n                if(child.data.max === '1'){\n                    childData.child.instanceParameter = '1';\n                }else{\n                    childData.child.instanceParameter = '*';\n                }\n\n                var treeNode = {\n                    label: child.data.name,\n                    data : childData,\n                    expandedIcon: \"fa-folder-open\",\n                    collapsedIcon: \"fa-folder\",\n                };\n\n                var data = {\n                    id: child.data.id,\n                    name: child.data.name,\n                    max: child.data.max,\n                    position: child.data.position,\n                    usage: child.data.usage,\n                    dtId: child.data.ref.id\n                };\n\n                this.idMap[this.segmentId + '-' + data.id] = data;\n                this.popChild(this.segmentId + '-' + data.id, data.dtId, treeNode);\n                this.treeData.push(treeNode);\n            }\n        });\n        this.preciateEditorOpen = true;\n    }\n\n    submitCP(){\n        if(this.selectedPredicate.type === 'ASSERTION') {\n            this.constraintsService.generateDescriptionForSimpleAssertion(this.selectedPredicate.assertion, this.idMap);\n            this.selectedPredicate.assertion.description = 'If ' + this.selectedPredicate.assertion.description;\n            this.selectedPredicate.freeText = undefined;\n        }\n        if(!this.selectedNode.data.displayData.segmentBinding) this.selectedNode.data.displayData.segmentBinding = {};\n        this.selectedNode.data.displayData.segmentBinding.predicate = this.selectedPredicate;\n        this.preciateEditorOpen = false;\n        this.selectedPredicate = {};\n        this.selectedNode = null;\n    }\n\n    changeType(){\n        if(this.selectedPredicate.type == 'ASSERTION'){\n            this.selectedPredicate.assertion = {};\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.type == 'FREE'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINEDPATTERNS'){\n            this.selectedPredicate.assertion = undefined;\n        }else if(this.selectedPredicate.type == 'PREDEFINED'){\n            this.selectedPredicate.assertion = undefined;\n        }\n    }\n\n    changeAssertionMode(){\n        if(this.selectedPredicate.assertion.mode == 'SIMPLE'){\n            this.selectedPredicate.assertion = {mode:\"SIMPLE\"};\n        }else if(this.selectedPredicate.assertion.mode == 'COMPLEX'){\n            this.selectedPredicate.assertion = {mode:\"COMPLEX\"};\n        }\n    }\n\n    popChild(id, dtId, parentTreeNode){\n        this.datatypesService.getDatatypeStructure(dtId).then( dtStructure  => {\n            this.idMap[id].dtName = dtStructure.name;\n            if(dtStructure.children){\n                for (let child of dtStructure.children) {\n                    var childData =  JSON.parse(JSON.stringify(parentTreeNode.data));\n\n                    this.makeChild(childData, child.data.id, '1');\n\n                    var treeNode = {\n                        label: child.data.name,\n                        data:childData,\n                        expandedIcon: \"fa-folder-open\",\n                        collapsedIcon: \"fa-folder\",\n                    };\n\n                    var data = {\n                        id: child.data.id,\n                        name: child.data.name,\n                        max: \"1\",\n                        position: child.data.position,\n                        usage: child.data.usage,\n                        dtId: child.data.ref.id\n                    };\n                    this.idMap[id + '-' + data.id] = data;\n\n                    this.popChild(id + '-' + data.id, data.dtId, treeNode);\n\n                    if(!parentTreeNode.children) parentTreeNode.children = [];\n                    parentTreeNode.children.push(treeNode);\n\n                }\n            }\n        });\n    }\n\n    makeChild(data, id, para){\n        if(data.child) this.makeChild(data.child, id, para);\n        else data.child = {\n            elementId: id,\n            instanceParameter: para\n        }\n    }\n\n    onUsageChange(node){\n        if(node.data.usage === 'C') {\n            if(!node.data.displayData.segmentBinding) {\n                node.data.displayData.segmentBinding = {};\n            }\n            if(!node.data.displayData.segmentBinding.predicate){\n                node.data.displayData.segmentBinding.predicate = {};\n            }\n        }else if(node.data.usage !== 'C') {\n            if(node.data.displayData.segmentBinding && node.data.displayData.segmentBinding.predicate) {\n                node.data.displayData.segmentBinding.predicate = undefined;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.component.ts","/**\n * Created by ena3 on 5/18/18.\n */\n/**\n * Created by ena3 on 4/16/18.\n */\n\nimport {Injectable}  from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SegmentsService} from \"../../../../service/segments/segments.service\";\n\n\n@Injectable()\nexport  class SegmentEditStructureResolver implements Resolve<any>{\n\n\n    constructor(private http: HttpClient,private segmentService: SegmentsService) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot, rstate : RouterStateSnapshot): Promise<any>{\n        let segmentId= route.params[\"segmentId\"];\n        return this.segmentService.getSegmentStructure(segmentId);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/segment-edit/segment-structure/segment-edit-structure.resolver.ts","/**\n * Created by ena3 on 10/26/17.\n */\nimport {Injectable}  from \"@angular/core\";\nimport {BehaviorSubject} from \"rxjs\";\n\nimport * as _ from 'lodash';\nimport {Types} from \"../../../common/constants/types\";\nimport {IndexedDbService} from \"../../../service/indexed-db/indexed-db.service\";\n\n\n@Injectable()\nexport  class TocService{\n\n  activeNode :BehaviorSubject<any> =new BehaviorSubject(null);\n  constructor(private dbService:IndexedDbService){\n  }\n\n  setActiveNode(node){\n    this.activeNode.next(node);\n  }\n  getActiveNode(){\n\n    return  this.activeNode;\n  }\n\n  findDirectChildByType(nodes, type){\n\n    for(let i=0;i<nodes.length; i++){\n      if(nodes[i].data.type==type){\n        return nodes[i];\n      }\n    }\n    return null;\n\n  }\n  addNodesByType(toAdd, toc,type ){\n    var profile= this.findDirectChildByType(toc,Types.PROFILE);\n    var registry = this.findDirectChildByType(profile.children,type);\n    var position=registry.children.length+1;\n    for(let i=0 ; i<toAdd.length; i++){\n      toAdd[i].data.position =position;\n      position++;\n      registry.children.push(toAdd[i]);\n    }\n\n\n  }\n\n  getNameUnicityIndicators(nodes,type){\n\n\n    if(type==Types.SEGMENTREGISTRY){\n      return this.getNameUnicityIndicatorsForSegment(nodes, type);\n    }else if(type==Types.DATATYPEREGISTRY){\n      return this.getNameUnicityIndicatorsForDatatype(nodes,type);\n    }\n  }\n\n  getNameUnicityIndicatorsForSegment(nodes, type){\n    var profile= this.findDirectChildByType(nodes,Types.PROFILE);\n    var registry = this.findDirectChildByType(profile.children,type);\n    return _.map(registry.children, function (obj) {\n      return obj.data.label+obj.data.ext;\n\n    });\n  }\n\n\n  getRegistryByType(nodes, type){\n    var profile= this.findDirectChildByType(nodes,Types.PROFILE);\n    if(profile !=null){\n      return  this.findDirectChildByType(profile.children,type);\n\n    }\n\n  }\n\n  getNameUnicityIndicatorsForDatatype(nodes, type){\n    var profile= this.findDirectChildByType(nodes,Types.PROFILE);\n    var registry = this.findDirectChildByType(profile.children,type);\n    return _.map(registry.children, function (obj) {\n      return obj.data.label+obj.data.ext;\n    });\n\n  }\n\n  getNodesList(type){\n    return new Promise((resolve, reject)=>{\n    this.dbService.getIgDocument().then(\n      x => {\n        if(x.toc){\n          resolve(this.findRegistryByType(x.toc,type));\n        }else{\n          console.log(\"Could not find the toc \")\n        }\n      },\n      error=>{\n\n        console.log(\"Could not find the toc \")\n\n      }\n    )\n  })\n  };\n\n  getCurrentSegmentList(id){\n\n  }\n  getCurrentConformanceProfileList(id){\n\n  }\n  getCurrentValueSetList(id){\n\n  }\n\n\n  findRegistryByType(toc, type){\n\n    var profile = _.find(toc, function(node) { return Types.PROFILE == node.data.type;});\n    if(profile&&profile.children){\n\n\n\n\n    var registry=  _.find(profile.children, function(node) { return type == node.data.type;});\n\n    if(registry !=null){\n      return registry.children;\n    }\n    else{\n      return null;\n    }\n\n\n  }else{\n\n      return null;\n    }\n  }\n\n\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/igdocuments/igdocument-edit/service/toc.service.ts","/**\n * Created by hnt5 on 10/30/17.\n */\nimport {NgModule}     from '@angular/core';\n\nimport {FormsModule} from '@angular/forms';\nimport {DisplayBadgeComponent} from \"../common/badge/display-badge.component\";\nimport {EditFreeConstraintComponent} from \"../common/constraint/edit-freeconstraint.component\";\nimport {EditSimpleConstraintComponent} from \"../common/constraint/edit-simpleconstraint.component\";\nimport {EditComplexConstraintComponent} from \"../common/constraint/edit-complexconstraint.component\";\nimport {EditAndOrConstraintComponent} from \"../common/constraint/edit-andorconstraint.component\";\nimport {EditNotConstraintComponent} from \"../common/constraint/edit-notconstraint.component\";\nimport {EditIfThenConstraintComponent} from \"../common/constraint/edit-ifthenconstraint.component\";\n\nimport {DtFlavorPipe} from \"../igdocuments/igdocument-edit/segment-edit/segment-definition/coconstraint-table/datatype-name.pipe\";\nimport {CommonModule} from \"@angular/common\";\nimport {EntityHeaderComponent} from \"../common/entity-header/entity-header.component\";\nimport {DisplayLabelComponent} from \"../common/label/display-label.component\";\nimport {Routes, RouterModule, ActivatedRouteSnapshot} from \"@angular/router\";\n\nimport {ButtonModule} from 'primeng/primeng';\nimport {DisplayRefComponent} from \"../common/tree-table-label/display-ref.component\";\nimport {DisplaySingleCodeComponent} from \"../common/tree-table-label/display-singlecode.component\";\nimport {DisplayConstantValueComponent} from \"../common/tree-table-label/display-constantvalue.component\";\nimport {DisplayCommentComponent} from \"../common/tree-table-label/display-comment.component\";\nimport {DisplayPathComponent} from \"../common/constraint/display-path.component\";\n\nimport {DropdownModule} from 'primeng/dropdown';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {TreeModule} from 'primeng/tree';\nimport {DialogModule} from 'primeng/dialog';\nimport {PanelModule} from 'primeng/panel';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ButtonModule,\n    FormsModule,\n    DropdownModule,\n    CheckboxModule,\n    TreeModule,\n    DialogModule,\n    PanelModule\n  ],\n  declarations: [\n    DisplayBadgeComponent,\n    EntityHeaderComponent,\n    DtFlavorPipe,\n    DisplayLabelComponent,\n    DisplayRefComponent,\n    DisplaySingleCodeComponent,\n    DisplayConstantValueComponent,\n    DisplayCommentComponent,\n    EditFreeConstraintComponent,\n    EditSimpleConstraintComponent,\n    EditComplexConstraintComponent,\n    DisplayPathComponent,\n    EditAndOrConstraintComponent,\n    EditNotConstraintComponent,\n    EditIfThenConstraintComponent\n  ],\n\n  exports: [\n    DisplayBadgeComponent,\n    EntityHeaderComponent,\n    DtFlavorPipe,\n    DisplayLabelComponent,\n    DisplayRefComponent,\n    DisplaySingleCodeComponent,\n    DisplayConstantValueComponent,\n    DisplayCommentComponent,\n    EditFreeConstraintComponent,\n    EditSimpleConstraintComponent,\n    EditComplexConstraintComponent,\n    DisplayPathComponent,\n    EditAndOrConstraintComponent,\n    EditNotConstraintComponent,\n    EditIfThenConstraintComponent\n  ]\n})\nexport class UtilsModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ena3/hl7-igamt/igamt-hl7-client/src/app/utils/utils.module.ts","import { Directive, ElementRef, Input, Output, EventEmitter, forwardRef, NgZone } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nvar FroalaEditorDirective = (function () {\n    function FroalaEditorDirective(el, zone) {\n        this.zone = zone;\n        // editor options\n        this._opts = {\n            immediateAngularModelUpdate: false,\n            angularIgnoreAttrs: null\n        };\n        this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n        this.INNER_HTML_ATTR = 'innerHTML';\n        this._hasSpecialTag = false;\n        this._listeningEvents = [];\n        this._editorInitialized = false;\n        this._oldModel = null;\n        // Begin ControlValueAccesor methods.\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        // froalaModel directive as output: update model if editor contentChanged\n        this.froalaModelChange = new EventEmitter();\n        // froalaInit directive as output: send manual editor initialization\n        this.froalaInit = new EventEmitter();\n        var element = el.nativeElement;\n        // check if the element is a special tag\n        if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) != -1) {\n            this._hasSpecialTag = true;\n        }\n        // jquery wrap and store element\n        this._$element = $(element);\n        this.zone = zone;\n    }\n    // Form model content changed.\n    // Form model content changed.\n    FroalaEditorDirective.prototype.writeValue = \n    // Form model content changed.\n    function (content) {\n        this.updateEditor(content);\n    };\n    FroalaEditorDirective.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    FroalaEditorDirective.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    Object.defineProperty(FroalaEditorDirective.prototype, \"froalaEditor\", {\n        set: \n        // End ControlValueAccesor methods.\n        // froalaEditor directive as input: store the editor options\n        function (opts) {\n            this._opts = opts || this._opts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FroalaEditorDirective.prototype, \"froalaModel\", {\n        set: \n        // froalaModel directive as input: store initial editor content\n        function (content) {\n            this.updateEditor(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Update editor with model contents.\n    // Update editor with model contents.\n    FroalaEditorDirective.prototype.updateEditor = \n    // Update editor with model contents.\n    function (content) {\n        if (JSON.stringify(this._oldModel) == JSON.stringify(content)) {\n            return;\n        }\n        this._oldModel = content;\n        if (this._editorInitialized) {\n            this._$element.froalaEditor('html.set', content);\n        }\n        else {\n            this._$element.html(content);\n        }\n    };\n    // update model if editor contentChanged\n    // update model if editor contentChanged\n    FroalaEditorDirective.prototype.updateModel = \n    // update model if editor contentChanged\n    function () {\n        var _this = this;\n        this.zone.run(function () {\n            var modelContent = null;\n            if (_this._hasSpecialTag) {\n                var attributeNodes = _this._$element[0].attributes;\n                var attrs = {};\n                for (var i = 0; i < attributeNodes.length; i++) {\n                    var attrName = attributeNodes[i].name;\n                    if (_this._opts.angularIgnoreAttrs && _this._opts.angularIgnoreAttrs.indexOf(attrName) != -1) {\n                        continue;\n                    }\n                    attrs[attrName] = attributeNodes[i].value;\n                }\n                if (_this._$element[0].innerHTML) {\n                    attrs[_this.INNER_HTML_ATTR] = _this._$element[0].innerHTML;\n                }\n                modelContent = attrs;\n            }\n            else {\n                var returnedHtml = _this._$element.froalaEditor('html.get');\n                if (typeof returnedHtml === 'string') {\n                    modelContent = returnedHtml;\n                }\n            }\n            _this._oldModel = modelContent;\n            // Update froalaModel.\n            // Update froalaModel.\n            _this.froalaModelChange.emit(modelContent);\n            // Update form model.\n            // Update form model.\n            _this.onChange(modelContent);\n        });\n    };\n    // register event on jquery element\n    // register event on jquery element\n    FroalaEditorDirective.prototype.registerEvent = \n    // register event on jquery element\n    function (element, eventName, callback) {\n        if (!element || !eventName || !callback) {\n            return;\n        }\n        this._listeningEvents.push(eventName);\n        element.on(eventName, callback);\n    };\n    FroalaEditorDirective.prototype.initListeners = function () {\n        var self = this;\n        // bind contentChange and keyup event to froalaModel\n        this.registerEvent(this._$element, 'froalaEditor.contentChanged', function () {\n            setTimeout(function () {\n                self.updateModel();\n            }, 0);\n        });\n        if (this._opts.immediateAngularModelUpdate) {\n            this.registerEvent(this._editor, 'keyup', function () {\n                setTimeout(function () {\n                    self.updateModel();\n                }, 0);\n            });\n        }\n    };\n    // register events from editor options\n    // register events from editor options\n    FroalaEditorDirective.prototype.registerFroalaEvents = \n    // register events from editor options\n    function () {\n        if (!this._opts.events) {\n            return;\n        }\n        for (var eventName in this._opts.events) {\n            if (this._opts.events.hasOwnProperty(eventName)) {\n                this.registerEvent(this._$element, eventName, this._opts.events[eventName]);\n            }\n        }\n    };\n    FroalaEditorDirective.prototype.createEditor = function () {\n        var _this = this;\n        if (this._editorInitialized) {\n            return;\n        }\n        this.setContent(true);\n        // Registering events before initializing the editor will bind the initialized event correctly.\n        this.registerFroalaEvents();\n        this.initListeners();\n        // init editor\n        this.zone.runOutsideAngular(function () {\n            _this._editor = _this._$element.froalaEditor(_this._opts).data('froala.editor').$el;\n        });\n        this._editorInitialized = true;\n    };\n    FroalaEditorDirective.prototype.setHtml = function () {\n        this._$element.froalaEditor('html.set', this._model || '', true);\n        // This will reset the undo stack everytime the model changes externally. Can we fix this?\n        this._$element.froalaEditor('undo.reset');\n        this._$element.froalaEditor('undo.saveStep');\n    };\n    FroalaEditorDirective.prototype.setContent = function (firstTime) {\n        if (firstTime === void 0) { firstTime = false; }\n        var self = this;\n        // Set initial content\n        if (this._model || this._model == '') {\n            this._oldModel = this._model;\n            if (this._hasSpecialTag) {\n                var tags = this._model;\n                // add tags on element\n                if (tags) {\n                    for (var attr in tags) {\n                        if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n                            this._$element.attr(attr, tags[attr]);\n                        }\n                    }\n                    if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n                        this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n                    }\n                }\n            }\n            else {\n                if (firstTime) {\n                    this.registerEvent(this._$element, 'froalaEditor.initialized', function () {\n                        self.setHtml();\n                    });\n                }\n                else {\n                    self.setHtml();\n                }\n            }\n        }\n    };\n    FroalaEditorDirective.prototype.destroyEditor = function () {\n        if (this._editorInitialized) {\n            this._$element.off(this._listeningEvents.join(\" \"));\n            this._editor.off('keyup');\n            this._$element.froalaEditor('destroy');\n            this._listeningEvents.length = 0;\n            this._editorInitialized = false;\n        }\n    };\n    FroalaEditorDirective.prototype.getEditor = function () {\n        if (this._$element) {\n            return this._$element.froalaEditor.bind(this._$element);\n        }\n        return null;\n    };\n    // send manual editor initialization\n    // send manual editor initialization\n    FroalaEditorDirective.prototype.generateManualController = \n    // send manual editor initialization\n    function () {\n        var self = this;\n        var controls = {\n            initialize: this.createEditor.bind(this),\n            destroy: this.destroyEditor.bind(this),\n            getEditor: this.getEditor.bind(this),\n        };\n        this.froalaInit.emit(controls);\n    };\n    // TODO not sure if ngOnInit is executed after @inputs\n    // TODO not sure if ngOnInit is executed after @inputs\n    FroalaEditorDirective.prototype.ngOnInit = \n    // TODO not sure if ngOnInit is executed after @inputs\n    function () {\n        // check if output froalaInit is present. Maybe observers is private and should not be used?? TODO how to better test that an output directive is present.\n        if (!this.froalaInit.observers.length) {\n            this.createEditor();\n        }\n        else {\n            this.generateManualController();\n        }\n    };\n    FroalaEditorDirective.prototype.ngOnDestroy = function () {\n        this.destroyEditor();\n    };\n    FroalaEditorDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[froalaEditor]',\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(function () { return FroalaEditorDirective; }),\n                            multi: true\n                        }]\n                },] },\n    ];\n    /** @nocollapse */\n    FroalaEditorDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NgZone, },\n    ]; };\n    FroalaEditorDirective.propDecorators = {\n        \"froalaEditor\": [{ type: Input },],\n        \"froalaModel\": [{ type: Input },],\n        \"froalaModelChange\": [{ type: Output },],\n        \"froalaInit\": [{ type: Output },],\n    };\n    return FroalaEditorDirective;\n}());\nexport { FroalaEditorDirective };\n//# sourceMappingURL=editor.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/editor.directive.js\n// module id = ../../../../angular-froala-wysiwyg/editor/editor.directive.js\n// module chunks = common","import { NgModule } from '@angular/core';\nimport { FroalaEditorDirective } from './editor.directive';\nvar FroalaEditorModule = (function () {\n    function FroalaEditorModule() {\n    }\n    FroalaEditorModule.forRoot = function () {\n        return { ngModule: FroalaEditorModule, providers: [] };\n    };\n    FroalaEditorModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [FroalaEditorDirective],\n                    exports: [FroalaEditorDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    FroalaEditorModule.ctorParameters = function () { return []; };\n    return FroalaEditorModule;\n}());\nexport { FroalaEditorModule };\n//# sourceMappingURL=editor.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/editor.module.js\n// module id = ../../../../angular-froala-wysiwyg/editor/editor.module.js\n// module chunks = common","export { FroalaEditorDirective } from './editor.directive';\nexport { FroalaEditorModule } from './editor.module';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/editor/index.js\n// module id = ../../../../angular-froala-wysiwyg/editor/index.js\n// module chunks = common","import { NgModule } from '@angular/core';\nimport { FroalaEditorModule } from './editor';\nimport { FroalaViewModule } from './view';\nexport { FroalaEditorDirective, FroalaEditorModule } from './editor';\nexport { FroalaViewDirective, FroalaViewModule } from './view';\nvar MODULES = [\n    FroalaEditorModule,\n    FroalaViewModule\n];\nvar FERootModule = (function () {\n    function FERootModule() {\n    }\n    FERootModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        FroalaEditorModule.forRoot(),\n                        FroalaViewModule.forRoot()\n                    ],\n                    exports: MODULES\n                },] },\n    ];\n    /** @nocollapse */\n    FERootModule.ctorParameters = function () { return []; };\n    return FERootModule;\n}());\nexport { FERootModule };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/index.js\n// module id = ../../../../angular-froala-wysiwyg/index.js\n// module chunks = common","export { FroalaViewDirective } from './view.directive';\nexport { FroalaViewModule } from './view.module';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/index.js\n// module id = ../../../../angular-froala-wysiwyg/view/index.js\n// module chunks = common","import { Directive, ElementRef, Renderer, Input } from '@angular/core';\nvar FroalaViewDirective = (function () {\n    function FroalaViewDirective(renderer, element) {\n        this.renderer = renderer;\n        this._element = element.nativeElement;\n    }\n    Object.defineProperty(FroalaViewDirective.prototype, \"froalaView\", {\n        set: \n        // update content model as it comes\n        function (content) {\n            this._element.innerHTML = content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FroalaViewDirective.prototype.ngAfterViewInit = function () {\n        this.renderer.setElementClass(this._element, \"fr-view\", true);\n    };\n    FroalaViewDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[froalaView]'\n                },] },\n    ];\n    /** @nocollapse */\n    FroalaViewDirective.ctorParameters = function () { return [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ]; };\n    FroalaViewDirective.propDecorators = {\n        \"froalaView\": [{ type: Input },],\n    };\n    return FroalaViewDirective;\n}());\nexport { FroalaViewDirective };\n//# sourceMappingURL=view.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/view.directive.js\n// module id = ../../../../angular-froala-wysiwyg/view/view.directive.js\n// module chunks = common","import { NgModule } from '@angular/core';\nimport { FroalaViewDirective } from './view.directive';\nvar FroalaViewModule = (function () {\n    function FroalaViewModule() {\n    }\n    FroalaViewModule.forRoot = function () {\n        return { ngModule: FroalaViewModule, providers: [] };\n    };\n    FroalaViewModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [FroalaViewDirective],\n                    exports: [FroalaViewDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    FroalaViewModule.ctorParameters = function () { return []; };\n    return FroalaViewModule;\n}());\nexport { FroalaViewModule };\n//# sourceMappingURL=view.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/angular-froala-wysiwyg/view/view.module.js\n// module id = ../../../../angular-froala-wysiwyg/view/view.module.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/accordion/accordion\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/accordion.js\n// module id = ../../../../primeng/accordion.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/button/button\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/button.js\n// module id = ../../../../primeng/button.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/checkbox/checkbox\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/checkbox.js\n// module id = ../../../../primeng/checkbox.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/dialog.js\n// module id = ../../../../primeng/dialog.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dropdown/dropdown\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/dropdown.js\n// module id = ../../../../primeng/dropdown.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/panel/panel\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/panel.js\n// module id = ../../../../primeng/panel.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/selectbutton.js\n// module id = ../../../../primeng/selectbutton.js\n// module chunks = common","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/tree/tree\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/primeng/tree.js\n// module id = ../../../../primeng/tree.js\n// module chunks = common","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_switchMap PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { switchMap } from '../../operator/switchMap';\nObservable.prototype.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/add/operator/switchMap.js\n// module id = ../../../../rxjs/_esm5/add/operator/switchMap.js\n// module chunks = common","/** PURE_IMPORTS_START .._operators_switchMap PURE_IMPORTS_END */\nimport { switchMap as higherOrderSwitchMap } from '../operators/switchMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    return higherOrderSwitchMap(project, resultSelector)(this);\n}\n//# sourceMappingURL=switchMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/operator/switchMap.js\n// module id = ../../../../rxjs/_esm5/operator/switchMap.js\n// module chunks = common","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/rxjs/_esm5/operators/switchMap.js\n// module id = ../../../../rxjs/_esm5/operators/switchMap.js\n// module chunks = common","//     Underscore.js 1.9.0\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.0';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return obj != null && hasOwnProperty.call(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ena3/hl7-igamt/igamt-hl7-client/node_modules/underscore/underscore.js\n// module id = ../../../../underscore/underscore.js\n// module chunks = common"],"sourceRoot":"webpack:///"}